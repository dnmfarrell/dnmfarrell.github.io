<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software-quality on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/software-quality/</link>
    <description>Recent content in software-quality on Code - a programming blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Feb 2024 13:24:08 -0500</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/software-quality/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Best Way to Improve Software Quality</title>
      <link>https://blog.dnmfarrell.com/post/the-best-way-to-improve-software-quality/</link>
      <pubDate>Sun, 04 Feb 2024 13:24:08 -0500</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/the-best-way-to-improve-software-quality/</guid>
      <description>About five years ago I was working on a team that managed a web app for our enterprise customers. It had been forked from our original app specifically to meet the needs of larger clients. Despite both apps&#39; shared heritage, they did not perform equally well. My team&amp;rsquo;s app build almost never failed, yet the original app build was red a third of the time, preventing new code from being deployed until the issue had been resolved.</description>
    </item>
    
  </channel>
</rss>
