<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>monad on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/monad/</link>
    <description>Recent content in monad on Code - a programming blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Feb 2023 07:39:14 -0500</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/monad/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monads Can Simplify Go&#39;s Error Handling</title>
      <link>https://blog.dnmfarrell.com/post/monads-simplify-go-error-handling/</link>
      <pubDate>Fri, 24 Feb 2023 07:39:14 -0500</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/monads-simplify-go-error-handling/</guid>
      <description>Roughly a year ago I wrote about my attempts to tackle Go&amp;rsquo;s error handling problem using generics. I wasn&amp;rsquo;t very successful:
 This code is almost as long as the original and frankly, hurts my eyes.
 Since then I&amp;rsquo;ve continued experimenting with the idea and think I have something worth sharing. But first, let me recap the problem with an example.
Parsing Truthiness Many programming languages have the concept of truthiness, that decides whether or not an expression will evaluate as true or false in a boolean context.</description>
    </item>
    
  </channel>
</rss>
