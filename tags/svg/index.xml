<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Svg on Perl programming news, code and culture</title>
    <link>http://perltricks.com/tags/svg/</link>
    <description>Recent content in Svg on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Jul 2016 09:34:38 +0000</lastBuildDate>
    <atom:link href="http://perltricks.com/tags/svg/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - June 2016</title>
      <link>http://perltricks.com/article/what-s-new-on-cpan---june-2016/</link>
      <pubDate>Wed, 13 Jul 2016 09:34:38 +0000</pubDate>
      
      <guid>http://perltricks.com/article/what-s-new-on-cpan---june-2016/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. June saw YAPC::NA (among other conferences) which meant CPAN activity was lower than normal. I&amp;rsquo;m expecting a bumper July though; for now enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:3eb441e242dd6932e7a620f4de77124c&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Licensecheck&#34;&gt;App::Licensecheck&lt;/a&gt; inspects source files for licenses&lt;/li&gt;
&lt;li&gt;Use the Runkeeper (Health Graph) API with &lt;a href=&#34;https://metacpan.org/pod/WebService::HealthGraph&#34;&gt;WebService::HealthGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::SQLFormat&#34;&gt;WebService::SQLFormat&lt;/a&gt; formats SQL via the sqlformat.org API&lt;/li&gt;
&lt;li&gt;Monitor the status of other plack applications using &lt;a href=&#34;https://metacpan.org/pod/Plack::App::ServiceStatus&#34;&gt;Plack::App::ServiceStatus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;In the docs for &lt;a href=&#34;https://metacpan.org/pod/Acme::Devel::Hide::Tiny&#34;&gt;Acme::Devel::Hide::Tiny&lt;/a&gt; author David Golden shows how to force the unavailability of a module for testing without adding a test dependency&lt;/li&gt;
&lt;li&gt;Get a single list of all dependencies (including indirect ones) for a distribution with &lt;a href=&#34;https://metacpan.org/pod/CPAN::Flatten&#34;&gt;CPAN::Flatten&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::EAV&#34;&gt;DBIx::EAV&lt;/a&gt; enables Entity-Attribute-Value data modeling (aka &amp;lsquo;open schema&amp;rsquo;) via DBI&lt;/li&gt;
&lt;li&gt;Useful testing tool: generate random IPs with &lt;a href=&#34;https://metacpan.org/pod/IP::Random&#34;&gt;IP::Random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Estimates the length of all the vectors in an SVG file using &lt;a href=&#34;https://metacpan.org/pod/SVG::Estimate&#34;&gt;SVG::Estimate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/String::Normal&#34;&gt;String::Normal&lt;/a&gt; is another text normalization module&lt;/li&gt;
&lt;li&gt;Extract strings from markup with &lt;a href=&#34;https://metacpan.org/pod/XML::Lenient&#34;&gt;XML::Lenient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get convenient, fast and jQuery-like DOM manipulation with &lt;a href=&#34;https://metacpan.org/pod/XML::LibXML::jQuery&#34;&gt;XML::LibXML::jQuery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use U2F authentication with your app using with &lt;a href=&#34;https://metacpan.org/pod/Authen::U2F&#34;&gt;Authen::U2F&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDF::PDFUnit&#34;&gt;PDF::PDFUnit&lt;/a&gt; Perl interface to the Java PDFUnit testing framework&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://metacpan.org/pod/Parallel::Dragons&#34;&gt;Parallel::Dragons&lt;/a&gt; abstract says &amp;ldquo;Daemon are forever&amp;hellip; Dragons lay eggs, grow fast and die in flames!&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Useful Perl::Critic policies:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::Moo::ProhibitMakeImmutable&#34;&gt;Perl::Critic::Policy::Moo::ProhibitMakeImmutable&lt;/a&gt; checks that Moo classes do not contain calls to make_immutable รก la Moose&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::TryTiny::RequireBlockTermination&#34;&gt;Perl::Critic::Policy::TryTiny::RequireBlockTermination&lt;/a&gt; checks that try/catch/finally blocks are properly terminated - this is so easy to get wrong and the error message is often cryptic.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::TryTiny::RequireUse&#34;&gt;Perl::Critic::Policy::TryTiny::RequireUse&lt;/a&gt; checks that code which uses Try::Tiny actually imports it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do meta programming with &lt;a href=&#34;https://metacpan.org/pod/Sub::Attributes&#34;&gt;Sub::Attributes&lt;/a&gt; (disclosure - I am the module author)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Medical: a SLURM-specific driver for HPCI using &lt;a href=&#34;https://metacpan.org/pod/HPCD::SLURM&#34;&gt;HPCD::SLURM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;New chip drivers:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::PCF8574&#34;&gt;Device::Chip::PCF8574&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::SSD1306&#34;&gt;Device::Chip::SSD1306&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Solve for the WordBrain mobile Game with &lt;a href=&#34;https://metacpan.org/pod/Game::WordBrain&#34;&gt;Game::WordBrain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ham radio enthusiasts:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Ham::WSJTX::Logparse&#34;&gt;Ham::WSJTX::Logparse&lt;/a&gt; parses ALL.TXT log files from Joe Taylor K1JT&amp;rsquo;s WSJT-X, to extract CQ and calling station information for all entries in a given amateur band&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Ham::WorldMap&#34;&gt;Ham::WorldMap&lt;/a&gt; creates an Imager image containing an equirectangular projection of the world map, with optional Maidenhead locator grid and day/night illumination and additional utility methods&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::BivariateCDF&#34;&gt;Math::BivariateCDF&lt;/a&gt; provides Bivariate CDF functions&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:3eb441e242dd6932e7a620f4de77124c&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interesting: &lt;a href=&#34;https://metacpan.org/pod/Mojo::UserAgent::CookieJar::ChromeMacOS&#34;&gt;Mojo::UserAgent::CookieJar::ChromeMacOS&lt;/a&gt; can read OSX Chrome Chrome cookies for Mojo::UserAgent&lt;/li&gt;
&lt;li&gt;Scrape the FindaGrave site using &lt;a href=&#34;https://metacpan.org/pod/WWW::Scrape::FindaGrave&#34;&gt;WWW::Scrape::FindaGrave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Weasel&#34;&gt;Weasel&lt;/a&gt; let&amp;rsquo;s you use a single module for different web drivers like Selenium. Inspired by PHP&amp;rsquo;s Mink&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Introducing 3 new Perl Glyphs</title>
      <link>http://perltricks.com/article/146/2015/1/23/Introducing-3-new-Perl-Glyphs/</link>
      <pubDate>Fri, 23 Jan 2015 13:55:03 +0000</pubDate>
      
      <guid>http://perltricks.com/article/146/2015/1/23/Introducing-3-new-Perl-Glyphs/</guid>
      <description>

&lt;p&gt;Recently I changed our site&amp;rsquo;s menu links from bitmap images to glyphs. A glyph (or &amp;ldquo;font icon&amp;rdquo;) is an svg file which can be packaged in a font file. Glyphs hold several advantages over bitmaps as icons: they look smooth at any resolution, can be colored and aligned just like text, and usually occupy less disk space than a regular bitmap.&lt;/p&gt;

&lt;p&gt;PerlTricks.com uses bootstrap, which comes with &lt;a href=&#34;http://getbootstrap.com/components/&#34;&gt;many&lt;/a&gt; stock glyphs, but alas! no Perl ones. Seeing as Perl culture has some pretty powerful iconography, it seemed high time the community had some ready-made glyphs to use. So over the holidays, I learned how to make svgs, and have created 3 new Perl glyphs to share.&lt;/p&gt;

&lt;p&gt;First a couple of Perl 5 classics, colored:&lt;/p&gt;

&lt;p&gt;image/svg+xml&lt;/p&gt;

&lt;p&gt;image/svg+xml&lt;/p&gt;

&lt;p&gt;And a black-and-white Camelia for Perl 6:&lt;/p&gt;

&lt;p&gt;image/svg+xml&lt;/p&gt;

&lt;p&gt;Of course, being svg you can color them however you like.&lt;/p&gt;

&lt;h3 id=&#34;creating-font-icon-sets:365f506fd2ded6f68e2b691499a8484b&#34;&gt;Creating font icon sets&lt;/h3&gt;

&lt;p&gt;These svg files are nice, but they&amp;rsquo;re easier to use in a font file. I like to use IcoMoon.io&amp;rsquo;s app for compiling font files. It&amp;rsquo;s free, simple and fast. To create your own font Perl icon set, first download the svg &lt;a href=&#34;https://github.com/dnmfarrell/Perl-Icons/tree/master/Icons&#34;&gt;files&lt;/a&gt; or clone the &lt;a href=&#34;https://github.com/dnmfarrell/Perl-Icons&#34;&gt;repo&lt;/a&gt;. Now point your browser at the IcoMoon.io app &lt;a href=&#34;http://icomoon.io/app&#34;&gt;page&lt;/a&gt;. Click the &amp;ldquo;import&amp;rdquo; button, and select the Perl svg files you downloaded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://farm8.staticflickr.com/7543/16158980357_1b37c2a633.jpg&#34; alt=&#34;icomoon\_app&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You should see the icons appear as an &amp;ldquo;untitled set&amp;rdquo;. Click each icon so that it is selected for inclusion in the font file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://farm8.staticflickr.com/7567/15724931783_ff9a3cbf19.jpg&#34; alt=&#34;icomoon\_import&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click the &amp;ldquo;Generate Font&amp;rdquo; button in the bottom-right corner of the screen. This will load the download font window. The window should show the 3 Perl glyph, and a unicode identifier for each glyph (like &amp;ldquo;e600&amp;rdquo; etc). Remember these unicode ids as you&amp;rsquo;ll need them to use the font icons.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://farm9.staticflickr.com/8660/16318921836_8ce352635b.jpg&#34; alt=&#34;icomoon\_download&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, click the &amp;ldquo;download&amp;rdquo; button to download the fonts archive. Inside the archive you&amp;rsquo;ll find the font files in eot, ttf, woff and svg formats, along with examples of how to use them. The easiest way to test the icons is by opening &lt;code&gt;demo.html&lt;/code&gt; that comes with the IcoMoon fonts archive. Test out the glyphs by typing into the &amp;ldquo;Font Test Drive&amp;rdquo; editor. To type a glyph in HTML just type: &lt;code&gt;๎&lt;/code&gt; replacing &amp;ldquo;e600&amp;rdquo; with the unicode id of the glyph, for example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://farm8.staticflickr.com/7494/16161405249_fc513e7389.jpg&#34; alt=&#34;icomoon\_demo\_html&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When you go to use the fonts on the web, make sure you use the bulletproof @font-face &lt;a href=&#34;http://www.paulirish.com/2009/bulletproof-font-face-implementation-syntax/&#34;&gt;syntax&lt;/a&gt;. Another benefit of using IcoMoon.io&amp;rsquo;s app: the &lt;code&gt;style.css&lt;/code&gt; file in the archive includes the bulletproof syntax.&lt;/p&gt;

&lt;p&gt;If you want lower-level access to font files, check out &lt;a href=&#34;http://sourceforge.net/projects/fontforge/&#34;&gt;FontForge&lt;/a&gt;. Using FontForge you can create or edit font files in a variety of formats. You can set the font metadata (creator, name etc), and specify the alignment of individual glyphs more precisely than with IcoMoon.io&amp;rsquo;s free app.&lt;/p&gt;

&lt;h3 id=&#34;licensing:365f506fd2ded6f68e2b691499a8484b&#34;&gt;Licensing&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ve released these files under the FreeBSD license, but keep in mind that there may be additional restrictions on use, which is out of my hands. Check out the repo &lt;a href=&#34;https://github.com/dnmfarrell/Perl-Icons/blob/master/README.pod&#34;&gt;README&lt;/a&gt; for the specifics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; &lt;em&gt;I&amp;rsquo;ve added a fourth glyph to the repo, the Perl 5 Raptor! Thanks to Marcus Smith for the suggestion. 2015-01-23&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

