<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>garbage-collection on Code Matters - a tech blog</title>
    <link>https://blog.dnmfarrell.com/tags/garbage-collection/</link>
    <description>Recent content in garbage-collection on Code Matters - a tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jan 2021 12:05:23 +0000</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/garbage-collection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Trouble with Reference Counting</title>
      <link>https://blog.dnmfarrell.com/post/the-trouble-with-reference-counting/</link>
      <pubDate>Mon, 25 Jan 2021 12:05:23 +0000</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/the-trouble-with-reference-counting/</guid>
      <description>Perl uses a simple form of garbage collection (GC) called reference counting. Every variable created by a Perl program has a refcnt associated with it. If the program creates a reference to the variable, Perl increments its refcnt. Whenever Perl exits a block it reclaims any variables that belong to the block scope. If any are references, their referenced values&#39; refcnt are either decremented or they&amp;rsquo;re reclaimed as well if no other references to them remain.</description>
    </item>
    
  </channel>
</rss>
