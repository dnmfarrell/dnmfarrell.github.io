<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Garbage-Collection on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/garbage-collection/</link>
    <description>Recent content in Garbage-Collection on Code - a programming blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jan 2021 12:05:23 +0000</lastBuildDate>
    <atom:link href="https://blog.dnmfarrell.com/tags/garbage-collection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Trouble with Reference Counting</title>
      <link>https://blog.dnmfarrell.com/post/the-trouble-with-reference-counting/</link>
      <pubDate>Mon, 25 Jan 2021 12:05:23 +0000</pubDate>
      <guid>https://blog.dnmfarrell.com/post/the-trouble-with-reference-counting/</guid>
      <description>&lt;p&gt;Perl uses a simple form of garbage collection (GC) called &lt;a href=&#34;https://en.wikipedia.org/wiki/Reference_counting&#34;&gt;reference counting&lt;/a&gt;. Every variable created by a Perl program has a &lt;a href=&#34;https://perldoc.perl.org/perlguts#Reference-Counts-and-Mortality&#34;&gt;refcnt&lt;/a&gt; associated with it. If the program creates a reference to the variable, Perl increments its &lt;code&gt;refcnt&lt;/code&gt;. Whenever Perl exits a block it reclaims any variables that belong to the block scope. If any are references, their referenced values&amp;rsquo; &lt;code&gt;refcnt&lt;/code&gt; are either decremented or they&amp;rsquo;re reclaimed as well if no other references to them remain.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
