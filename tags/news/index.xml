<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>News on Perl programming news, code and culture</title>
    <link>http://perltricks.com/tags/news/</link>
    <description>Recent content in News on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jun 2014 11:55:41 +0000</lastBuildDate>
    <atom:link href="http://perltricks.com/tags/news/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>YAPC::NA 2014 Talks Preview</title>
      <link>http://perltricks.com/article/99/2014/6/23/YAPC--NA-2014-Talks-Preview/</link>
      <pubDate>Mon, 23 Jun 2014 11:55:41 +0000</pubDate>
      
      <guid>http://perltricks.com/article/99/2014/6/23/YAPC--NA-2014-Talks-Preview/</guid>
      <description>

&lt;p&gt;&lt;em&gt;YAPC::NA 2014 Orlando starts today with a fantastic line up of talks. I&amp;rsquo;ve reviewed the schedule and picked out some gems for anyone unsure about which talks to attend. Hope to you see you there!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;day-1-monday-june-23-sup-rd-sup:3cf98d736d0278b850af6640732f40bb&#34;&gt;Day 1 - Monday June 23&lt;sup&gt;rd&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;Day 1 starts bright and early at 08:30 with Chris Prather&amp;rsquo;s welcome talk in Lakeside Ballroom. Larry will be presenting on Perl 6 at 10:00, followed by an hour of Lightning Talks, all in Lakeside Ballroom. Should be an entertaining morning!&lt;/p&gt;

&lt;p&gt;In the afternoon, talks will be conducted across 4 separate tracks, and it&amp;rsquo;s hard to pick one talk over another. At 13:30 in Summerlin Jesse Luehrs&amp;rsquo; talk on Rust, (the new Mozilla language) should be informative, alternatively Nick Patch always has something interesting to say about Unicode and he&amp;rsquo;s talking at the same time in the Princeton room.&lt;/p&gt;

&lt;p&gt;At 15:00 in Delaney Adam Dutko will show you how to upload your first module to CPAN and across the hall Sudeep Hazra will be demoing Perl on the Netbeans IDE in Summerlin. Graham Ollis&amp;rsquo; foreign function interface talk has a lot of subscribers; &amp;ldquo;never run XS again&amp;rdquo; is a compelling pitch and that&amp;rsquo;s running in Anderson.&lt;/p&gt;

&lt;p&gt;16:00 brings more goodness - Scott Walters teaching how to program for the Atari 2600 in Summerlin, meanwhile the colourful Sawyer X will be talking about XS in Anderson. Later at 16:30 in Delaney, learn how to build a MongoDB web app with Mojolicious::Lite, talk by Mike Friedman.&lt;/p&gt;

&lt;p&gt;At 17:00 in Anderson Mike Friedman will be giving a talk on &amp;ldquo;the Perl API for the Mortally Terrified&amp;rdquo; - I&amp;rsquo;ve seen that talk previously and recommend it for anyone looking to get started with Perl&amp;rsquo;s C API. Alternatively, if you&amp;rsquo;re into flying robots with Perl, you&amp;rsquo;ll like Tim Murray&amp;rsquo;s talk on &lt;a href=&#34;https://metacpan.org/pod/UAV::Pilot&#34;&gt;UAV::Pilot&lt;/a&gt; in Summerlin. At 17:30 Leon Timmermans will be elucidating PerlIO in Delaney.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;rsquo;t miss&lt;/strong&gt; - Larry&amp;rsquo;s Perl 6 talk at 10:00. With the flurry of successes this year on MoarVM, JVM and rumours that he&amp;rsquo;s working on a new Camel book for Perl 6, there could be a surprise announcement.&lt;/p&gt;

&lt;p&gt;Detailed &lt;a href=&#34;http://www.yapcna.org/yn2014/schedule?day=2014-06-23&#34;&gt;Monday schedule&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;day-2-tuesday-june-24-sup-th-sup:3cf98d736d0278b850af6640732f40bb&#34;&gt;Day 2 - Tuesday June 24&lt;sup&gt;th&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;The day kicks off at 09:00 with some big topics: get a handle on Datetimes with Dave Rolsky in Delaney or let David Bury show you how to do threading effectively in the Princeton room. Meanwhile in Summerlin Nathan Gray is giving a non-technical talk on Scrum.&lt;/p&gt;

&lt;p&gt;At 10:00 in Princeton Augustina Ragwitz is teaching asynchronous web programming. If you&amp;rsquo;re not familiar with &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class&#34;&gt;DBIx::Class&lt;/a&gt;, you owe it to yourself to check out Arthur Schmidt&amp;rsquo;s talk in Anderson.&lt;/p&gt;

&lt;p&gt;At 11:00 Andrew Rodland will be covering parsing with Marpa in the Summerlin room. Staying with Summerlin, after lunch you can learn how to brew your own beer (13:30) and roast your own coffee (14:00). Across the hall in Princeton, Ricardo Signes will be giving back-to-back lightning talks in his presentation &amp;ldquo;1.21 Gigawatts&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Tuesday afternoon finishes strongly with Matt S Trout, lightning talks and Charlie Stross&amp;rsquo; keynote all in Lakeside Ballroom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;rsquo;t miss&lt;/strong&gt; - current Perl Pumpking Ricardo Signes &amp;ldquo;1.21 Gigawatts&amp;rdquo; talk in Princeton at 13:30. I was lucky to see an earlier version of this talk and it was brilliant, check it out!&lt;/p&gt;

&lt;p&gt;Detailed &lt;a href=&#34;http://www.yapcna.org/yn2014/schedule?day=2014-06-24&#34;&gt;Tuesday schedule&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;day-3-wednesday-june-25-sup-th-sup:3cf98d736d0278b850af6640732f40bb&#34;&gt;Day 3 - Wednesday June 25&lt;sup&gt;th&lt;/sup&gt;&lt;/h3&gt;

&lt;p&gt;At 10:00 in Princeton Curtis Jewell is taking his life into his own hands and comparing the main Perl web frameworks, Catalyst, Dancer and Mojolicious. I can&amp;rsquo;t wait for the questions section. Learn how to deploy Perl apps with tool-of-the-moment Docker in Mark Allen&amp;rsquo;s talk in Summerlin at 10:30.&lt;/p&gt;

&lt;p&gt;At 11:00 in Delaney Tim Bunce is giving the same talk as last year, but it&amp;rsquo;s a good one: profiling Perl with &lt;a href=&#34;https://metacpan.org/pod/Devel::NYTProf&#34;&gt;Devel::NYTProf&lt;/a&gt;. Alternatively Matt S Trout is giving an intriguing talk on logical / functional programming techniques in Summerlin. Finally if you want to get going with Dancer, check out R Geoffrey Avery&amp;rsquo;s talk in Princeton.&lt;/p&gt;

&lt;p&gt;After lunch at 13:30 comes surely the cruellest scheduling of the conference: a choice between Ricardo Signes&amp;rsquo; talk in Princeton on Perl 5.20 and future Perl development versus Peter Martini reviewing native subroutine signatures and future development options in Delaney. Peter has several ideas on exciting new native signatures features and it should be a great talk.&lt;/p&gt;

&lt;p&gt;Sawyer X, John Anderson and more lightning talks should bring the conference talks to a rousing close, starting at 15:00 in Lakeside Ballroom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;rsquo;t miss&lt;/strong&gt; - Curtis Jewell&amp;rsquo;s web framework comparison. Curtis&amp;rsquo; has developed the same application in all three frameworks and it will be fascinating to see the pros and cons of each framework.&lt;/p&gt;

&lt;p&gt;Detailed &lt;a href=&#34;http://www.yapcna.org/yn2014/schedule?day=2014-06-25&#34;&gt;Wednesday schedule&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - May 2014</title>
      <link>http://perltricks.com/article/93/2014/6/2/What-s-new-on-CPAN---May-2014/</link>
      <pubDate>Mon, 02 Jun 2014 12:31:35 +0000</pubDate>
      
      <guid>http://perltricks.com/article/93/2014/6/2/What-s-new-on-CPAN---May-2014/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;alien:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Alien&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install a local ImageMagic with &lt;a href=&#34;https://metacpan.org/pod/Alien::ImageMagick&#34;&gt;Alien::ImageMagick&lt;/a&gt;. No more &lt;a href=&#34;http://perltricks.com/article/57/2014/1/1/Shazam-Use-Image-Magick-with-Perlbrew-in-minutes&#34;&gt;hacks&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Alien::SamTools&#34;&gt;Alien::SamTools&lt;/a&gt; will install the SamTools C libs and headers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apis:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Activiti::Rest::Client&#34;&gt;Activiti::Rest::Client&lt;/a&gt; provides an API for Activit, the open source workflow and BPM platform&lt;/li&gt;
&lt;li&gt;Use the decNumber C library with &lt;a href=&#34;https://metacpan.org/pod/Math::decNumber&#34;&gt;Math::decNumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Sensu::API::Client&#34;&gt;Sensu::API::Client&lt;/a&gt; is an API client for Sensu, an open source monitoring framework&lt;/li&gt;
&lt;li&gt;Sentry is an exceptions tracking service and &lt;a href=&#34;https://metacpan.org/pod/Sentry::Raven&#34;&gt;Sentry::Raven&lt;/a&gt; provides an API for it&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Liquidweb::Lite&#34;&gt;WWW::Liquidweb::Lite&lt;/a&gt; provides an API for Liquidweb hosting&lt;/li&gt;
&lt;li&gt;Access the OANDA exchange rates API with &lt;a href=&#34;https://metacpan.org/pod/WebService::OANDA::ExchangeRates&#34;&gt;WebService::OANDA::ExchangeRates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::CSE&#34;&gt;App::CSE&lt;/a&gt; implements the Code Search Engine as an app&lt;/li&gt;
&lt;li&gt;Run multiple apps in command with &lt;a href=&#34;https://metacpan.org/pod/App::Munner&#34;&gt;App::Munner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Table2YAML&#34;&gt;App::Table2YAML&lt;/a&gt; will convert tables to YAML&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::revealup&#34;&gt;App::revealup&lt;/a&gt; is an awesome app that converts markdown documents into an HTTP served slideshow with revealup.js - check it out.&lt;/li&gt;
&lt;li&gt;Perl&amp;rsquo;s compile-only mode doesn&amp;rsquo;t always load modules in the correct order or location. &lt;a href=&#34;https://metacpan.org/pod/App::perlminlint&#34;&gt;App::perlminlint&lt;/a&gt; aims to fix that (current version 0.1 needs a minor patch)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bots:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Bots&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Capulcu::Bot&#34;&gt;Capulcu::Bot&lt;/a&gt; is a highly customizable and modular IRC bot&lt;/p&gt;

&lt;p&gt;Several new &lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt&#34;&gt;Bot::Cobalt&lt;/a&gt; plugins for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt::Plugin::Bitly&#34;&gt;Bitly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt::Plugin::Figlet&#34;&gt;Figlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt::Plugin::Twitter&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt::Plugin::Urban&#34;&gt;Urban Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt::Plugin::RandomQuote&#34;&gt;RandomQuote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::Cobalt::Plugin::SeenURL&#34;&gt;SeenURL&lt;/a&gt; (URLs already linked)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Debug Perl data structures with &lt;a href=&#34;https://metacpan.org/pod/Data::Debug&#34;&gt;Data::Debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Validate::Perl&#34;&gt;Data::Validate::Perl&lt;/a&gt; will validate Perl data structures using a Parse::Yapp grammar&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::EDI::X12&#34;&gt;Data::EDI::X12&lt;/a&gt; will process EDI x12 documents&lt;/li&gt;
&lt;li&gt;Safely slurp files again with File::Slurp::Sane&lt;/li&gt;
&lt;li&gt;Render SVG as a Cairo surface with &lt;a href=&#34;https://metacpan.org/pod/Image::CairoSVG&#34;&gt;Image::CairoSVG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MARC::Parser::RAW&#34;&gt;MARC::Parser::RAW&lt;/a&gt; parses MARC records in a fault-tolerant way&lt;/li&gt;
&lt;li&gt;Easily generate Marpa parsers using &lt;a href=&#34;https://metacpan.org/pod/MarpaX::Simple&#34;&gt;MarpaX::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MemcacheDBI&#34;&gt;MemcacheDBI&lt;/a&gt; implements a memcache queue for DBI commands&lt;/li&gt;
&lt;li&gt;Given an input, &lt;a href=&#34;https://metacpan.org/pod/SQL::Type::Guess&#34;&gt;SQL::Type::Guess&lt;/a&gt; attempts to derive the correct SQL column datatype&lt;/li&gt;
&lt;li&gt;Parse TOML with &lt;a href=&#34;https://metacpan.org/pod/TOML::Parser&#34;&gt;TOML::Parser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-system-administration:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Development &amp;amp; System Administration&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Command::Interactive&#34;&gt;Command::Interactive&lt;/a&gt; provides a command line interface for process invocation, e.g. capture a password and launch a process with the captured password.&lt;/p&gt;

&lt;p&gt;Curses! New widgets &lt;a href=&#34;https://metacpan.org/pod/Curses::UI::Number&#34;&gt;Curses::UI::Number&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Curses::UI::Time&#34;&gt;Curses::UI::Time&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New Dist::Zilla plugins:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prevent an accidental release with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::BlockRelease&#34;&gt;BlockRelease&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get a count of RT and Github issues with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::CheckIssues&#34;&gt;CheckIssues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::ContributorsFromPod&#34;&gt;ContributorsFromPod&lt;/a&gt; updates your META file with contributors from your module&amp;rsquo;s POD&lt;/li&gt;
&lt;li&gt;Dynamically inject Makefile pre-reqs during installation with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::DynamicPrereqs&#34;&gt;DynamicPrereqs&lt;/a&gt; (useful for platform specific reqs).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::ModuleBuildTiny::Fallback&#34;&gt;ModuleBuildTiny::Fallback&lt;/a&gt; creates a Build.PL file using Module::Build::Tiny if it&amp;rsquo;s available&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Zilla::Dist&#34;&gt;Zilla::Dist&lt;/a&gt; creates Perl distributions from an acmeist (language agnostic) source structure&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Log::Minimal::Object&#34;&gt;Log::Minimal::Object&lt;/a&gt; provides an OO interface for Log::Minimal&lt;/p&gt;

&lt;p&gt;Add roles to Moo objects at runtime with &lt;a href=&#34;https://metacpan.org/pod/MooX::Traits&#34;&gt;MooX::Traits&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/MooseX::Enumeration&#34;&gt;MooseX::Enumeration&lt;/a&gt; adds enumerated types for Moose classes, woohoo!&lt;/p&gt;

&lt;p&gt;Create configurable stack traces with &lt;a href=&#34;https://metacpan.org/pod/Stacktrace::Configurable&#34;&gt;Stacktrace::Configurable&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;maths-science-language:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Maths, Science &amp;amp; Language&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easily translate compass points with &lt;a href=&#34;https://metacpan.org/pod/Compass::Points&#34;&gt;Compass::Points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Date::QuarterOfYear&#34;&gt;Date::QuarterOfYear&lt;/a&gt; parses dates and returns the year quarter, without using the heavy DateTime module&lt;/li&gt;
&lt;li&gt;Parse words into known and unknown parts with &lt;a href=&#34;https://metacpan.org/pod/Lingua::Word::Parser&#34;&gt;Lingua::Word::Parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Manipulate text case with &lt;a href=&#34;https://metacpan.org/pod/String::CamelSnakeKebab&#34;&gt;String::CamelSnakeKebab&lt;/a&gt; (ported from Clojure)&lt;/li&gt;
&lt;li&gt;Draw braille characters at the terminal with &lt;a href=&#34;https://metacpan.org/pod/Term::Drawille&#34;&gt;Term::Drawille&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;security:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Security&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::Polybius&#34;&gt;Crypt::Polybius&lt;/a&gt; implements the Polybius Square cipher&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Passwords&#34;&gt;Passwords&lt;/a&gt; is a simple API for hashing and validating passwords&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:f56c2d0a2baa3ca014236b4dac6dfb7e&#34;&gt;Web&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::Model::Net::Stripe&#34;&gt;Catalyst::Model::Net::Stripe&lt;/a&gt; provides a Catalyst model using &lt;a href=&#34;https://metacpan.org/pod/Net::Stripe&#34;&gt;Net::Stripe&lt;/a&gt; (the payments service)&lt;/p&gt;

&lt;p&gt;Implement a stronger Dancer session id with &lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::SecureSessionID&#34;&gt;Dancer::Plugin::SecureSessionID&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/HTTP::Request::AsCurl&#34;&gt;HTTP::Request::AsCurl&lt;/a&gt; converts an HTTP::Request object into a curl command&lt;/p&gt;

&lt;p&gt;New Mojolicious toys!:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support offline web applications with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::AppCacheManifest&#34;&gt;AppCacheManifest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clear an upsteam cache with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::CachePurge&#34;&gt;CachePurge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::RenderSteps&#34;&gt;RenderSteps&lt;/a&gt; helps you create async controllers with minimal code&lt;/li&gt;
&lt;li&gt;Easily manage thumbnails using &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Thumbnail&#34;&gt;Thumbnail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::TimeAgo&#34;&gt;TimeAgo&lt;/a&gt; elegantly convert dates to human-readable dates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::App::HostMap&#34;&gt;Plack::App::HostMap&lt;/a&gt; can dispatch requests to applications based on host names, in constant time&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perl v5.20 - what you need to know</title>
      <link>http://perltricks.com/article/92/2014/5/27/Perl-v5-20---what-you-need-to-know/</link>
      <pubDate>Tue, 27 May 2014 12:22:52 +0000</pubDate>
      
      <guid>http://perltricks.com/article/92/2014/5/27/Perl-v5-20---what-you-need-to-know/</guid>
      <description>

&lt;p&gt;&lt;em&gt;With a new version of Perl expected to land this week, we&amp;rsquo;ve pulled together a summary of the headline changes for Perl v5.20. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;subroutine-signatures:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Subroutine signatures&lt;/h3&gt;

&lt;p&gt;This is the big one. It&amp;rsquo;s hard to understate how great this is. No more ugly assignment code - with 5.20 you can write:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;use feature &#39;signatures&#39;;

sub echo_chamber ($sound) {
    return $sound;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We first &lt;a href=&#34;http://perltricks.com/article/72/2014/2/24/Perl-levels-up-with-native-subroutine-signatures&#34;&gt;covered&lt;/a&gt; them back in February, and Ovid &lt;a href=&#34;http://blogs.perl.org/users/ovid/2014/03/subroutine-signatures-in-perl-are-long-overdue.html&#34;&gt;blogged&lt;/a&gt; about them too. More recently we &lt;a href=&#34;http://perltricks.com/article/88/2014/5/12/Benchmarking-subroutine-signatures&#34;&gt;benchmarked&lt;/a&gt; them.&lt;/p&gt;

&lt;h3 id=&#34;postfix-dereferencing:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Postfix dereferencing&lt;/h3&gt;

&lt;p&gt;The next cool new feature is postfix dereferencing. Hard to describe but easy to show:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;use experimental &#39;postderef&#39;;

my $nested_array_ref = [[[[[1,2,3]]]]];

# circumfix dereference - usual way
push @{$nested_array_ref-&amp;gt;[0]-&amp;gt;[0]-&amp;gt;[0]-&amp;gt;[0]}, 4;

# postfix dereference - new way
push $nested_array_ref-&amp;gt;[0]-&amp;gt;[0]-&amp;gt;[0]-&amp;gt;[0]-&amp;gt;@*, 5;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We previously &lt;a href=&#34;http://perltricks.com/article/68/2014/2/13/Cool-new-Perl-feature--postfix-dereferencing&#34;&gt;detailed&lt;/a&gt; the benefits of postfix dereferencing.&lt;/p&gt;

&lt;h3 id=&#34;hash-slices:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Hash slices&lt;/h3&gt;

&lt;p&gt;Perl 5.20 delivers a new slice type: hash slices. These work in a similar way to the array slice, except the &amp;ldquo;sliced&amp;rdquo; data provides full key value pairs instead of just the values as with an array slice.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;my %raindrops = ( splish =&amp;gt; 4, splash =&amp;gt; 9, splosh =&amp;gt; 7 );
my %hash_slice = %raindrops{ &#39;splish&#39;, &#39;splosh&#39;};
# hash_slice is (splish =&amp;gt; 4, splosh =&amp;gt; 7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What&amp;rsquo;s even more cool, if you use a hash slice on an array, the resulting hash has the array index elements as the keys:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;my @raindrop_types = qw/splish splash splosh/;
my %hash_slice = %raindrop_types[0, 2];
# hash_slice is (0 =&amp;gt; &#39;splish&#39;, 2 =&amp;gt; &#39;splosh&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;android:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Android&lt;/h3&gt;

&lt;p&gt;Yes that&amp;rsquo;s right, Perl 5.20 compiles on Android! The current documentation is &lt;a href=&#34;https://github.com/Perl/perl5/blob/blead/README.android&#34;&gt;online&lt;/a&gt;, and will be accessible via &amp;ldquo;perldoc android&amp;rdquo; once you&amp;rsquo;ve installed 5.20.&lt;/p&gt;

&lt;h3 id=&#34;performance-improvements:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Performance improvements&lt;/h3&gt;

&lt;p&gt;Perl 5.20 is faster in all kinds of areas - the perldelta for 5.20 lists 17 performance improvements, covering things like faster regexes, hash key lookups and string copying. Matthew Horsfall &lt;a href=&#34;http://blogs.perl.org/users/matthew_horsfall/2014/02/perl-519x-performance-improvements.html&#34;&gt;blogged&lt;/a&gt; about some of the changes as did &lt;a href=&#34;http://blog.booking.com/more-optimizations-in-perl-5.20-to-be.html&#34;&gt;Stefan Müller&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;miscellaneous:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Miscellaneous&lt;/h3&gt;

&lt;p&gt;Subroutine prototypes can now be declared as subroutine attribute with the &amp;ldquo;prototype&amp;rdquo; keyword. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;# usual prototype
sub example ($$) {}

# prototype declared via attribute
sub example :prototype($$) {}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Faster Windows installation - ~15 minutes can be saved from the installation process due to the fix of a &amp;ldquo;make test&amp;rdquo; bug. Additionally, Perl can now be built using the Visual C++ 2013 compiler.&lt;/p&gt;

&lt;p&gt;Perl 5.20 uses the latest Unicode version 6.3 up from 6.2 (Unicode &lt;a href=&#34;http://www.unicode.org/versions/Unicode6.3.0/&#34;&gt;changelog&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The rand function now uses an internal platform independent random number generator. Previously Perl would use a platform specific random number generator leading to inconsistent quality of random number generation.&lt;/p&gt;

&lt;h3 id=&#34;deprecations:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Deprecations&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/CGI&#34;&gt;CGI&lt;/a&gt; and its associated modules are being removed from core (Sawyer X &lt;a href=&#34;http://www.youtube.com/watch?v=jKOqtRMT85s&#34;&gt;must&lt;/a&gt; be happy).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Module::Build&#34;&gt;Module::Build&lt;/a&gt; is also being removed from core. David Golden &lt;a href=&#34;http://www.dagolden.com/index.php/2140/paying-respect-to-modulebuild/&#34;&gt;blogged&lt;/a&gt; about this last year.&lt;/p&gt;

&lt;p&gt;Setting a non-integer reference value to the input record separator variable (&amp;ldquo;$/&amp;rdquo;) will throw a fatal exception (but undef is still fine).&lt;/p&gt;

&lt;h3 id=&#34;conclusion:999d6889f3c69750b45ce67cbc31e8ce&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;There is a lot more to 5.20 than the summary items mentioned above. For a list of all the changes see &lt;a href=&#34;https://github.com/Perl/perl5/blob/blead/pod/perl5200delta.pod&#34;&gt;perldelta&lt;/a&gt;. Perl 5.20 is the most exciting release in years. Thanks to the Perl 5 Porters team for doing an incredible job of delivering an exceptional new Perl!&lt;/p&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F92%2F2014%2F5%2F27%2FPerl-v5-20-what-you-need-to-know&amp;amp;text=Perl+v5.20+-+what+you+need+to+know&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F92%2F2014%2F5%2F27%2FPerl-v5-20-what-you-need-to-know&amp;amp;via=perltricks&#34;&gt;tweet&lt;/a&gt; about it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - April 2014</title>
      <link>http://perltricks.com/article/86/2014/5/1/What-s-new-on-CPAN---April-2014/</link>
      <pubDate>Thu, 01 May 2014 12:20:07 +0000</pubDate>
      
      <guid>http://perltricks.com/article/86/2014/5/1/What-s-new-on-CPAN---April-2014/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. April was a mix but there were a few gems amongst the dust. Think &amp;ldquo;Atari landfill excavation&amp;rdquo; and enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;apis:a1e18cc475b25ae187356826556ddec3&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Pinboard&#34;&gt;WWW::Pinboard&lt;/a&gt; is an API for pinboard.in&lt;/li&gt;
&lt;li&gt;Export your gmail rules into a procmail format with &lt;a href=&#34;https://metacpan.org/pod/Mail::Google::Procmailrc&#34;&gt;Mail::Google::Procmailrc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps:a1e18cc475b25ae187356826556ddec3&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Alien::pdf2json&#34;&gt;Alien::pdf2json&lt;/a&gt; installs pdf2json which can also convert PDFs to XML&lt;/li&gt;
&lt;li&gt;Keep two instances of Music Player Daemon in sync with &lt;a href=&#34;https://metacpan.org/pod/App::MPDSync&#34;&gt;App::MPDSync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Augment your code review process with &lt;a href=&#34;https://metacpan.org/pod/Git::Code::Review&#34;&gt;Git::Code::Review&lt;/a&gt; (tutorial &lt;a href=&#34;https://metacpan.org/pod/Git::Code::Review::Tutorial&#34;&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Analyze the results of the du command with &lt;a href=&#34;https://metacpan.org/pod/distribution/App-Du-Analyze/bin/analyze-du&#34;&gt;App::Du::Analyze&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:a1e18cc475b25ae187356826556ddec3&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate fake data intended for a relational database with &lt;a href=&#34;https://metacpan.org/pod/Data::Generator::FromDDL&#34;&gt;Data::Generator::FromDDL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Automating your life with &lt;a href=&#34;https://metacpan.org/pod/Exobrain&#34;&gt;Exobrain&lt;/a&gt;? Now connect to more services with &lt;a href=&#34;https://metacpan.org/pod/Exobrain::Foursquare&#34;&gt;Exobrain::HabitRPG&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Exobrain::Foursquare&#34;&gt;Exobrain::Foursquare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Store your serealized Perl data structure with &lt;a href=&#34;https://metacpan.org/pod/SerealX::Store&#34;&gt;SerealX::Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Types::DateTime&#34;&gt;Types::DateTime&lt;/a&gt; provides a Moo/Moose compatible datetime type constraint&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-system-administration:a1e18cc475b25ae187356826556ddec3&#34;&gt;Development &amp;amp; System Administration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create your own BackPAN index with the aptly named &lt;a href=&#34;https://metacpan.org/pod/BackPAN::Index::Create&#34;&gt;BackPAN::Index::Create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::CheckBin&#34;&gt;Dist::Zilla::Plugin::CheckBin&lt;/a&gt; will add a check to your distribution that a certain command is available&lt;/li&gt;
&lt;li&gt;Enfroce strict version numbers with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::CheckStrictVersion&#34;&gt;Dist::Zilla::Plugin::CheckStrictVersion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Test::PAUSE::Permissions&#34;&gt;Dist::Zilla::Plugin::Test::PAUSE::Permissions&lt;/a&gt; will check your PAUSE permissions at dzil&amp;rsquo;s gather files stage&lt;/li&gt;
&lt;li&gt;Want dzil to add a date to your distro but not change the line numbers? &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::OurDate&#34;&gt;Dist::Zilla::Plugin::OurDate&lt;/a&gt; is your friend&lt;/li&gt;
&lt;li&gt;Export lexical variables in your packages with &lt;a href=&#34;https://metacpan.org/pod/Exporter::LexicalVars&#34;&gt;Exporter::LexicalVars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read and edit ELAN files with &lt;a href=&#34;https://metacpan.org/pod/File::ELAN&#34;&gt;File::ELAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Re-using the same modules over and over in your solution? &lt;a href=&#34;https://metacpan.org/pod/Import::Base&#34;&gt;Import::Base&lt;/a&gt; let&amp;rsquo;s you reduce your import boilerplate and declare a base set of modules&lt;/li&gt;
&lt;li&gt;Working with thousands of Perl objects and need an efficient implementation? Take a look at &lt;a href=&#34;https://metacpan.org/pod/Monjon&#34;&gt;Monjon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you get frustrated waiting for perldoc to load, you may have issues. Also, see &lt;a href=&#34;https://metacpan.org/pod/Pod::Perldoc::Cache&#34;&gt;Pod::Perldoc::Cache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fun:a1e18cc475b25ae187356826556ddec3&#34;&gt;Fun&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This is an incredible module; just use &lt;a href=&#34;https://metacpan.org/pod/Acme::Futuristic::Perl&#34;&gt;Acme::Futuristic::Perl&lt;/a&gt; to get Perl 7 running on your machine!&lt;/li&gt;
&lt;li&gt;If having Perl 7 isn&amp;rsquo;t enough, perhaps you&amp;rsquo;d like sigil-less scalars? Try &lt;a href=&#34;https://metacpan.org/pod/bare&#34;&gt;bare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;maths-science-language:a1e18cc475b25ae187356826556ddec3&#34;&gt;Maths, Science &amp;amp; Language&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Is today a holiday? It might be in the Slovak Republic. Find out with Perl and &lt;a href=&#34;https://metacpan.org/pod/Date::Holidays::SK&#34;&gt;Date::Holidays::SK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Path::Hilbert&#34;&gt;Path::Hilbert&lt;/a&gt; converts between 1 dimensional and 2 dimensional spaces using the Hilbert curve algoritm&lt;/li&gt;
&lt;li&gt;Capitalize Portuguese text with &lt;a href=&#34;https://metacpan.org/pod/Lingua::PT::Capitalizer&#34;&gt;Lingua::PT::Capitalizer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:a1e18cc475b25ae187356826556ddec3&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::ModCluster&#34;&gt;Catalyst::Plugin::ModCluster&lt;/a&gt; will register your Catalyst application with an apache mod_cluster&lt;/li&gt;
&lt;li&gt;Authenticate your users with Google&amp;rsquo;s OAuth on Dancer using &lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Auth::Google&#34;&gt;Dancer::Plugin::Auth::Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tired of Template::Toolkit on Dancer2? Check out &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Template::TextTemplate&#34;&gt;Dancer2::Template::TextTemplate&lt;/a&gt; for a more Perlish templating option&lt;/li&gt;
&lt;li&gt;Connect Mojo::UserAgent to the Cloudflare API with &lt;a href=&#34;https://metacpan.org/pod/Mojo::Cloudflare&#34;&gt;Mojo::Cloudflare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::YR&#34;&gt;Mojo::YR&lt;/a&gt; is an API for the NR.YO weather API&lt;/li&gt;
&lt;li&gt;Enable plaintext route definitions in Mojo with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::PlainRoutes&#34;&gt;Mojolicious::Plugin::PlainRoutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F86%2F2014%2F5%2F1%2FWhat-s-new-on-CPAN-April-2014&amp;amp;text=What%27s+new+on+CPAN+-+April+2014&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F86%2F2014%2F5%2F1%2FWhat-s-new-on-CPAN-April-2014&amp;amp;via=perltricks&#34;&gt;tweet&lt;/a&gt; about it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - March 2014</title>
      <link>http://perltricks.com/article/82/2014/4/4/What-s-new-on-CPAN---March-2014/</link>
      <pubDate>Fri, 04 Apr 2014 03:20:11 +0000</pubDate>
      
      <guid>http://perltricks.com/article/82/2014/4/4/What-s-new-on-CPAN---March-2014/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo; - a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. March was a bumper month for CPAN uploads - a veritable treasure trove of new modules for you to try out. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;apis:b2c3405a2232e44b77dfa468d7950720&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Alien::Taco&#34;&gt;Alien::Taco&lt;/a&gt; let&amp;rsquo;s you connect and interact with a Taco server&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/CPAN::Testers::WWW::Reports::Query::Report&#34;&gt;CPAN::Testers::WWW::Reports::Query::Report&lt;/a&gt; will fetch CPAN Testers reports - very cool. Long module name though, if that bothers you,have a look at &lt;a href=&#34;https://metacpan.org/pod/Package::Abbreviate&#34;&gt;Package::Abbreviate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interact with the Yahoo! Query API using &lt;a href=&#34;https://metacpan.org/pod/Business::YQL&#34;&gt;Business::YQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The curiously named &lt;a href=&#34;https://metacpan.org/pod/Devel::Chitin&#34;&gt;Devel::Chitin&lt;/a&gt; provides an API to the Perl debugger&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Graylog::Client&#34;&gt;Net::Graylog::Client&lt;/a&gt; is a Perl client for the open source graylog2 analysis and log server&lt;/li&gt;
&lt;li&gt;Retrieve Google autosuggestions with &lt;a href=&#34;https://metacpan.org/pod/WWW::Google::AutoSuggest&#34;&gt;WWW::Google::AutoSuggest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Quickly create command line apps with &lt;a href=&#34;https://metacpan.org/pod/App::Basis&#34;&gt;App::Basis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Cleo&#34;&gt;App::Cleo&lt;/a&gt; let&amp;rsquo;s you playback command line commands for slick live demos&lt;/li&gt;
&lt;li&gt;Create your own self signed SSL certificates with &lt;a href=&#34;https://metacpan.org/pod/App::CreateSelfSignedSSL&#34;&gt;App::CreateSelfSignedSSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::RecordStream::Bio&#34;&gt;App::RecordStream::Bio&lt;/a&gt; enables easy processing of biology records&lt;/li&gt;
&lt;li&gt;Swiftly build Debian packages from templates with &lt;a href=&#34;https://metacpan.org/pod/App::makedpkg&#34;&gt;App::makedpkg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Looking for a mediocre caching module? Check out &lt;a href=&#34;https://metacpan.org/pod/Cache::Meh&#34;&gt;Cache::Meh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Looking for an efficient, mutable shared memory module? Have a look at &lt;a href=&#34;https://metacpan.org/pod/Hash::SharedMem&#34;&gt;Hash::SharedMem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Raw&#34;&gt;DBIx::Raw&lt;/a&gt; aims to let you have an ORM-style interface with lower-level SQL querying - very interesting&lt;/li&gt;
&lt;li&gt;Detect binary and string data using &lt;a href=&#34;https://metacpan.org/pod/Data::Binary&#34;&gt;Data::Binary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Censor&#34;&gt;Data::Censor&lt;/a&gt; can help you conveniently censor data&lt;/li&gt;
&lt;li&gt;Dynamically generate permutations from nested data using &lt;a href=&#34;https://metacpan.org/pod/Data::Tumbler&#34;&gt;Data::Tumbler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::CheckStrictVersion&#34;&gt;Dist::Zilla::Plugin::CheckStrictVersion&lt;/a&gt; will validate your distribution version number on release&lt;/li&gt;
&lt;li&gt;Auto-generate a DOAP file for your Perl distribution using &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::DOAP&#34;&gt;Dist::Zilla::Plugin::DOAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MySQL::Partition&#34;&gt;MySQL::Partition&lt;/a&gt; will create partitions using MySQL tables - interesting idea but author has labelled alpha so buyer beware&lt;/li&gt;
&lt;li&gt;Easily parse XML/HTML with a simple markup language using &lt;a href=&#34;https://metacpan.org/pod/XML::Dataset&#34;&gt;XML::Dataset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-system-administration:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Development &amp;amp; System Administration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a dashboard of information about CPAN distributions with &lt;a href=&#34;https://metacpan.org/pod/CPAN::Dashboard&#34;&gt;CPAN::Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::OverloadInfo&#34;&gt;Devel::OverloadInfo&lt;/a&gt; lets you introspect overloaded operators&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dispatch::Profile&#34;&gt;Dispatch::Profile&lt;/a&gt; is a simple messaging framework&lt;/li&gt;
&lt;li&gt;Auto-increment your module version after every release with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::BumpVersionAfterRelease&#34;&gt;Dist::Zilla::Plugin::BumpVersionAfterRelease&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add a keywords entry to your module POD with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Keywords&#34;&gt;Dist::Zilla::Plugin::Keywords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Module::Spy&#34;&gt;Module::Spy&lt;/a&gt; monitors classes and objects method calls&lt;/li&gt;
&lt;li&gt;Ban use of specific modules with &lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::logicLAB::ModuleBlacklist&#34;&gt;Perl::Critic::Policy::logicLAB::ModuleBlacklist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;text-languages:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Text &amp;amp; Languages&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Detect if text is Japanese or not with &lt;a href=&#34;https://metacpan.org/pod/AI::Classifier::Japanese&#34;&gt;AI::Classifier::Japanese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Convert::Number::Armenian&#34;&gt;Convert::Number::Armenian&lt;/a&gt; will convert numerals between Armenian and Western representations&lt;/li&gt;
&lt;li&gt;Working with anagrams? uoy hsuold oklo ta &lt;a href=&#34;https://metacpan.org/pod/Lingua::Anagrams&#34;&gt;Lingua::Anagrams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re working with Brazilian phone numbers, check out &lt;a href=&#34;https://metacpan.org/pod/Number::Phone::BR&#34;&gt;Number::Phone::BR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;maths-science:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Maths &amp;amp; Science&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Analyse MaxQuant protein group response differentials data with &lt;a href=&#34;https://metacpan.org/pod/Bio::MaxQuant::ProteinGroups::Response&#34;&gt;Bio::MaxQuant::ProteinGroups::Response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DSP::LinPred_XS&#34;&gt;DSP::LinPred_XS&lt;/a&gt; is a lightning-fast XS implementation of the Least Mean Squared Algorithm&lt;/li&gt;
&lt;li&gt;Simply Grammar::Graph objects using the aptly-named &lt;a href=&#34;https://metacpan.org/pod/Grammar::Graph::Simplify&#34;&gt;Grammar::Graph::Simplify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::Geometry::IntersectionArea&#34;&gt;Math::Geometry::IntersectionArea&lt;/a&gt; will calculate the intersecting area of two geometric shapes&lt;/li&gt;
&lt;li&gt;Conveniently manage the nginx FastCGI cache with &lt;a href=&#34;https://metacpan.org/pod/Nginx::FastCGI::Cache&#34;&gt;Nginx::FastCGI::Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Set::Similarity&#34;&gt;Set::Similarity&lt;/a&gt; provides several methods for measuring the similarity of 2 sets&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;testing:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Testing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Merge multiple streams of TAP with &lt;a href=&#34;https://metacpan.org/pod/TAP::Stream&#34;&gt;TAP::Stream&lt;/a&gt; - amazing&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::RemoteServer&#34;&gt;Test::RemoteServer&lt;/a&gt; bundles some convenient server testing methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:b2c3405a2232e44b77dfa468d7950720&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Store your Dancer2 sessions in middleware with &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Session::PSGI&#34;&gt;Dancer2::Session::PSGI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ConfigHashMerge&#34;&gt;Mojolicious::Plugin::ConfigHashMerge&lt;/a&gt; enables deeply nested hash config files&lt;/li&gt;
&lt;li&gt;View your app in a variety of screen sizes using &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Responsinator&#34;&gt;Mojolicious::Plugin::Responsinator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get an Apache-like scoreboard of your Mojolicious server with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ServerStatus&#34;&gt;Mojolicious::Plugin::ServerStatus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Mechanize::PhantomJS&#34;&gt;WWW::Mechanize::PhantomJS&lt;/a&gt; provides a Mechanize-style object of the PhantomJS headless browser &amp;hellip; JavaScript enabled!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F82%2F2014%2F4%2F3%2FWhat-s-new-on-CPAN-March-2014&amp;amp;text=What%27s+new+on+CPAN+-+March+2014&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F82%2F2014%2F4%2F3%2FWhat-s-new-on-CPAN-March-2014&amp;amp;via=perltricks&#34;&gt;retweet&lt;/a&gt; it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PerlTricks.com is a year old</title>
      <link>http://perltricks.com/article/78/2014/3/21/PerlTricks-com-is-a-year-old/</link>
      <pubDate>Fri, 21 Mar 2014 13:02:04 +0000</pubDate>
      
      <guid>http://perltricks.com/article/78/2014/3/21/PerlTricks-com-is-a-year-old/</guid>
      <description>

&lt;p&gt;&lt;em&gt;PerlTricks.com launched a year ago. So how are we doing? Read on to find out.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;site-visitors:50f11b43b5834b5e9cb2429ba19f6476&#34;&gt;Site Visitors&lt;/h3&gt;

&lt;p&gt;For our first 6 months our visitor count oscillated between 2,500 and 3,000 visitors per month. Since then the numbers surged to 17,000:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://perltricks.com/static/images/78/perltricks_pageviews_13_14.png&#34; title=&#34;PerlTricks.com Visitors March 2013 - February 2014&#34;&gt;&lt;img src=&#34;http://perltricks.com/static/images/78/perltricks_pageviews_13_14_small.png&#34; alt=&#34;Visitors Chart&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My guess is that two factors account for most of the growth: writing a broader range of Perl related articles beyond simple tutorials and the site re-design which occurred in December. In the next year, I&amp;rsquo;d like to grow the visitor numbers to 70,000 per month. I think this is realistic based on &lt;a href=&#34;http://szabgab.com/the-popularity-of-perl-in-2013.html&#34;&gt;numbers&lt;/a&gt; for other Perl sites.&lt;/p&gt;

&lt;p&gt;Our pages-per-visit metric remained steady at ~1.5 for the year. This is curious as we added the &amp;ldquo;Our Latest Articles&amp;rdquo; and &amp;ldquo;Most Popular Articles&amp;rdquo; side bars in December and they have not been effective at encouraging users to read more of our articles. I&amp;rsquo;m thinking about adding some kind of &amp;ldquo;related articles&amp;rdquo; link to the footer of the page - maybe that will yield better results.&lt;/p&gt;

&lt;p&gt;In terms of Geography, there are no surprises really. Most of our visitors came from the U.S. followed by the U.K.,India, Germany and Canada:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://perltricks.com/static/images/78/perltricks_visitors_country.png&#34; title=&#34;PerlTricks.com Visitors By Country&#34;&gt;&lt;img src=&#34;http://perltricks.com/static/images/78/perltricks_visitors_country_small.png&#34; alt=&#34;Visitors By Country Chart&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;our-articles:50f11b43b5834b5e9cb2429ba19f6476&#34;&gt;Our Articles&lt;/h3&gt;

&lt;p&gt;We published 76 articles, the most popular of which was about Mario Roy&amp;rsquo;s wonderful MCE module. I hope the article&amp;rsquo;s success stems from the great content and not the click-bait title! Here&amp;rsquo;s our top ten most popular articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/61/2014/1/21/Make-your-code-run-faster-with-Perl-s-secret-turbo-module&#34;&gt;Make your code run faster with Perl&amp;rsquo;s secret turbo module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/68/2014/2/13/Cool-new-Perl-feature-postfix-dereferencing&#34;&gt;Cool new Perl feature: postfix dereferencing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/60/2014/1/13/Display-beautiful-Perl-code-in-HTML-without-JavaScript&#34;&gt;Display beautiful Perl code in HTML without JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/72/2014/2/24/Perl-levels-up-with-native-subroutine-signatures&#34;&gt;Perl levels-up with native subroutine signatures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/27/2013/6/16/Perl-hash-basics-create-update-loop-delete-and-sort&#34;&gt;Perl hash basics: create, update, loop, delete and sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/17/2013/4/12/Perl-for-loops&#34;&gt;Perl for loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/55/2013/12/22/Schedule-jobs-like-a-boss-with-every&#34;&gt;Schedule jobs like a boss with every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/63/2014/1/26/Download-a-YouTube-video-with-one-line-of-Perl&#34;&gt;Download a YouTube video with one line of Perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/37/2013/8/18/Catch-and-Handle-Signals-in-Perl&#34;&gt;Catch and Handle Signals in Perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perltricks.com/article/45/2013/10/27/How-to-redirect-and-restore-STDOUT&#34;&gt;How to redirect and restore STDOUT&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We also started a regular feature: &lt;a href=&#34;http://perltricks.com/article/74/2014/3/3/What-s-new-on-CPAN-February-2014&#34;&gt;What&amp;rsquo;s new on CPAN&lt;/a&gt;. This got a lot of positive feedback and we&amp;rsquo;ll keep running it. We&amp;rsquo;ll continue to cover Perl community news and programming, but this year I&amp;rsquo;d also like to give more coverage to the work of &lt;a href=&#34;http://www.perlfoundation.org/&#34;&gt;TPF&lt;/a&gt;, particularly the Perl 5 development fund. With Perl v5.20 around the corner, it would be great if we could turn that momentum into significant funding for TPF.&lt;/p&gt;

&lt;p&gt;Finally we&amp;rsquo;re also going to be offering paid freelance writing opportunities to the Perl community - watch this space!&lt;/p&gt;

&lt;h3 id=&#34;how-you-can-help:50f11b43b5834b5e9cb2429ba19f6476&#34;&gt;How you can help&lt;/h3&gt;

&lt;p&gt;There are several ways you can help us:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Email us about Perl projects, community events or modules that you&amp;rsquo;d like us to feature. This month we&amp;rsquo;re nearing 20,000 visitors; that&amp;rsquo;s a lot of eyes to have on your shiny new Perl app or undiscovered module.&lt;/li&gt;
&lt;li&gt;Promote our articles by linking, retweeting or upvoting them whenever you deem them worthy of it. This helps us introduce more people to our site.&lt;/li&gt;
&lt;li&gt;Keep doing amazing things with Perl. A stronger community helps everyone including us.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;thank-you:50f11b43b5834b5e9cb2429ba19f6476&#34;&gt;Thank you&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who has supported us over the past year on twitter, Reddit and by email. In particular I&amp;rsquo;d like to thank: Andy Lester of &lt;a href=&#34;http://perlbuzz.com/&#34;&gt;Perl Buzz&lt;/a&gt; and Yanick Champoux and Gabor Szabo of &lt;a href=&#34;http://perlweekly.com/&#34;&gt;Perl Weekly&lt;/a&gt; for regularly featuring our articles. Both sites are great ways to stay informed of the latest happenings in the Perl community. I&amp;rsquo;d also like to thank brian d foy for running the Perl Nerd Merit Badge Contest (which provided the prizes for our own contest). We recently &lt;a href=&#34;http://perltricks.com/article/75/2014/3/6/Perl-master-an-interview-with-brian-d-foy&#34;&gt;interviewed&lt;/a&gt; brian to discuss his new book, Mastering Perl second edition. brian shared his views on the book, technical writing and many other Perly topics.&lt;/p&gt;

&lt;p&gt;Finally I&amp;rsquo;d like to thank Jeffrey Thalhammer for his mentorship and encouragement. His startup, &lt;a href=&#34;https://stratopan.com/&#34;&gt;Stratopan.com&lt;/a&gt; provides cloud-based configuration management for Perl.&lt;/p&gt;

&lt;p&gt;See you in Orlando for YAPC::NA 2014!&lt;/p&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F78%2F2014%2F3%2F21%2FPerlTricks-com-is-a-year-old&amp;amp;text=PerlTricks.com+is+a+year+old&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F78%2F2014%2F3%2F21%2FPerlTricks-com-is-a-year-old&amp;amp;via=perltricks&#34;&gt;retweet&lt;/a&gt; it!&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;p&gt;Cover image © &lt;a href=&#34;http://www.flickr.com/photos/24956043@N00/4146448330/in/photolist-7jpCCs-5VK6RQ-5UFrrB-5VGE3r-Lui9q-e3j3Vu-6Y97YT-6YFoaA-6YBmAe-6YFody-vZ6Ty-3mrMDN-7PCJYM-6YdauQ-8ZfsdB-7PCK6e-dvZhLb-5U9Ns9-3KqevR-7ii4Z-8YY3Lh&#34;&gt;Katie Bordner&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - February 2014</title>
      <link>http://perltricks.com/article/74/2014/3/3/What-s-new-on-CPAN---February-2014/</link>
      <pubDate>Mon, 03 Mar 2014 04:10:36 +0000</pubDate>
      
      <guid>http://perltricks.com/article/74/2014/3/3/What-s-new-on-CPAN---February-2014/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo; - a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;apis:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interact with AWS Simple Queue Services using: &lt;a href=&#34;https://metacpan.org/pod/AWS::SQS::Simple&#34;&gt;AWS::SQS::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dokuwiki::RPC::XML::Client&#34;&gt;Dokuwiki::RPC::XML::Client&lt;/a&gt; is a client for DokuWiki&lt;/li&gt;
&lt;li&gt;Access the CampBX bitcoin trading platform using &lt;a href=&#34;https://metacpan.org/pod/Finance::CampBX&#34;&gt;Finance::CampBX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;InfluxDB is a time series database, &lt;a href=&#34;https://metacpan.org/pod/InfluxDB&#34;&gt;InfluxDB&lt;/a&gt; provides a Perl API.&lt;/li&gt;
&lt;li&gt;Sync files between machines using using BitTorrent Sync and &lt;a href=&#34;https://metacpan.org/pod/Net::BitTorrentSync&#34;&gt;Net::BitTorrentSync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::ImKayac::Simple&#34;&gt;WebService::ImKayac::Simple&lt;/a&gt; is a message sender for im.kayac, the notification service&lt;/li&gt;
&lt;li&gt;Manage workflow jobs using &lt;a href=&#34;https://metacpan.org/pod/CA::WAAE&#34;&gt;CA::WAAE&lt;/a&gt; - an interface for CA&amp;rsquo;s Workflow Automation product&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Buid static web sites with &lt;a href=&#34;https://metacpan.org/pod/App::Dapper&#34;&gt;App::Dapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Prettify JSON, YAML and Perl data and translate into other languages with &lt;a href=&#34;https://metacpan.org/pod/distribution/App-pretty/bin/pretty&#34;&gt;pretty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bots:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Bots&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fly the Parrot AR.Drone using &lt;a href=&#34;https://metacpan.org/pod/UAV::Pilot::ARDrone&#34;&gt;UAV::Pilot::ARDrone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Gnuplot::Builder&#34;&gt;Gnuplot::Builder&lt;/a&gt; is an OO library for the gnuplot&lt;/li&gt;
&lt;li&gt;Share data efficiently between processes using &lt;a href=&#34;https://metacpan.org/pod/Hash::SharedMem&#34;&gt;Hash::SharedMem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Image::Quantize&#34;&gt;Image::Quantize&lt;/a&gt; will quantize image data into 256 or fewer colours&lt;/li&gt;
&lt;li&gt;Build JSON under memory constraints with &lt;a href=&#34;https://metacpan.org/pod/JSON::Builder&#34;&gt;JSON::Builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Generate random Japanese names using &lt;a href=&#34;https://metacpan.org/pod/Mock::Person::JP&#34;&gt;Mock::Person::JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-system-administration:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Development &amp;amp; System Administration&lt;/h3&gt;

&lt;p&gt;Find all CPAN modules that reference a particular CPAN module with &lt;a href=&#34;https://metacpan.org/pod/CPAN::ReverseDependencies&#34;&gt;CPAN::ReverseDependencies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/warnings::MaybeFatal&#34;&gt;warnings::MaybeFatal&lt;/a&gt; will turn warnings FATAL at compile time only&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/IPC::PrettyPipe&#34;&gt;IPC::PrettyPipe&lt;/a&gt; facilitates debugging and execution piped commands.&lt;/p&gt;

&lt;p&gt;A whole host of new Dist::Zilla validation plugins:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check for plugins performing actions outside of the appropriate phase with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::VerifyPhases&#34;&gt;Dist::Zilla::Plugin::VerifyPhases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Test::DiagINC&#34;&gt;Dist::Zilla::Plugin::Test::DiagINC&lt;/a&gt; helps you find the @INC dependencies for a specific test failure&lt;/li&gt;
&lt;li&gt;Check for clean namespaces: &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Test::CleanNamespaces&#34;&gt;Dist::Zilla::Plugin::Test::CleanNamespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Breaks&#34;&gt;Dist::Zilla::Plugin::Breaks&lt;/a&gt; tracks breaking module versions as metadata and &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Test::CheckBreaks&#34;&gt;Dist::Zilla::Plugin::Test::CheckBreaks&lt;/a&gt; tests for breaks&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fun:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Fun&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Obfuscate text in the style of the Zalgo meme: &lt;a href=&#34;https://metacpan.org/pod/Acme::Zalgo&#34;&gt;Acme::Zalgo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/SudokuTrainer&#34;&gt;SudokuTrainer&lt;/a&gt; helps detect successful Sudoku strategies&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;maths-science:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Maths &amp;amp; Science&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AI::FANN::Evolving&#34;&gt;AI::FANN::Evolving&lt;/a&gt; is an evolving artificial neural implementation class for the Fast Artificial Neural Network library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;security:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Security&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::Curve25519&#34;&gt;Crypt::Curve25519&lt;/a&gt; will generate a shared secret using an elliptic-curve Diffie-Hellman function, for message encryption.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::Lucifer&#34;&gt;Crypt::Lucifer&lt;/a&gt; is an implementation of IBM&amp;rsquo;s Lucifer block cipher from the 1970s.&lt;/li&gt;
&lt;li&gt;Enable ScryptKDF in DBIx::Class with &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::EncodedColumn::Crypt::Scrypt&#34;&gt;DBIx::Class::EncodedColumn::Crypt::Scrypt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;testing:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Testing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Cucumber::Tiny&#34;&gt;Test::Cucumber::Tiny&lt;/a&gt; is a lightweight, plaintext-driven testing framework&lt;/li&gt;
&lt;li&gt;Conveniently manage the state of DBIx::Class test data with &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::EasyFixture&#34;&gt;DBIx::Class::EasyFixture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::DiagINC&#34;&gt;Test::DiagINC&lt;/a&gt; will list all (deep) dependencies on test failure&lt;/li&gt;
&lt;li&gt;Create a temporary instance of MongoDb for testing with &lt;a href=&#34;https://metacpan.org/pod/Test::mongod&#34;&gt;Test::mongod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:2d8272e93c3da5df9d7ac03a7c059dd0&#34;&gt;Web&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/HTTP::Entity::Parser&#34;&gt;HTTP::Entity::Parser&lt;/a&gt; is a PSGI compliant HTTP entity parser&lt;/p&gt;

&lt;p&gt;Add a timeout and retry feature to HTTP::Tiny using &lt;a href=&#34;https://metacpan.org/pod/HTTP::Retry&#34;&gt;HTTP::Retry&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make Catalyst user notification handling easier with &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::SimpleMessage&#34;&gt;Catalyst::Plugin::SimpleMessage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::Session::Store::CHI&#34;&gt;Catalyst::Plugin::Session::Store::CHI&lt;/a&gt; let&amp;rsquo;s you use the &lt;a href=&#34;https://metacpan.org/pod/CHI&#34;&gt;CHI&lt;/a&gt; module as the session store.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::LightProfile&#34;&gt;Plack::Middleware::LightProfile&lt;/a&gt; is a simple profiler for Plack applications.&lt;/p&gt;

&lt;p&gt;Dump the Apache server scoreboard when full with &lt;a href=&#34;https://metacpan.org/pod/Apache2::ScoreboardDumper&#34;&gt;Apache2::ScoreboardDumper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New Mojolicious modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::FriendFeed&#34;&gt;Mojo::FriendFeed&lt;/a&gt; is a non blocking FriendFeed listener&lt;/li&gt;
&lt;li&gt;Run a generic TCP server with &lt;a href=&#34;https://metacpan.org/pod/Mojo::Server::TCP&#34;&gt;Mojo::Server::TCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Defer template rendering with &lt;a href=&#34;https://metacpan.org/pod/MojoX::Renderer::IncludeLater&#34;&gt;MojoX::Renderer::IncludeLater&lt;/a&gt; a template post-processor&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::VHost&#34;&gt;Mojolicious::Plugin::VHost&lt;/a&gt; adds virtual hosts to Mojolicious&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F74%2F2014%2F3%2F3%2FWhat-s-new-on-CPAN-February-2014&amp;amp;text=What%27s+new+on+CPAN+-+February+2014&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F74%2F2014%2F3%2F3%2FWhat-s-new-on-CPAN-February-2014&amp;amp;via=perltricks&#34;&gt;retweet&lt;/a&gt; it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cool new Perl feature: postfix dereferencing</title>
      <link>http://perltricks.com/article/68/2014/2/13/Cool-new-Perl-feature--postfix-dereferencing/</link>
      <pubDate>Thu, 13 Feb 2014 05:00:02 +0000</pubDate>
      
      <guid>http://perltricks.com/article/68/2014/2/13/Cool-new-Perl-feature--postfix-dereferencing/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Postfix dereferencing is a cool new feature coming in the next major Perl release. Although Perl version 5.20 is not due until the Spring, you can use the postfix dereferencing feature with the Perl developer release now.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;requirements:bb6fe9e47ed1deee9bc3f07fed49dd5e&#34;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll need to install a copy of the latest Perl developer release (v5.19.8). You can get this with Perlbrew:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ perlbrew install perl-5.19.8
$ perlbrew switch perl-5.19.8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or you can download and build Perl v5.19.8 from &lt;a href=&#34;http://www.cpan.org/src/README.html&#34;&gt;cpan.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once 5.19.8 is installed, you&amp;rsquo;ll need the &lt;a href=&#34;https://metacpan.org/pod/experimental&#34;&gt;experimental&lt;/a&gt; distribution. Install it via cpan at the command line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ cpan experimental
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;circumfix-dereferencing-primer:bb6fe9e47ed1deee9bc3f07fed49dd5e&#34;&gt;Circumfix dereferencing primer&lt;/h3&gt;

&lt;p&gt;In Perl we&amp;rsquo;re used to using the circumfix operation to dereference variables. The circumfix operation involves wrapping our reference in curly braces and prepending the appropriate variable sigil. For example, to dereference an array:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;my $array_ref = [1, 2, 3];
push @{$array_ref}, 4;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we declare an array reference, then use the circumfix operation (&amp;ldquo;@{}&amp;rdquo;) to dereference the array, enabling us to push the scalar onto the array. Stylistically the circumfix operation is ugly. Perl syntax is already awash with sigils and curly braces and we don&amp;rsquo;t need any more. Circumfix dereferences can also be hard to read in the case of deeply nested references, as the dereferencing sigil is on the left, whilst the chain of dereferencing arrows grow to the right:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;my $deep_array_ref = [[[[[1,2,3]]]]];
push @{$deep_array_ref-&amp;gt;[0][0][0][0]}, 4;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;enter-postfix-dereferencing:bb6fe9e47ed1deee9bc3f07fed49dd5e&#34;&gt;Enter postfix dereferencing&lt;/h3&gt;

&lt;p&gt;Postfix dereferencing is a new feature and a drop-in replacement for circumfix dereferencing. Instead of wrapping the reference with a circumfix operation, we append a dereferencing sigil to the end of the reference. Let&amp;rsquo;s revisit the previous two examples using postfix dereferencing:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;use experimental &#39;postderef&#39;;

my $array_ref = [1, 2, 3];
push $array_ref-&amp;gt;@*, 4;

my $deep_array_ref = [[[[[1,2,3]]]]];
push $deep_array_ref-&amp;gt;[0][0][0][0]-&amp;gt;@*, 4;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we dereferenced the arrays using the postfix operation (&amp;ldquo;-&amp;gt;@*&amp;rdquo;). You can even get the array&amp;rsquo;s last element index:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;use experimental &#39;postderef&#39;;

my $array_ref = [1, 2, 3];
my $last_element_index = $array_ref-&amp;gt;$#*;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is cleaner than circumfix as there are no extra curly braces, it&amp;rsquo;s more intuitive as it follows left-to-right precedence and nested references are easier to read as we don&amp;rsquo;t have to track back to the beginning of the reference to locate the sigil. We have a winner!&lt;/p&gt;

&lt;h3 id=&#34;postfix-dereference-works-anywhere-circumfix-does:bb6fe9e47ed1deee9bc3f07fed49dd5e&#34;&gt;Postfix dereference works anywhere circumfix does&lt;/h3&gt;

&lt;p&gt;Arrays aren&amp;rsquo;t the only beneficiary of this new feature. Postfix dereferencing works with scalars, hashes, coderefs and globs too:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;use experimental &#39;postderef&#39;;
use feature &#39;say&#39;;

my $scalar   = &#39;hello world!&#39;;
my %hash     = ( hello =&amp;gt; &#39;world!&#39; );
my $code     = sub { say &#39;hello world!&#39; };

my $sundry_ref = [  \$scalar,
                    \%hash,
                     $code ];

# scalar
say $sundry_ref-&amp;gt;[0]-&amp;gt;$*;

# hash
for (keys $sundry_ref-&amp;gt;[1]-&amp;gt;%*) { say &amp;quot;$_ $sundry_ref-&amp;gt;[1]{$_}&amp;quot; }

# coderef
$sundry_ref-&amp;gt;[2]-&amp;gt;&amp;amp;*;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conclusion:bb6fe9e47ed1deee9bc3f07fed49dd5e&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Postfix dereferencing syntax is cleaner and easier to follow than circumfix. If you haven&amp;rsquo;t seen it already, check out Perl pumpking, Ricardo Signes &lt;a href=&#34;http://www.youtube.com/watch?v=Sp102BECq8s&amp;amp;t=63m11s&#34;&gt;presenting&lt;/a&gt; postfix dereferencing at NYC.pm (the rest of the talk is great too).&lt;/p&gt;

&lt;p&gt;For more postfix dereferencing examples, take a look at the Perl &lt;a href=&#34;https://github.com/Perl/perl5/blob/blead/t/op/postfixderef.t&#34;&gt;source test file&lt;/a&gt; and the new &lt;a href=&#34;http://search.cpan.org/~shay/perl-5.19.5/pod/perlref.pod#Postfix_Dereference_Syntax&#34;&gt;perlref&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F68%2F2014%2F2%2F13%2FCool-new-Perl-feature-postfix-dereferencing&amp;amp;text=Cool%20new%20Perl%20feature%3A%20postfix%20dereferencing&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F68%2F2014%2F2%2F13%2FCool-new-Perl-feature-postfix-dereferencing&amp;amp;via=perltricks&#34;&gt;retweet it!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - January 2014</title>
      <link>http://perltricks.com/article/65/2014/2/3/What-s-new-on-CPAN---January-2014/</link>
      <pubDate>Mon, 03 Feb 2014 13:29:44 +0000</pubDate>
      
      <guid>http://perltricks.com/article/65/2014/2/3/What-s-new-on-CPAN---January-2014/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to the first edition of &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;. Every month we aim to bring you a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;apis:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Games::EveOnline::EveCentral&#34;&gt;Games::EveOnline::EveCentral&lt;/a&gt; is an interface to the ever-popular game EVE Online.&lt;/li&gt;
&lt;li&gt;Want to manage corporate HR data via an online service? &lt;a href=&#34;https://metacpan.org/pod/WebService::BambooHR&#34;&gt;WebService::BambooHR.&lt;/a&gt; provides an API for BambooHR.com.&lt;/li&gt;
&lt;li&gt;Add setlock functionality to Redis with &lt;a href=&#34;https://metacpan.org/pod/Redis::Setlock&#34;&gt;Redis::Setlock&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Need to translate addresses into map coordinates (geocoding)? &lt;a href=&#34;https://metacpan.org/pod/WebService::Geocodio&#34;&gt;WebService::Geocodio&lt;/a&gt; is a wrapper for geocod.io that does just that.&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re interested in Bitcoin trading, &lt;a href=&#34;https://metacpan.org/pod/Finance::Bank::Kraken&#34;&gt;Finance::Bank::Kraken&lt;/a&gt; is an API for the Kraken bitcoin market.&lt;/li&gt;
&lt;li&gt;Want to scrape websites intelligently ? &lt;a href=&#34;https://metacpan.org/pod/WebService::Diffbot&#34;&gt;WebService::Diffbot&lt;/a&gt; is an unoffical Perl API for the Diffbot service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/proxyhunter&#34;&gt;proxyhunter&lt;/a&gt; is a proxy server search and checking tool. It supports Postgres, MySQL and SQLite as backend models.&lt;/li&gt;
&lt;li&gt;Pipe application output to a websocket with &lt;a href=&#34;https://metacpan.org/pod/App::screenorama&#34;&gt;App::screenorama&lt;/a&gt; it can capture stdout / stderr.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::YTDL&#34;&gt;App::YTDL&lt;/a&gt; is another YouTube downloader. Time will tell if it surpasses current king WWW::YouTube::Download.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bots:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Bots&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now you can control you&amp;rsquo;re own remote control car with &lt;a href=&#34;https://metacpan.org/pod/UAV::Pilot::WumpusRover::Server&#34;&gt;UAV::Pilot::WumpusRover::Server&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Work with JSON in Perl? Consider &lt;a href=&#34;https://metacpan.org/pod/IO::Async::JSONStream&#34;&gt;IO::Async::JSONStream&lt;/a&gt; it asynchronously decodes JSON into Perl data structures.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/EBook::EPUB::Check&#34;&gt;EBook::EPUB::Check&lt;/a&gt; validates .epub files.&lt;/li&gt;
&lt;li&gt;Need to create realistic but fake data? &lt;a href=&#34;https://metacpan.org/pod/Faker&#34;&gt;Faker&lt;/a&gt; is a re-implementation of the classic Data::Faker module.&lt;/li&gt;
&lt;li&gt;Give &lt;a href=&#34;https://metacpan.org/pod/Image::JPEG::EstimateQuality&#34;&gt;Image::JPEG::EstimateQuality&lt;/a&gt; a JPEG and it will estimate the photo quality.&lt;/li&gt;
&lt;li&gt;Convert markdown to phpBB / BBCode using &lt;a href=&#34;https://metacpan.org/pod/Markdown::phpBB&#34;&gt;Markdown::phpBB&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Biblio::SICI&#34;&gt;Biblio::SICI&lt;/a&gt; provides methods for working with Serial Item and Contribution Identifiers an ANSI/NISO standard for periodicals.&lt;/li&gt;
&lt;li&gt;If you work with TBX data, &lt;a href=&#34;https://metacpan.org/pod/Convert::TBX::Min&#34;&gt;Convert::TBX::Min&lt;/a&gt; will convert TBX-Min to TBX-Basic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-system-administration:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Development &amp;amp; System Administration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://metacpan.org/pod/Sub::Trigger::Lock&#34;&gt;Sub::Trigger::Lock&lt;/a&gt; to prevent direct access of Moose attributes, and force users to only use the implemented interface.&lt;/li&gt;
&lt;li&gt;Monitor process memory usage with &lt;a href=&#34;https://metacpan.org/pod/Memory::Stats&#34;&gt;Memory::Stats&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Writing a Perl XS module? &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::TemplateXS&#34;&gt;Dist::Zilla::Plugin::TemplateXS&lt;/a&gt; is a template driven plugin for minting new XS files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fun:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Fun&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Chess::960&#34;&gt;Chess::960&lt;/a&gt; is a random starting position generator for Chess960.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::SyoboiCalendar&#34;&gt;WebService::SyoboiCalendar&lt;/a&gt; provides an interface to an online Japanese TV schedule for Anime shows.&lt;/li&gt;
&lt;li&gt;Check out &lt;a href=&#34;https://metacpan.org/pod/Acme::Ehoh&#34;&gt;Acme::Ehoh&lt;/a&gt;, it will return your lucky direction, based on ancient Japanese traditions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;maths-science:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Maths &amp;amp; Science&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Calculate moving averages of data with &lt;a href=&#34;https://metacpan.org/pod/PDL::Finance::TA&#34;&gt;PDL::Finance::TA&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graph::RandomPath&#34;&gt;Graph::RandomPath&lt;/a&gt; will generate a random path between to vertices in a Graph object.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graph::SomeUtils&#34;&gt;Graph::SomeUtils&lt;/a&gt; provides utility methods for Graph objects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;networking:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Networking&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Forward TCP / UDP packets to another host with &lt;a href=&#34;https://metacpan.org/pod/Net::Forward&#34;&gt;Net::Forward&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;testing:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Testing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Lembas&#34;&gt;Lembas&lt;/a&gt; is a new framework for testing command line applications. It has a simple markup that follows shell commands almost verbatim.&lt;/li&gt;
&lt;li&gt;Want to use database data in your testing? Take a look at &lt;a href=&#34;https://metacpan.org/pod/Test::FixtureBuilder&#34;&gt;Test::FixtureBuilder&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:8c4b7f8b3bec75e6e0930a6b572cc518&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Render React JavaScript components in TT templates using &lt;a href=&#34;https://metacpan.org/pod/Template::Plugin::React&#34;&gt;Template::Plugin::React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Display beautiful Perl code in webpages without JavaScript using &lt;a href=&#34;https://metacpan.org/pod/PPI::Prettify&#34;&gt;PPI::Prettify&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Authenticate a user against multiple realms with &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Authentication::Credential::Fallback&#34;&gt;Catalyst::Authentication::Credential::Fallback&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Legacy::Routing&#34;&gt;Dancer::Plugin::Legacy::Routing&lt;/a&gt; helps you safely refactor your Dancer application routes.&lt;/li&gt;
&lt;li&gt;Speed up Mojolicious&amp;rsquo; JSON handling with &lt;a href=&#34;https://metacpan.org/pod/MojoX::JSON::XS&#34;&gt;MojoX::JSON::XS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Render POD in your Mojolicious app with &lt;a href=&#34;https://metacpan.org/pod/MojoX::Plugin::PODRenderer&#34;&gt;MojoX::Plugin::PODRenderer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Command::nopaste&#34;&gt;Mojolicious::Command::nopaste&lt;/a&gt; to build a pastebin (nopaste) site with Mojolicious.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enjoyed this article? Help us out and &lt;a href=&#34;https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fperltricks.com%2Farticle%2F65%2F2014%2F2%2F3%2FWhat-s-new-on-CPAN-January-2014&amp;amp;text=What&#39;s%20new%20on%20CPAN%20-%20January%202014&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fperltricks.com%2Farticle%2F65%2F2014%2F2%2F3%2FWhat-s-new-on-CPAN-January-2014&amp;amp;via=perltricks&#34;&gt;retweet&lt;/a&gt; us!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get 30% off the new Perl One Liners book</title>
      <link>http://perltricks.com/article/56/2013/12/25/Get-30--off-the-new-Perl-One-Liners-book/</link>
      <pubDate>Wed, 25 Dec 2013 23:50:00 +0000</pubDate>
      
      <guid>http://perltricks.com/article/56/2013/12/25/Get-30--off-the-new-Perl-One-Liners-book/</guid>
      <description>&lt;p&gt;&lt;em&gt;Merry Christmas and happy holidays! Those generous folks at No Starch Press are offering a 30% discount on the new Perl book: Perl One Liners by Peteris Krumins until 15th January 2014. Read on to find out how to purchase.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The 30% discount is available at the No Starch Press web page for the &lt;a href=&#34;http://www.nostarch.com/perloneliners&#34;&gt;Perl One Liners book&lt;/a&gt;. The offer is valid on both the paper and ebook versions. Just add the product to your cart and when checking out use the discount code: &lt;strong&gt;perltricks&lt;/strong&gt;. This offer is available until 15th January 2014. This is not an affiliate link - PerlTricks receives no payment for these sales.&lt;/p&gt;

&lt;p&gt;The ebook is currently available on &lt;a href=&#34;http://www.amazon.com/gp/product/B00GS9BZLU/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B00GS9BZLU&amp;amp;linkCode=as2&amp;amp;tag=perltrickscom-20&#34;&gt;Amazon.com priced at $9.99&lt;/a&gt; which is cheaper than the No Starch Press offer (affiliate link). However with Amazon you only get the kindle version, whereas with the No Starch Press ebook you get it in: pdf, mobi and epub formats.&lt;/p&gt;

&lt;p&gt;Whoever you buy the book from, it&amp;rsquo;s highly recommended. We also &lt;a href=&#34;http://perltricks.com/article/54/2013/12/18/An-interview-with-Peteris-Krumins&#34;&gt;recently interviewed&lt;/a&gt; the book&amp;rsquo;s author, Peteris Krumins. If you haven&amp;rsquo;t read the interview yet, &lt;a href=&#34;http://perltricks.com/article/54/2013/12/18/An-interview-with-Peteris-Krumins&#34;&gt;check it out&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

