<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cron on Perl programming news, code and culture</title>
    <link>https://dnmfarrell.github.io/tags/cron/</link>
    <description>Recent content in Cron on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Dec 2013 15:08:51 +0000</lastBuildDate>
    <atom:link href="https://dnmfarrell.github.io/tags/cron/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Schedule jobs like a boss with every</title>
      <link>https://dnmfarrell.github.io/article/55/2013/12/22/Schedule-jobs-like-a-boss-with-every/</link>
      <pubDate>Sun, 22 Dec 2013 15:08:51 +0000</pubDate>
      
      <guid>https://dnmfarrell.github.io/article/55/2013/12/22/Schedule-jobs-like-a-boss-with-every/</guid>
      <description>&lt;nav&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#requirements:85a5c4939839050f86f705c212d802c2&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#get-every:85a5c4939839050f86f705c212d802c2&#34;&gt;Get every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scheduling-jobs-with-every:85a5c4939839050f86f705c212d802c2&#34;&gt;Scheduling jobs with every&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#further-info:85a5c4939839050f86f705c212d802c2&#34;&gt;Further info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;p&gt;Scheduling jobs on cron is often a trial-and-error process but every, a command line app written in Perl makes it a lot easier.&lt;/p&gt;

&lt;h6 id=&#34;requirements:85a5c4939839050f86f705c212d802c2&#34;&gt;Requirements&lt;/h6&gt;

&lt;p&gt;You need to have cron, which comes with most Unix-based platforms (e.g. Linux, Mac OSX, BSD) and have Perl installed.&lt;/p&gt;

&lt;h6 id=&#34;get-every:85a5c4939839050f86f705c212d802c2&#34;&gt;Get every&lt;/h6&gt;

&lt;p&gt;every was developed by &lt;a href=&#34;http://re-becca.org/&#34;&gt;Rebecca&lt;/a&gt; and is hosted on her &lt;a href=&#34;https://github.com/iarna/App-Every&#34;&gt;Github&lt;/a&gt; page. You can download it directly from the command line using wget:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ wget &#39;https://raw.github.com/iarna/App-Every/master/packed/every&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or curl:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ curl -O &#39;https://raw.github.com/iarna/App-Every/master/packed/every&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save every to /usr/bin or add the parent directory to your PATH variable so you can run every from the command line.&lt;/p&gt;

&lt;h6 id=&#34;scheduling-jobs-with-every:85a5c4939839050f86f705c212d802c2&#34;&gt;Scheduling jobs with every&lt;/h6&gt;

&lt;p&gt;The command to every to schedule a job takes the form: &amp;ldquo;every [num] unit program&amp;rdquo; (num defaults to one). So for example if you wanted to schedule a shell script to run every minute, type the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ every minute script.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which creates the following crontab:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;SHELL=/bin/bash
PATH=/home/sillymoose/perl5/perlbrew/bin:/home/sillymoose/perl5/perlbrew/perls/perl-5.16.3/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/home/sillymoose/.local/bin:/home/sillymoose/bin:
*/1 * * * * cd &amp;quot;/home/sillymoose&amp;quot;;  script.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;every translates the command into a new crontab entry and prints it on the command line. Helpfully it will set the SHELL variable and copy the user&amp;rsquo;s PATH into the crontab. The icing on the cake is that every prepends a change directory command to ensure that cron executes the job from the script&amp;rsquo;s parent directory. By doing these things, every eliminates (probably) the three most common causes of failed cron jobs.&lt;/p&gt;

&lt;p&gt;Other units that every recognizes are: hour, day, week, month and the day of the week (e.g. Wednesday). The following are all valid every commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ every 10 hours script.sh

$ every mon script.sh

$ every 3 months script.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One really cool feature of modern cron installs is that you can schedule a job to run on reboot. every also supports this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ every @reboot script.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;further-info:85a5c4939839050f86f705c212d802c2&#34;&gt;Further info&lt;/h3&gt;

&lt;p&gt;every has more options than described above. Run &amp;ldquo;every &amp;ndash;help&amp;rdquo; to see the full panoply of options.&lt;/p&gt;

&lt;p&gt;every was written in Perl by &lt;a href=&#34;http://re-becca.org/&#34;&gt;Rebecca&lt;/a&gt;. She is also on twitter (&lt;a href=&#34;https://twitter.com/ReBeccaOrg&#34;&gt;@ReBeccaOrg&lt;/a&gt;). So if you use every and find it useful, maybe reach out and say thank you.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

