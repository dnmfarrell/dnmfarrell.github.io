<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zendesk on Perl programming news, code and culture</title>
    <link>https://dnmfarrell.github.io/tags/zendesk/</link>
    <description>Recent content in Zendesk on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Dec 2015 04:34:15 +0000</lastBuildDate>
    <atom:link href="https://dnmfarrell.github.io/tags/zendesk/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - November 2015</title>
      <link>https://dnmfarrell.github.io/article/202/2015/12/8/What-s-new-on-CPAN---November-2015/</link>
      <pubDate>Tue, 08 Dec 2015 04:34:15 +0000</pubDate>
      
      <guid>https://dnmfarrell.github.io/article/202/2015/12/8/What-s-new-on-CPAN---November-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Highlander&#34;&gt;App::Highlander&lt;/a&gt; can provides simple named locks. Useful!&lt;/li&gt;
&lt;li&gt;Pick one or more random lines from input using &lt;a href=&#34;https://metacpan.org/pod/App::PickRandomLines&#34;&gt;App::PickRandomLines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;Random Access Machine&amp;rdquo; Emulator: &lt;a href=&#34;https://metacpan.org/pod/Language::RAM&#34;&gt;Language::RAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sync data across multiple regions with &lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DynamoDB::HighlyAvailable&#34;&gt;Net::Amazon::DynamoDB::HighlyAvailable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DynamoDB::Table&#34;&gt;Net::Amazon::DynamoDB::Table&lt;/a&gt; provides a high-level interface to Net::Amazon::DyamoDB::Lite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::KeenIO&#34;&gt;WWW::KeenIO&lt;/a&gt; provides a Perl API for the event storage and analytics service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Saucelabs&#34;&gt;WWW::Saucelabs&lt;/a&gt; is a &amp;ldquo;perilously incomplete&amp;rdquo;, yet useful, Perly interface to the Saucelabs REST API&lt;/li&gt;
&lt;li&gt;Find out what&amp;rsquo;s on TV using the TVMaze API and &lt;a href=&#34;https://metacpan.org/pod/WWW::TVMaze&#34;&gt;WWW::TVMaze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Zendesk&#34;&gt;WebService::Zendesk&lt;/a&gt; is another work-in-progress but useful API, this time for Zendesk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::FTPTLS&#34;&gt;Net::FTPTLS&lt;/a&gt; is a super-simple Perl FTP client with TLS support. Cool!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::SSH2::Cisco&#34;&gt;Net::SSH2::Cisco&lt;/a&gt; let&amp;rsquo;s you talk to Cisco routers via SSH!&lt;/li&gt;
&lt;li&gt;Configure, control and monitor rate limits for services with &lt;a href=&#34;https://metacpan.org/pod/RateLimitations&#34;&gt;RateLimitations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Compress data at &lt;em&gt;outrageous&lt;/em&gt; speeds with &lt;a href=&#34;https://metacpan.org/pod/Compress::LZ4Frame&#34;&gt;Compress::LZ4Frame&lt;/a&gt;, which ships with the &lt;a href=&#34;https://github.com/Cyan4973/lz4&#34;&gt;LZ4 compression library&lt;/a&gt; written in C.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::BulkUtil&#34;&gt;DBIx::BulkUtil&lt;/a&gt; provides bulk load and other features for relational databases&lt;/li&gt;
&lt;li&gt;Wow, &lt;a href=&#34;https://metacpan.org/pod/DOM::Tiny&#34;&gt;DOM::Tiny&lt;/a&gt; is a minimalist but feature-rich DOM parser using CSS selectors&lt;/li&gt;
&lt;li&gt;Interesting, play with a virtual file system using &lt;a href=&#34;https://metacpan.org/pod/Filesys::Virtual::Chroot&#34;&gt;Filesys::Virtual::Chroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IMAP::Query&#34;&gt;IMAP::Query&lt;/a&gt; can generateIMAP search queries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mail::DKIM::Iterator&#34;&gt;Mail::DKIM::Iterator&lt;/a&gt; validates DKIM signatures and signs asynchronously&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::Trepan::Deparse&#34;&gt;Devel::Trepan::Deparse&lt;/a&gt; adds deparse support to Devel::Trepan&lt;/li&gt;
&lt;li&gt;Call the JavaScript Handlebars template library from Perl, with &lt;a href=&#34;https://metacpan.org/pod/JavaScript::V8::Handlebars&#34;&gt;JavaScript::V8::Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test &lt;em&gt;some&lt;/em&gt;? Only execute a subset of your test suite using &lt;a href=&#34;https://metacpan.org/pod/Test::Some&#34;&gt;Test::Some&lt;/a&gt;, author Yanick &lt;a href=&#34;http://techblog.babyl.ca/entry/test-some&#34;&gt;blogged&lt;/a&gt; about why this might be useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Unix::Pledge&#34;&gt;Unix::Pledge&lt;/a&gt; restrict system operations on BSD using &lt;code&gt;pledge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Talk to Windows machines over the network using &lt;a href=&#34;https://metacpan.org/pod/Win32::Netsh&#34;&gt;Win32::Netsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Hardware&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/author/PEVANS&#34;&gt;Paul Evans&lt;/a&gt; has been hard at work releasing several new chip driver modules, way to go Paul!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BV4243 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::BV4243&#34;&gt;Device::Chip::BV4243&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DS1307 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::DS1307&#34;&gt;Device::Chip::DS1307&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;INA219 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::INA219&#34;&gt;Device::Chip::INA219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MAX7219 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MAX7219&#34;&gt;Device::Chip::MAX7219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MCP23x17 family &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MCP23x17&#34;&gt;Device::Chip::MCP23x17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MPL3115A2 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MPL3115A2&#34;&gt;Device::Chip::MPL3115A2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate CSS sprites from a series of images using &lt;a href=&#34;https://metacpan.org/pod/CSS::SpriteMaker::Simple&#34;&gt;CSS::SpriteMaker::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Look up zodiac sign for a given date with &lt;a href=&#34;https://metacpan.org/pod/Zodiac::Tiny&#34;&gt;Zodiac::Tiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/LCS::Similar&#34;&gt;LCS::Similar&lt;/a&gt; allows differences in the compared elements of Longest Common Subsequence (LCS) Algorithm&lt;/li&gt;
&lt;li&gt;Simulate genomic restriction digests with &lt;a href=&#34;https://metacpan.org/pod/RestrictionDigest&#34;&gt;RestrictionDigest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::URI&#34;&gt;Catalyst::Plugin::URI&lt;/a&gt; provides nicer and &lt;em&gt;safer&lt;/em&gt; way to get Controller action methods as URIs&lt;/li&gt;
&lt;li&gt;Read and write PhantomJS cookies file using &lt;a href=&#34;https://metacpan.org/pod/HTTP::Cookies::PhantomJS&#34;&gt;HTTP::Cookies::PhantomJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ErrorsAndWarnings&#34;&gt;Mojolicious::Plugin::ErrorsAndWarnings&lt;/a&gt; stores errors and warnings during a request for powerful introspection&lt;/li&gt;
&lt;li&gt;Run a consul server for testing using &lt;a href=&#34;https://metacpan.org/pod/Test::Consul&#34;&gt;Test::Consul&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - June 2015</title>
      <link>https://dnmfarrell.github.io/article/181/2015/7/9/What-s-new-on-CPAN---June-2015/</link>
      <pubDate>Thu, 09 Jul 2015 13:17:10 +0000</pubDate>
      
      <guid>https://dnmfarrell.github.io/article/181/2015/7/9/What-s-new-on-CPAN---June-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Class::Storage&#34;&gt;Class::Storage&lt;/a&gt; is a module for serializing blessed references (objects). Once serialized, an object can be transmitted via JSON, XML, YAML or saved in a data store. Serializing objects can also make IPC easier: coroutines, threads and other processes can pass text but blessed references are often an issue.&lt;/p&gt;

&lt;p&gt;Module author Peter Valdemar MÃ¸rch has pulled together excellent documentation. A welcome addition to CPAN, check out the acknowledgements &lt;a href=&#34;https://metacpan.org/pod/Class::Storage#ACKNOWLEDGEMENTS&#34;&gt;section&lt;/a&gt; for some interesting background on the module. For an alternative approach, you might be interested in &lt;a href=&#34;https://metacpan.org/pod/Object::Serializer&#34;&gt;Object::Serializer&lt;/a&gt;. For non-readable serializers, checkout &lt;a href=&#34;https://metacpan.org/pod/Storable&#34;&gt;Storable&lt;/a&gt; and the newer and faster &lt;a href=&#34;https://metacpan.org/pod/Sereal&#34;&gt;Sereal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; - when working with object serializers like Class::Storage, only deserialize trusted data, as malicious code can be injected into the data, and when the data is deserialized, the code will be executed automatically. See for example this bug &lt;a href=&#34;https://rt.cpan.org/Public/Bug/Display.html?id=105772&#34;&gt;report&lt;/a&gt; (&lt;em&gt;Thanks to Reini Urban for the reminder&lt;/em&gt;).&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/API::Zendesk&#34;&gt;API::Zendesk&lt;/a&gt; provides a Perl interface for the customer support app&lt;/li&gt;
&lt;li&gt;Painlessly install libsvm, the support vector machine library using &lt;a href=&#34;https://metacpan.org/pod/Alien::LIBSVM&#34;&gt;Alien::LIBSVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use Slack? Of course you do. Check out &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::SlackRTM&#34;&gt;AnyEvent::SlackRTM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Develop your first Slack bot with &lt;a href=&#34;https://metacpan.org/pod/Bot::Backbone::Service::SlackChat&#34;&gt;Bot::Backbone::Service::SlackChat&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Interchange::Search::Solr&#34;&gt;Interchange::Search::Solr&lt;/a&gt; let&amp;rsquo;s you use Solr search with Perl&lt;/li&gt;
&lt;li&gt;Be popular, send your co-workers Bonusly with &lt;a href=&#34;https://metacpan.org/pod/WebService::Bonusly&#34;&gt;WebService::Bonusly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebDriver::Tiny&#34;&gt;WebDriver::Tiny&lt;/a&gt; is an all-new implementation of a Selenium webdriver API for Perl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::App&#34;&gt;Config::App&lt;/a&gt; implements &amp;ldquo;cascading configurations&amp;rdquo; - looks like a convenient way to have context-specific configurations without resorting to Perl code&lt;/li&gt;
&lt;li&gt;Quickly rind files on your Mac using &lt;a href=&#34;https://metacpan.org/pod/Mac::FindFile&#34;&gt;Mac::FindFile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Freenode&#34;&gt;Perl::Critic::Freenode&lt;/a&gt; is a compilation of policies recommended by the folks on the #perl channel on freenode IRC&lt;/li&gt;
&lt;li&gt;Include ditaa diagrams in pod with &lt;a href=&#34;https://metacpan.org/pod/Pod::Weaver::Plugin::Ditaa&#34;&gt;Pod::Weaver::Plugin::Ditaa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract data from your Zoom 5341J cable modem with &lt;a href=&#34;https://metacpan.org/pod/Device::CableModem::Zoom5341J&#34;&gt;Device::CableModem::Zoom5341J&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Log::Dispatch::HipChat&#34;&gt;Log::Dispatch::HipChat&lt;/a&gt; will send your log messages to HipChat&lt;/li&gt;
&lt;li&gt;Moving averages are easy to implement, and easy to get wrong. The next time you need one, consider &lt;a href=&#34;https://metacpan.org/pod/Math::SMA&#34;&gt;Math::SMA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re working with 35mm film and DX codes, you might like &lt;a href=&#34;https://metacpan.org/pod/Photography::DX&#34;&gt;Photography::DX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When stuck in Git merge conflict hell, sometimes it&amp;rsquo;s easier to say &amp;ldquo;I&amp;rsquo;m right&amp;rdquo;. &lt;a href=&#34;https://metacpan.org/pod/App::Git::Workflow::Command::Take&#34;&gt;App::Git::Workflow::Command::Take&lt;/a&gt; let&amp;rsquo;s you tell Git to merge your changes. You win!&lt;/li&gt;
&lt;li&gt;If you have a load of Git repos that you&amp;rsquo;d like to execute a command against, you might like &lt;a href=&#34;https://metacpan.org/pod/App::Multigit&#34;&gt;App::Multigit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Assert::Conditional&#34;&gt;Assert::Conditional&lt;/a&gt; from Tom Christiansen let&amp;rsquo;s you conditionally compile assertions into your Perl programs, ala C&amp;rsquo;s assert.h. Wow&lt;/li&gt;
&lt;li&gt;Daemonize &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://metacpan.org/pod/JIP::Daemon&#34;&gt;JIP::Daemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;text-language:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Text &amp;amp; Language&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::Unicodify&#34;&gt;Acme::Unicodify&lt;/a&gt; can convert ASCII text into Unicode-esque characters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::RS14_PP&#34;&gt;Crypt::RS14_PP&lt;/a&gt; is a pure Perl implementation of the RS14 encryption algorithm&lt;/li&gt;
&lt;li&gt;Convert HTML into FreeStyleWiki markup using &lt;a href=&#34;https://metacpan.org/pod/HTML::WikiConverter::FreeStyleWiki&#34;&gt;HTML::WikiConverter::FreeStyleWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Awesome! detect the language with &lt;a href=&#34;https://metacpan.org/pod/Lingua::Identify::CLD2&#34;&gt;Lingua::Identify::CLD2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Hogan&#34;&gt;Text::Hogan&lt;/a&gt; is a Perl clone of hogan.js, the JavaScript template engine. Supports pre-compilation!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-and-mathematics:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Science and Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Algorithm::BloomFilter&#34;&gt;Algorithm::BloomFilter&lt;/a&gt; is a simple, superfast bloom filter implementation written in XS&lt;/li&gt;
&lt;li&gt;Not a new module, but it is new to CPAN, &lt;a href=&#34;https://metacpan.org/pod/App::Chart&#34;&gt;App::Chart&lt;/a&gt; the visual charting library is useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/BioX::Workflow&#34;&gt;BioX::Workflow&lt;/a&gt; is an &amp;ldquo;opinionated template based workflow writer&amp;rdquo;, hailing from the Bioinformatics World, but not just for BioX&lt;/li&gt;
&lt;li&gt;The Longest Common Subsequence algorithm is used for diffing text, among other uses. &lt;a href=&#34;https://metacpan.org/pod/LCS::XS&#34;&gt;LCS::XS&lt;/a&gt; is a supercharged version, written in XS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract all of the supported URLs from your Catalyst app using &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::ActionPaths&#34;&gt;Catalyst::Plugin::ActionPaths&lt;/a&gt; (disclosure, I&amp;rsquo;m the module author)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Piwik&#34;&gt;Dancer::Plugin::Piwik&lt;/a&gt; helps you integrate Pwik analytics with a Dancer app&lt;/li&gt;
&lt;li&gt;Use MongoDB with Minion, the job queue application using &lt;a href=&#34;https://metacpan.org/pod/Minion::Backend::MongoDB&#34;&gt;Minion::Backend::MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Reactor::UV&#34;&gt;Mojo::Reactor::UV&lt;/a&gt; let&amp;rsquo;s you use the C library, libuv as the backend event loop for your Mojo application&lt;/li&gt;
&lt;li&gt;Rapidly expand shortened URLs with &lt;a href=&#34;https://metacpan.org/pod/WWW::Expand::More&#34;&gt;WWW::Expand::More&lt;/a&gt;. Cool!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Updated to include other example serializer modules and deserialization warning - 2015-07-09&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

