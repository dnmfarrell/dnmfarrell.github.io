<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slack on Perl programming news, code and culture</title>
    <link>http://perltricks.com/tags/slack/</link>
    <description>Recent content in Slack on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Nov 2015 15:24:04 +0000</lastBuildDate>
    <atom:link href="http://perltricks.com/tags/slack/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - October 2015</title>
      <link>http://perltricks.com/article/199/2015/11/3/What-s-new-on-CPAN---October-2015/</link>
      <pubDate>Tue, 03 Nov 2015 15:24:04 +0000</pubDate>
      
      <guid>http://perltricks.com/article/199/2015/11/3/What-s-new-on-CPAN---October-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Skeletor&#34;&gt;App::Skeletor&lt;/a&gt; bootstraps new Perl projects based on customizable templates. Similar to Dist::Zilla (&lt;em&gt;why do all these builder tools have such great names?&lt;/em&gt;) but intentionally less ambitious, App::Skeletor looks more useful as a component of a Perl app or a starter kit for module developers. You can run it from the terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ skeletor --template Skeletor::Template::Example \
  --as My::App \
  --directory ~/Projects \ 
  --author &#39;John Doe&#39; \
  --year 2015
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s early days but module author John Napiorkowski has already written enough &lt;a href=&#34;https://metacpan.org/pod/App::Skeletor&#34;&gt;documentation&lt;/a&gt; to get you started. It would be great if we could develop a set of community templates for Perl modules. Take a look today!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:e5833c090d1cf186b0a95931b7696f03&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::JIRAPrint&#34;&gt;App::JIRAPrint&lt;/a&gt; posts JIRA Tickets on Postit notes!&lt;/li&gt;
&lt;li&gt;Send repository commit digest emails with &lt;a href=&#34;https://metacpan.org/pod/App::SCM::Digest&#34;&gt;App::SCM::Digest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get terminal access to the Wikidata Query Service using &lt;a href=&#34;https://metacpan.org/pod/App::wdq&#34;&gt;App::wdq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get Airbrake notifications with &lt;a href=&#34;https://metacpan.org/pod/Net::Airbrake::V2&#34;&gt;Net::Airbrake::V2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::ConstructorIO&#34;&gt;WebService::ConstructorIO&lt;/a&gt; provides a Perly interface to the predictive search service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Pingboard&#34;&gt;WebService::Pingboard&lt;/a&gt; is an API for the employee directory service&lt;/li&gt;
&lt;li&gt;Send newsletters via SendGrid using &lt;a href=&#34;https://metacpan.org/pod/WebService::SendGrid::Newsletter&#34;&gt;WebService::SendGrid::Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Authenticate users via LinkedIn with &lt;a href=&#34;https://metacpan.org/pod/Linkedin::OAuth2&#34;&gt;Linkedin::OAuth2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IPC::Lockfile&#34;&gt;IPC::Lockfile&lt;/a&gt; - run only one instance of a program at a time using flock (disclosure - I am the module author)&lt;/li&gt;
&lt;li&gt;Instead of a file, &lt;a href=&#34;https://metacpan.org/pod/Lock::Server&#34;&gt;Lock::Server&lt;/a&gt; provides a light-weight socket based resource locking manager&lt;/li&gt;
&lt;li&gt;Asynchronously wait for a port to open using &lt;a href=&#34;https://metacpan.org/pod/Net::Async::EmptyPort&#34;&gt;Net::Async::EmptyPort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get a fast, integer-based memory cache with &lt;a href=&#34;https://metacpan.org/pod/Cache::Memory::Simple::ID&#34;&gt;Cache::Memory::Simple::ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DB::DataStore&#34;&gt;DB::DataStore&lt;/a&gt; A simple record-based data store with no non-core dependencies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Digest::FNV::XS&#34;&gt;Digest::FNV::XS&lt;/a&gt; implements the speedy FNV hash algorithm, with support for binary data&lt;/li&gt;
&lt;li&gt;Exchange contact data with CardDAV servers using &lt;a href=&#34;https://metacpan.org/pod/Net::CardDAVTalk&#34;&gt;Net::CardDAVTalk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get All Tests Passingâ„¢ with &lt;a href=&#34;https://metacpan.org/pod/Acme::Test::VW&#34;&gt;Acme::Test::VW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bootstrap a new project from a shared template with &lt;a href=&#34;https://metacpan.org/pod/App::Skeletor&#34;&gt;App::Skeletor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Attribute::Universal&#34;&gt;Attribute::Universal&lt;/a&gt; makes working with subroutine attributes far less painful - woohoo!&lt;/li&gt;
&lt;li&gt;Create enum-like classes using &lt;a href=&#34;https://metacpan.org/pod/Class::Type::Enum&#34;&gt;Class::Type::Enum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disable the &lt;code&gt;state&lt;/code&gt; keyword with &lt;a href=&#34;https://metacpan.org/pod/Devel::Unstate&#34;&gt;Devel::Unstate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Export symbols by attributes with &lt;a href=&#34;https://metacpan.org/pod/Exporter::Attributes&#34;&gt;Exporter::Attributes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Send packets compatible with the Spektrum RC protoocol with &lt;a href=&#34;https://metacpan.org/pod/Device::Spektrum&#34;&gt;Device::Spektrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Not *strictly* hardware but &amp;hellip; get Software-Defined Radio with &lt;a href=&#34;https://metacpan.org/pod/SDR&#34;&gt;SDR&lt;/a&gt; - nice!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::FritzBox&#34;&gt;WebService::FritzBox&lt;/a&gt; - communicate with &lt;a href=&#34;https://en.wikipedia.org/wiki/FRITZ!Box&#34;&gt;FritzBox&lt;/a&gt; devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Map Slack &lt;code&gt;:emoji_strings:&lt;/code&gt; to Unicode text using &lt;a href=&#34;https://metacpan.org/pod/Text::SlackEmoji&#34;&gt;Text::SlackEmoji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::YahooJapan::Baseball&#34;&gt;WWW::YahooJapan::Baseball&lt;/a&gt; provides an interface to Yahoo Japan&amp;rsquo;s baseball stats service&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hilarious - &lt;a href=&#34;https://metacpan.org/pod/Acme::Excuse&#34;&gt;Acme::Excuse&lt;/a&gt; provides excuses when your code fails&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MarpaX::RFC::RFC3629&#34;&gt;MarpaX::RFC::RFC3629&lt;/a&gt; Marpa parsing of UTF-8 byte sequences as per RFC3629&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::HexGrid&#34;&gt;Math::HexGrid&lt;/a&gt; - create hex coordinate grids (disclosure - I am the module author)&lt;/li&gt;
&lt;li&gt;Apply a function to data in different ways using &lt;a href=&#34;https://metacpan.org/pod/PDL::Apply&#34;&gt;PDL::Apply&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDL::DateTime&#34;&gt;PDL::DateTime&lt;/a&gt; stores high precision timestamps&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interesting, &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::ProbabilityRoute&#34;&gt;Dancer2::Plugin::ProbabilityRoute&lt;/a&gt; is a plugin to define behavior with probability matching rules&lt;/li&gt;
&lt;li&gt;Gracefully shutdown your Dancer2 application using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Shutdown&#34;&gt;Dancer2::Plugin::Shutdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use SQLite as a backend for a Minion job queue with &lt;a href=&#34;https://metacpan.org/pod/Minion::Backend::SQLite&#34;&gt;Minion::Backend::SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - June 2015</title>
      <link>http://perltricks.com/article/181/2015/7/9/What-s-new-on-CPAN---June-2015/</link>
      <pubDate>Thu, 09 Jul 2015 13:17:10 +0000</pubDate>
      
      <guid>http://perltricks.com/article/181/2015/7/9/What-s-new-on-CPAN---June-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Class::Storage&#34;&gt;Class::Storage&lt;/a&gt; is a module for serializing blessed references (objects). Once serialized, an object can be transmitted via JSON, XML, YAML or saved in a data store. Serializing objects can also make IPC easier: coroutines, threads and other processes can pass text but blessed references are often an issue.&lt;/p&gt;

&lt;p&gt;Module author Peter Valdemar MÃ¸rch has pulled together excellent documentation. A welcome addition to CPAN, check out the acknowledgements &lt;a href=&#34;https://metacpan.org/pod/Class::Storage#ACKNOWLEDGEMENTS&#34;&gt;section&lt;/a&gt; for some interesting background on the module. For an alternative approach, you might be interested in &lt;a href=&#34;https://metacpan.org/pod/Object::Serializer&#34;&gt;Object::Serializer&lt;/a&gt;. For non-readable serializers, checkout &lt;a href=&#34;https://metacpan.org/pod/Storable&#34;&gt;Storable&lt;/a&gt; and the newer and faster &lt;a href=&#34;https://metacpan.org/pod/Sereal&#34;&gt;Sereal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; - when working with object serializers like Class::Storage, only deserialize trusted data, as malicious code can be injected into the data, and when the data is deserialized, the code will be executed automatically. See for example this bug &lt;a href=&#34;https://rt.cpan.org/Public/Bug/Display.html?id=105772&#34;&gt;report&lt;/a&gt; (&lt;em&gt;Thanks to Reini Urban for the reminder&lt;/em&gt;).&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/API::Zendesk&#34;&gt;API::Zendesk&lt;/a&gt; provides a Perl interface for the customer support app&lt;/li&gt;
&lt;li&gt;Painlessly install libsvm, the support vector machine library using &lt;a href=&#34;https://metacpan.org/pod/Alien::LIBSVM&#34;&gt;Alien::LIBSVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use Slack? Of course you do. Check out &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::SlackRTM&#34;&gt;AnyEvent::SlackRTM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Develop your first Slack bot with &lt;a href=&#34;https://metacpan.org/pod/Bot::Backbone::Service::SlackChat&#34;&gt;Bot::Backbone::Service::SlackChat&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Interchange::Search::Solr&#34;&gt;Interchange::Search::Solr&lt;/a&gt; let&amp;rsquo;s you use Solr search with Perl&lt;/li&gt;
&lt;li&gt;Be popular, send your co-workers Bonusly with &lt;a href=&#34;https://metacpan.org/pod/WebService::Bonusly&#34;&gt;WebService::Bonusly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebDriver::Tiny&#34;&gt;WebDriver::Tiny&lt;/a&gt; is an all-new implementation of a Selenium webdriver API for Perl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::App&#34;&gt;Config::App&lt;/a&gt; implements &amp;ldquo;cascading configurations&amp;rdquo; - looks like a convenient way to have context-specific configurations without resorting to Perl code&lt;/li&gt;
&lt;li&gt;Quickly rind files on your Mac using &lt;a href=&#34;https://metacpan.org/pod/Mac::FindFile&#34;&gt;Mac::FindFile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Freenode&#34;&gt;Perl::Critic::Freenode&lt;/a&gt; is a compilation of policies recommended by the folks on the #perl channel on freenode IRC&lt;/li&gt;
&lt;li&gt;Include ditaa diagrams in pod with &lt;a href=&#34;https://metacpan.org/pod/Pod::Weaver::Plugin::Ditaa&#34;&gt;Pod::Weaver::Plugin::Ditaa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract data from your Zoom 5341J cable modem with &lt;a href=&#34;https://metacpan.org/pod/Device::CableModem::Zoom5341J&#34;&gt;Device::CableModem::Zoom5341J&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Log::Dispatch::HipChat&#34;&gt;Log::Dispatch::HipChat&lt;/a&gt; will send your log messages to HipChat&lt;/li&gt;
&lt;li&gt;Moving averages are easy to implement, and easy to get wrong. The next time you need one, consider &lt;a href=&#34;https://metacpan.org/pod/Math::SMA&#34;&gt;Math::SMA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re working with 35mm film and DX codes, you might like &lt;a href=&#34;https://metacpan.org/pod/Photography::DX&#34;&gt;Photography::DX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When stuck in Git merge conflict hell, sometimes it&amp;rsquo;s easier to say &amp;ldquo;I&amp;rsquo;m right&amp;rdquo;. &lt;a href=&#34;https://metacpan.org/pod/App::Git::Workflow::Command::Take&#34;&gt;App::Git::Workflow::Command::Take&lt;/a&gt; let&amp;rsquo;s you tell Git to merge your changes. You win!&lt;/li&gt;
&lt;li&gt;If you have a load of Git repos that you&amp;rsquo;d like to execute a command against, you might like &lt;a href=&#34;https://metacpan.org/pod/App::Multigit&#34;&gt;App::Multigit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Assert::Conditional&#34;&gt;Assert::Conditional&lt;/a&gt; from Tom Christiansen let&amp;rsquo;s you conditionally compile assertions into your Perl programs, ala C&amp;rsquo;s assert.h. Wow&lt;/li&gt;
&lt;li&gt;Daemonize &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://metacpan.org/pod/JIP::Daemon&#34;&gt;JIP::Daemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;text-language:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Text &amp;amp; Language&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::Unicodify&#34;&gt;Acme::Unicodify&lt;/a&gt; can convert ASCII text into Unicode-esque characters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::RS14_PP&#34;&gt;Crypt::RS14_PP&lt;/a&gt; is a pure Perl implementation of the RS14 encryption algorithm&lt;/li&gt;
&lt;li&gt;Convert HTML into FreeStyleWiki markup using &lt;a href=&#34;https://metacpan.org/pod/HTML::WikiConverter::FreeStyleWiki&#34;&gt;HTML::WikiConverter::FreeStyleWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Awesome! detect the language with &lt;a href=&#34;https://metacpan.org/pod/Lingua::Identify::CLD2&#34;&gt;Lingua::Identify::CLD2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Hogan&#34;&gt;Text::Hogan&lt;/a&gt; is a Perl clone of hogan.js, the JavaScript template engine. Supports pre-compilation!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-and-mathematics:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Science and Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Algorithm::BloomFilter&#34;&gt;Algorithm::BloomFilter&lt;/a&gt; is a simple, superfast bloom filter implementation written in XS&lt;/li&gt;
&lt;li&gt;Not a new module, but it is new to CPAN, &lt;a href=&#34;https://metacpan.org/pod/App::Chart&#34;&gt;App::Chart&lt;/a&gt; the visual charting library is useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/BioX::Workflow&#34;&gt;BioX::Workflow&lt;/a&gt; is an &amp;ldquo;opinionated template based workflow writer&amp;rdquo;, hailing from the Bioinformatics World, but not just for BioX&lt;/li&gt;
&lt;li&gt;The Longest Common Subsequence algorithm is used for diffing text, among other uses. &lt;a href=&#34;https://metacpan.org/pod/LCS::XS&#34;&gt;LCS::XS&lt;/a&gt; is a supercharged version, written in XS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract all of the supported URLs from your Catalyst app using &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::ActionPaths&#34;&gt;Catalyst::Plugin::ActionPaths&lt;/a&gt; (disclosure, I&amp;rsquo;m the module author)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Piwik&#34;&gt;Dancer::Plugin::Piwik&lt;/a&gt; helps you integrate Pwik analytics with a Dancer app&lt;/li&gt;
&lt;li&gt;Use MongoDB with Minion, the job queue application using &lt;a href=&#34;https://metacpan.org/pod/Minion::Backend::MongoDB&#34;&gt;Minion::Backend::MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Reactor::UV&#34;&gt;Mojo::Reactor::UV&lt;/a&gt; let&amp;rsquo;s you use the C library, libuv as the backend event loop for your Mojo application&lt;/li&gt;
&lt;li&gt;Rapidly expand shortened URLs with &lt;a href=&#34;https://metacpan.org/pod/WWW::Expand::More&#34;&gt;WWW::Expand::More&lt;/a&gt;. Cool!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Updated to include other example serializer modules and deserialization warning - 2015-07-09&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

