<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google_maps on Perl programming news, code and culture</title>
    <link>http://perltricks.com/tags/google_maps/</link>
    <description>Recent content in Google_maps on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 May 2016 14:04:49 +0000</lastBuildDate>
    <atom:link href="http://perltricks.com/tags/google_maps/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - April 2016</title>
      <link>http://perltricks.com/article/what-s-new-on-cpan---April-2016/</link>
      <pubDate>Mon, 02 May 2016 14:04:49 +0000</pubDate>
      
      <guid>http://perltricks.com/article/what-s-new-on-cpan---April-2016/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Several new build and config related modules were released last month, off the back of the Perl QA Hackathon. Enjoy!&lt;/p&gt;

&lt;h4 id=&#34;apis-apps:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;APIs &amp;amp; Apps&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use the Pinterest API with &lt;a href=&#34;https://metacpan.org/pod/WebService::Pinterest&#34;&gt;WebService::Pinterest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the Google Maps V3 API with &lt;a href=&#34;https://metacpan.org/pod/HTML::GoogleMaps::V3&#34;&gt;HTML::GoogleMaps::V3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::UINames&#34;&gt;WebService::UINames&lt;/a&gt; generates realistic names using uinames.com&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Backblaze::B2&#34;&gt;Backblaze::B2&lt;/a&gt; is an interface to the B2 cloud storage service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Fl&#34;&gt;Fl&lt;/a&gt; has bindings for the Fast Light Toolkit - a lightweight x11 GUI library&lt;/li&gt;
&lt;li&gt;Use Perl for license plate recognition(!) with &lt;a href=&#34;https://metacpan.org/pod/Image::OpenALPR&#34;&gt;Image::OpenALPR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/TeamCity::Message&#34;&gt;TeamCity::Message&lt;/a&gt; generates TeamCity build messages&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;config-devops:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Config &amp;amp; Devops&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Cool idea, this CPAN.pm plugin installs external dependencies:&lt;a href=&#34;https://metacpan.org/pod/CPAN::Plugin::Sysdeps&#34;&gt;CPAN::Plugin::Sysdeps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Edit and validate Systemd configuration files with &lt;a href=&#34;https://metacpan.org/pod/Config::Model::Systemd&#34;&gt;Config::Model::Systemd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::Processor&#34;&gt;Config::Processor&lt;/a&gt; processes cascading configuration files&lt;/li&gt;
&lt;li&gt;Get some extra typemaps for STL types with &lt;a href=&#34;https://metacpan.org/pod/ExtUtils::Typemaps::STL::Extra&#34;&gt;ExtUtils::Typemaps::STL::Extra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Include a systemd priority column in your Log::Any output with &lt;a href=&#34;https://metacpan.org/pod/Log::Any::Adapter::Journal&#34;&gt;Log::Any::Adapter::Journal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;data:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Data&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Archive::Merged&#34;&gt;Archive::Merged&lt;/a&gt; can virtually merge two archives&lt;/li&gt;
&lt;li&gt;Misnamed database columns? No problem, &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::ResultSet::AccessorsEverywhere&#34;&gt;DBIx::Class::ResultSet::AccessorsEverywhere&lt;/a&gt; allows declaration of accessor names and use in queries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Schema::Loader::Dynamic&#34;&gt;DBIx::Class::Schema::Loader::Dynamic&lt;/a&gt; looks like a faster, &amp;ldquo;dynamicker&amp;rdquo; DBIx::Class schema loader. Always welcome!&lt;/li&gt;
&lt;li&gt;Get file slurping, locking, and finding using &lt;a href=&#34;https://metacpan.org/pod/File::Valet&#34;&gt;File::Valet&lt;/a&gt; which wraps some of my favorite modules&lt;/li&gt;
&lt;li&gt;PlantUML class diagram syntax parser - &lt;a href=&#34;https://metacpan.org/pod/PlantUML::ClassDiagram::Parse&#34;&gt;PlantUML::ClassDiagram::Parse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::JSON::More&#34;&gt;Test::JSON::More&lt;/a&gt; provides convenience functions for testing JSON&lt;/li&gt;
&lt;li&gt;Parse binary tzfiles using &lt;a href=&#34;https://metacpan.org/pod/Time::Tzfile&#34;&gt;Time::Tzfile&lt;/a&gt; (disclosure - I am the module author)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;development-version-control:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Development &amp;amp; Version Control&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Beam::Connector&#34;&gt;Dist::Zilla::Plugin::Beam::Connector&lt;/a&gt; provides a new way to activate dzil plugins&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Filter::signatures&#34;&gt;Filter::signatures&lt;/a&gt; - use Experimental::Signatures in versions of Perl predating their release!&lt;/li&gt;
&lt;li&gt;Easily setup an OAuth2 server with &lt;a href=&#34;https://metacpan.org/pod/Net::OAuth2::AuthorizationServer&#34;&gt;Net::OAuth2::AuthorizationServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rewrite your code to use Ref::Util with &lt;a href=&#34;https://metacpan.org/pod/Ref::Util::Rewriter&#34;&gt;Ref::Util::Rewriter&lt;/a&gt;. I had no idea &lt;code&gt;ref&lt;/code&gt; has issues&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/System::Info&#34;&gt;System::Info&lt;/a&gt; gets basic system information at runtime&lt;/li&gt;
&lt;li&gt;Test that your PAUSE permissions are consistent in your distribution using &lt;a href=&#34;https://metacpan.org/pod/Test::PAUSE::ConsistentPermissions&#34;&gt;Test::PAUSE::ConsistentPermissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::RunValgrind&#34;&gt;Test::RunValgrind&lt;/a&gt; tests that an external program is valgrind-clean&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;language-international:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Language &amp;amp; International&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Find the time at which a day starts - it&amp;rsquo;s not always midnight! &lt;a href=&#34;https://metacpan.org/pod/DateTimeX::Start&#34;&gt;DateTimeX::Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Lido::XML&#34;&gt;Lido::XML&lt;/a&gt; an XML parser and writer for LIDO, the schema for contributing to Cultural Heritage Repositories&lt;/li&gt;
&lt;li&gt;Get quick comparisons, plagiarism checks and common parts detection with &lt;a href=&#34;https://metacpan.org/pod/Text::Distill&#34;&gt;Text::Distill&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;other:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Other&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/LeftPad&#34;&gt;LeftPad&lt;/a&gt; - Perl implementation of LeftPad, the notorious Node.js library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Music::VoiceGen&#34;&gt;Music::VoiceGen&lt;/a&gt; does musical voice generation!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;science-mathematics:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Science &amp;amp; Mathematics&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::OpenBSD::Blowfish&#34;&gt;Crypt::OpenBSD::Blowfish&lt;/a&gt; is a Perl extension for the OpenBSD Blowfish cipher implementation&lt;/li&gt;
&lt;li&gt;Use the OpenSSH Chacha20 and Poly1305 crypto functions with &lt;a href=&#34;https://metacpan.org/pod/Crypt::OpenSSH::ChachaPoly&#34;&gt;Crypt::OpenSSH::ChachaPoly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Atom selections in molecules using &lt;a href=&#34;https://metacpan.org/pod/HackaMol::Roles::SelectionRole&#34;&gt;HackaMol::Roles::SelectionRole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;web:164fdb1f9b11b8510efddfac5f1ecee7&#34;&gt;Web&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Get a useragent over Tor, and rotate servers at will with &lt;a href=&#34;https://metacpan.org/pod/LWP::UserAgent::Tor&#34;&gt;LWP::UserAgent::Tor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get some Dancer2-specific panels on top of Plack::Debugger using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Debugger&#34;&gt;Dancer2::Debugger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::RoleTiny&#34;&gt;Mojo::RoleTiny&lt;/a&gt; - a simple role system for Mojo; curious why Role::Tiny wouldn&amp;rsquo;t suffice, must be a reason&lt;/li&gt;
&lt;li&gt;Display a stack trace when your Plack app dies with &lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::ExtractedStackTrace&#34;&gt;Plack::Middleware::ExtractedStackTrace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

