<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpan on Perl programming news, code and culture</title>
    <link>http://perltricks.com/tags/cpan/</link>
    <description>Recent content in Cpan on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Feb 2016 15:02:35 +0000</lastBuildDate>
    <atom:link href="http://perltricks.com/tags/cpan/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - January 2016</title>
      <link>http://perltricks.com/article/213/2016/2/10/What-s-new-on-CPAN---January-2015/</link>
      <pubDate>Wed, 10 Feb 2016 15:02:35 +0000</pubDate>
      
      <guid>http://perltricks.com/article/213/2016/2/10/What-s-new-on-CPAN---January-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;N.B.&lt;/strong&gt; Last year&amp;rsquo;s &amp;ldquo;module of the month&amp;rdquo; experiment has come to an end. I think there are better ways to promote Perl modules and developers (see &lt;a href=&#34;http://cpan-weekly.org/&#34;&gt;CPAN Weekly&lt;/a&gt; for example).&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:fde3d04cece11f5529378539b125e845&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Convert CPAN distributions into RPM packages with the newly-repackaged &lt;a href=&#34;https://metacpan.org/pod/App::CPANtoRPM&#34;&gt;App::CPANtoRPM&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Inspect&#34;&gt;App::Inspect&lt;/a&gt; helps you easily find the versions and locations of installed modules&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::tt&#34;&gt;App::tt&lt;/a&gt; is a command line time tracking app&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Duo&#34;&gt;Net::Duo&lt;/a&gt; provides a Perl API for the popular multifactor authentication service&lt;/li&gt;
&lt;li&gt;Read articles from two popular sources at the command line: &lt;a href=&#34;https://metacpan.org/pod/App::tldr&#34;&gt;App::tldr&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/WebService::TDWTF&#34;&gt;WebService::TDWTF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:fde3d04cece11f5529378539b125e845&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Conveniently find local outdated modules and for CPAN:&lt;a href=&#34;https://metacpan.org/pod/CPAN::Diff&#34;&gt;CPAN::Diff&lt;/a&gt; and Pinto: &lt;a href=&#34;https://metacpan.org/pod/DarkPAN::Compare&#34;&gt;DarkPAN::Compare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dispatch log events to Slack with log4perl and &lt;a href=&#34;https://metacpan.org/pod/Log::Dispatch::Slack&#34;&gt;Log::Dispatch::Slack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:fde3d04cece11f5529378539b125e845&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Useful for low-level network tasks, &lt;a href=&#34;https://metacpan.org/pod/Net::Frame::Layer::VRRP&#34;&gt;Net::Frame::Layer::VRRP&lt;/a&gt; provides a Virtual Router Redundancy Protocol class&lt;/li&gt;
&lt;li&gt;A simple way to get a high-resolution Unix epoch: &lt;a href=&#34;https://metacpan.org/pod/Time::TAI::Simple&#34;&gt;Time::TAI::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Types::SQL&#34;&gt;Types::SQL&lt;/a&gt; is library of SQL types; useful for Moo/Moose/Mouse classes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:fde3d04cece11f5529378539b125e845&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interesting; call functions / methods from a different caller with &lt;a href=&#34;https://metacpan.org/pod/Call::From&#34;&gt;Call::From&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Export::Declare&#34;&gt;Export::Declare&lt;/a&gt; provides simple and clean ways to export code and variables.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Importer&#34;&gt;Importer&lt;/a&gt; provides convenient routines for importing (and renaming!) code from modules&lt;/li&gt;
&lt;li&gt;Easily test non-blocking Perl scripts (like Mojo apps) with &lt;a href=&#34;https://metacpan.org/pod/Test::Script::Async&#34;&gt;Test::Script::Async&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test2::Workflow&#34;&gt;Test2::Workflow&lt;/a&gt; is a framework for building testing workflows (e.g. &lt;a href=&#34;https://metacpan.org/pod/Test2::Tools::Spec&#34;&gt;Test2::Tools::Spec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make scalars which execute a subroutine every time they&amp;rsquo;re accessed using &lt;a href=&#34;https://metacpan.org/pod/Tie::Scalar::Callback&#34;&gt;Tie::Scalar::Callback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run Visual Basic and JavaScript code via OLE with &lt;a href=&#34;https://metacpan.org/pod/Win32::VBScript&#34;&gt;Win32::VBScript&lt;/a&gt;. Fun!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:fde3d04cece11f5529378539b125e845&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Paul Evans continues to deliver new hardware tools via &lt;a href=&#34;https://metacpan.org/pod/Device::Chip&#34;&gt;Device::Chip&lt;/a&gt;! Get a driver for the PCF8563 chip (&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::PCF8563&#34;&gt;Device::Chip::PCF8563&lt;/a&gt;), and a driver for SD and MMC cards (&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::SDCard&#34;&gt;Device::Chip::SDCard&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:fde3d04cece11f5529378539b125e845&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Poker::Eval&#34;&gt;Poker::Eval&lt;/a&gt; is a base class providing routines for Poker games including dealing, scoring and calculating expected win rates.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/URI::redis&#34;&gt;URI::redis&lt;/a&gt; provides a URI class specific to Redis URIs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:fde3d04cece11f5529378539b125e845&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::HTS&#34;&gt;Bio::HTS&lt;/a&gt; is an early-stage Perl interface for htslib&lt;/li&gt;
&lt;li&gt;Get cryptographically-secure and fast pseudo random number generators using &lt;a href=&#34;https://metacpan.org/pod/Crypt::DRBG&#34;&gt;Crypt::DRBG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:fde3d04cece11f5529378539b125e845&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create CGI (yes!) GitHub webhooks with&lt;a href=&#34;https://metacpan.org/pod/CGI::Github::Webhook&#34;&gt;CGI::Github::Webhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Curious: &lt;a href=&#34;https://metacpan.org/pod/Lemplate&#34;&gt;Lemplate&lt;/a&gt; compiles TT templates to standalone Lua modules for OpenResty&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - December 2015</title>
      <link>http://perltricks.com/article/209/2016/1/13/What-s-new-on-CPAN---December-2015/</link>
      <pubDate>Wed, 13 Jan 2016 15:31:05 +0000</pubDate>
      
      <guid>http://perltricks.com/article/209/2016/1/13/What-s-new-on-CPAN---December-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. December was a bumper month, full of exciting new stuff. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Protocol::ACME&#34;&gt;Protocol::ACME&lt;/a&gt; is an alpha-stage implementation providing a perly interface to the &lt;a href=&#34;https://letsencrypt.readthedocs.org/en/latest/intro.html&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; ACME API. This lets you automate the business of fetching and validating Let&amp;rsquo;s Encrypt certificates, and any other certificate which is provided via the ACME protocol. If you build web applications with Mojolicious, you may also like &lt;a href=&#34;https://metacpan.org/pod/Toadfarm::Plugin::Letsencrypt&#34;&gt;Toadfarm::Plugin::Letsencrypt&lt;/a&gt;, a less ambitious module that provides Lets Encrypt domain verification.&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Procapult&#34;&gt;App::Procapult&lt;/a&gt; is a process launcher / wrapper with a simple interface&lt;/li&gt;
&lt;li&gt;Another process manager, &lt;a href=&#34;https://metacpan.org/pod/Schedule::LongSteps&#34;&gt;Schedule::LongSteps&lt;/a&gt; aims to manage long term processes over long periods of time.&lt;/li&gt;
&lt;li&gt;Do you want to convert colored terminal output to HTML? Check out &lt;a href=&#34;https://metacpan.org/pod/App::Term2HTML&#34;&gt;App::Term2HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Barracuda::Api&#34;&gt;Barracuda::Api&lt;/a&gt; provides a perly interface to Barracuda business IT services&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Google::reCAPTCHA&#34;&gt;Google::reCAPTCHA&lt;/a&gt; a lightweight implementation of Google&amp;rsquo;s reCAPTCHA service, also see (Captcha::reCAPTCHA::V2)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::MethodProxy&#34;&gt;Config::MethodProxy&lt;/a&gt; integrates dynamic logic with static configuration.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Minion::Notifier&#34;&gt;Minion::Notifier&lt;/a&gt; notifies queue listeners when a Minion task has completed&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Queue::Priority&#34;&gt;Queue::Priority&lt;/a&gt; orders messages according to their priority, so the important stuff gets processed first&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/RBAC::Tiny&#34;&gt;RBAC::Tiny&lt;/a&gt; is a miniscule Role-Based Access Control implementation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get an Attean SPARQL store using &lt;a href=&#34;https://metacpan.org/pod/AtteanX::Store::SPARQL&#34;&gt;AtteanX::Store::SPARQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::ParameterizedJoinHack&#34;&gt;DBIx::Class::ParameterizedJoinHack&lt;/a&gt; provides relationship joins with dynamic logic&lt;/li&gt;
&lt;li&gt;Cleanly get a locale-specific datetime duration string with &lt;a href=&#34;https://metacpan.org/pod/DateTime::Format::Human::Duration::Simple&#34;&gt;DateTime::Format::Human::Duration::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::Schema::AsType&#34;&gt;JSON::Schema::AsType&lt;/a&gt; generates Type::Tiny types out of JSON schemas, very nice! (I&amp;rsquo;m already using it).&lt;/li&gt;
&lt;li&gt;Add cropmarks to existing PDFs for better printing using &lt;a href=&#34;https://metacpan.org/pod/PDF::Cropmarks&#34;&gt;PDF::Cropmarks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Redis-like store implemented on Postgresql. Not &amp;ldquo;redisql&amp;rdquo; but &lt;a href=&#34;https://metacpan.org/pod/Postgredis&#34;&gt;Postgredis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::CPAN::Search&#34;&gt;App::CPAN::Search&lt;/a&gt; provides a base class for and script for searching CPAN&lt;/li&gt;
&lt;li&gt;Oooh look! A new Perl DBGp debugger: &lt;a href=&#34;https://metacpan.org/pod/Devel::Debug::DBGp&#34;&gt;Devel::Debug::DBGp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get a &amp;ldquo;quick and dirty&amp;rdquo; code coverage measurement with &lt;a href=&#34;https://metacpan.org/pod/Devel::QuickCover&#34;&gt;Devel::QuickCover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::SimpleProfiler&#34;&gt;Devel::SimpleProfiler&lt;/a&gt; makes it easy to profile subroutines.&lt;/li&gt;
&lt;li&gt;Useful; include roles in serialization using &lt;a href=&#34;https://metacpan.org/pod/MooseX::Storage::Traits::WithRoles&#34;&gt;MooseX::Storage::Traits::WithRoles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Readonly::Tiny&#34;&gt;Readonly::Tiny&lt;/a&gt; aims to provide &amp;ldquo;simple, correct, read only values&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Test UNIX sockets with &lt;a href=&#34;https://metacpan.org/pod/Test::UNIXSock&#34;&gt;Test::UNIXSock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Alien&#34;&gt;Test::Alien&lt;/a&gt; provides testing tools for Alien modules&lt;/li&gt;
&lt;li&gt;Reliably test if some code uses &lt;code&gt;exec&lt;/code&gt; with &lt;a href=&#34;https://metacpan.org/pod/Test::Exec&#34;&gt;Test::Exec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dump anything into a single line of 80 characters or fewer with &lt;a href=&#34;https://metacpan.org/pod/Test::Stream::Plugin::Explain::Terse&#34;&gt;Test::Stream::Plugin::Explain::Terse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;An implementation of the Modbus communications protocol, &lt;a href=&#34;https://metacpan.org/pod/Device::Modbus&#34;&gt;Device::Modbus&lt;/a&gt; provides a base for developing Modbus clients and servers&lt;/li&gt;
&lt;li&gt;Similarly, &lt;a href=&#34;https://metacpan.org/pod/ZWave::Protocol&#34;&gt;ZWave::Protocol&lt;/a&gt; provides helpers for the Z-Wave communication protocol&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Split identifiers into words with &lt;a href=&#34;https://metacpan.org/pod/Lingua::IdSplitter&#34;&gt;Lingua::IdSplitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Protocol::IRC&#34;&gt;Protocol::IRC&lt;/a&gt; a base class for IRC protocol handling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Frundis&#34;&gt;Text::Frundis&lt;/a&gt; an object oriented interface for the &lt;a href=&#34;http://bardinflor.perso.aquilenet.fr/frundis/intro-en&#34;&gt;frundis&lt;/a&gt; markup language&lt;/li&gt;
&lt;li&gt;Get a Perl FFI interface to the Hunspell library using &lt;a href=&#34;https://metacpan.org/pod/Text::Hunspell::FFI&#34;&gt;Text::Hunspell::FFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Table::Any&#34;&gt;Text::Table::Any&lt;/a&gt; generates beautiful text tables using many different backends/li&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Ufal::Parsito&#34;&gt;Ufal::Parsito&lt;/a&gt; provides bindings to the &lt;a href=&#34;http://ufal.mff.cuni.cz/parsito&#34;&gt;Parsito&lt;/a&gt; library&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get a perly interface to the HTS library for DNA sequencing using &lt;a href=&#34;https://metacpan.org/pod/Bio::DB::HTS&#34;&gt;Bio::DB::HTS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graph::Dijkstra&#34;&gt;Graph::Dijkstra&lt;/a&gt; provides Dijkstra&amp;rsquo;s shortest path algorithm and additional helper methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:5fb0546749a7edbf85b72c1cf934a2cd&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Great idea: use the popular HTTP::Tiny user agent with limited download/upload speed using &lt;a href=&#34;https://metacpan.org/pod/HTTP::Tiny::Bandwidth&#34;&gt;HTTP::Tiny::Bandwidth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Swagger&#34;&gt;Dancer::Plugin::Swagger&lt;/a&gt; creates Swagger documentation of the Dancer app&amp;rsquo;s REST interface. Nice!&lt;/li&gt;
&lt;li&gt;Another wrapper for wget / curl: &lt;a href=&#34;https://metacpan.org/pod/HTTP::Command::Wrapper&#34;&gt;HTTP::Command::Wrapper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Modern Perl 4th edition, a review</title>
      <link>http://perltricks.com/article/205/2015/12/21/Modern-Perl-4th-edition--a-review/</link>
      <pubDate>Mon, 21 Dec 2015 00:02:25 +0000</pubDate>
      
      <guid>http://perltricks.com/article/205/2015/12/21/Modern-Perl-4th-edition--a-review/</guid>
      <description>

&lt;p&gt;The 4th edition of &lt;a href=&#34;https://pragprog.com/book/swperl/modern-perl-fourth-edition&#34;&gt;Modern Perl&lt;/a&gt; by chromatic is out. I was given an advance copy to review and the book features my praise quote, so I figured it was about time I wrote my notes up into a longer review. Overall I really like the changes to the new edition; in my opinion, Modern Perl continues to provide a valuable introduction to idiomatic Perl programming.&lt;/p&gt;

&lt;h3 id=&#34;learn-the-idiomatic-perl-style:1a23e64e513dff9cb8ce1f594e62a037&#34;&gt;Learn the idiomatic Perl style&lt;/h3&gt;

&lt;p&gt;Modern Perl isn&amp;rsquo;t like your typical dry programming book. For one thing, it&amp;rsquo;s opinionated. Author chromatic draws on his experience to provide an insiders&amp;rsquo; guide that shows the &lt;em&gt;right&lt;/em&gt; way to program in Perl.&lt;/p&gt;

&lt;p&gt;The text is fast-moving and doesn&amp;rsquo;t baby the reader. Instead of &amp;ldquo;hello World&amp;rdquo;, the book begins by teaching the reader how to use &lt;code&gt;perldoc&lt;/code&gt; and draw upon the official documentation when they get stuck. Don&amp;rsquo;t waste time with Google when the answer &lt;a href=&#34;http://perltricks.com/article/155/2015/2/26/Hello-perldoc--productivity-booster&#34;&gt;can be found in seconds&lt;/a&gt; at the command line.&lt;/p&gt;

&lt;p&gt;Chapters 1 and 2 introduce the Perl philosophy and Community. The book rapidly covers the major features of Perl (chapters 3 - 7) and even more advanced topics like recursion, anonymous functions and closures. Peppered throughout are gems of wisdom explaining the rationale behind a given concept. For instance, on including parentheses on all function calls (even ones without arguments):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While these parentheses are not strictly necessary for these examples—even with strict enabled—they provide clarity to human readers as well as Perl’s parser. When in doubt, use them.&lt;/p&gt;

&lt;p&gt;Modern Perl 4th edition, Chapter 5, Declaring Functions&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The focus here, though is on the practical and chromatic quickly moves on to advising on elements of good Perl style and how to learn it (chapter 8) and real-World programming tips (chapter 9). This is an honest, expert&amp;rsquo;s account of Perl, and chapter 11 describes what to avoid in Perl (chapter 5 also has an entry on function misfeatures).&lt;/p&gt;

&lt;p&gt;Whilst this is an introductory text, chromatic does find time to touch upon several intermediate concepts like taint, schwartzian transforms and tail call optimizations. There is something for everybody: re-reading the &lt;a href=&#34;http://modernperlbooks.com/books/modern_perl_2014/05-perl-functions.html#U3RhdGV2ZXJzdXNDbG9zdXJlcw&#34;&gt;section&lt;/a&gt; State-versus-Closures (chapter 5) I learned a nuance that I hadn&amp;rsquo;t appreciated before.&lt;/p&gt;

&lt;p&gt;Modern Perl does assume a lot and this could make it challenging for complete novices. For example the code snippets assume the reader can distinguish between command line and Perl programming context. Map and grep are used in examples but are not covered in the language overview chapters. But these are minor nits.&lt;/p&gt;

&lt;h3 id=&#34;modern-perl:1a23e64e513dff9cb8ce1f594e62a037&#34;&gt;&amp;ldquo;Modern&amp;rdquo; Perl?&lt;/h3&gt;

&lt;p&gt;About 10 years ago, Perl enjoyed something of a &lt;a href=&#34;http://www.modernperlbooks.com/mt/2009/07/milestones-in-the-perl-renaissance.html&#34;&gt;renaissance&lt;/a&gt; called &amp;ldquo;Modern Perl&amp;rdquo;. This was a movement that developed powerful new libraries, tools and applications which invigorated Perl programming and gave it a new lease-of-life. Today the phrase is almost synonymous with Perl &amp;ldquo;best practices&amp;rdquo; and its ethos continues to help Perl flourish.&lt;/p&gt;

&lt;h3 id=&#34;what-s-changed:1a23e64e513dff9cb8ce1f594e62a037&#34;&gt;What&amp;rsquo;s changed&lt;/h3&gt;

&lt;p&gt;The 4th edition brings a lot of changes, but it&amp;rsquo;s a case of evolution, not revolution. New Perl features like the double-diamond operator (&lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt;) and &lt;a href=&#34;http://perltricks.com/article/72/2014/2/24/Perl-levels-up-with-native-subroutine-signatures&#34;&gt;subroutine signatures&lt;/a&gt; are covered. Almost every paragraph has been &lt;a href=&#34;https://github.com/chromatic/modern_perl_book/commits/master&#34;&gt;updated&lt;/a&gt;), but the chapter structure remains the same and many of the edits are tweaks rather than wholesale re-writes. Many of the changes improve the readability of the text, others de-jargonize it, like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Functions are a prime mechanism for abstraction, encapsulation, and re-use in Perl.&lt;/p&gt;

&lt;p&gt;Modern Perl, 3rd Edition, Chapter 5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;became:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Functions are a prime mechanism for organizing code into similar groups, identifying individual pieces by name, and providing reusable units of behavior.&lt;/p&gt;

&lt;p&gt;Modern Perl, 3rd Edition, Chapter 5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which is clearly easier for beginners to understand. Code-wise, many of the examples have changed from a BSD to K&amp;amp;R style, presumably to save vertical space. Overall the book length remains about the same (205 vs 204 pages).&lt;/p&gt;

&lt;p&gt;The biggest change with the new edition comes from The Pragmatic Bookshelf - their version is simply &lt;em&gt;gorgeous&lt;/em&gt;. Full color with larger fonts, icons and callouts, the book really pops. This is the layout Modern Perl needs &lt;em&gt;and&lt;/em&gt; deserves. See this comparison between the Onyx Neon and Pragmatic Bookshelf versions:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://googledrive.com/host/0BwRnByTz2iUXUFN1Smo5WGJRZ0U/&#34; title=&#34;The Pragmatic Bookshelf edition is gorgeous&#34;&gt;&lt;img src=&#34;http://googledrive.com/host/0BwRnByTz2iUXeDgzVlJRWmtkX0k/&#34; alt=&#34;Modern Perl side-by-side comparison of editions&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;alternatives:1a23e64e513dff9cb8ce1f594e62a037&#34;&gt;Alternatives&lt;/h3&gt;

&lt;p&gt;As an opinionated introduction to Perl, Modern Perl is a compromise between a tutorial and a best-practices style cookbook. I love the direction and terse writing style, but the book might move too fast for complete beginners. So it depends on what you&amp;rsquo;re looking for - &lt;a href=&#34;http://www.amazon.com/Beginning-Perl-Curtis-Poe/dp/1118013840&#34;&gt;Beginning Perl&lt;/a&gt; and &lt;a href=&#34;http://www.amazon.com/Learning-Perl-Randal-L-Schwartz/dp/1449303587&#34;&gt;Learning Perl&lt;/a&gt; are fine introductions to the language. &lt;a href=&#34;http://www.amazon.com/Effective-Perl-Programming-Idiomatic-Development/dp/0321496949&#34;&gt;Effective Perl Programming&lt;/a&gt; is my favorite Perl cookbook. But Modern Perl is a unique blend of both styles.&lt;/p&gt;

&lt;h3 id=&#34;where-to-get-it:1a23e64e513dff9cb8ce1f594e62a037&#34;&gt;Where to get it&lt;/h3&gt;

&lt;p&gt;You can read Modern Perl &lt;a href=&#34;http://modernperlbooks.com/books/modern_perl_2014/index.html&#34;&gt;online&lt;/a&gt; for free, and there are downloadable versions available from &lt;a href=&#34;http://onyxneon.com/books/modern_perl/index.html&#34;&gt;Onyx Neon&lt;/a&gt;. If you want it as an ebook, I would recommend the Pragmatic Bookshelf &lt;a href=&#34;https://pragprog.com/book/swperl/modern-perl-fourth-edition&#34;&gt;version&lt;/a&gt; - it&amp;rsquo;s beautifully styled, free, and you&amp;rsquo;ll be eligible for updates to the text as/when they appear.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Create GitHub files automatically with Dist::Zilla</title>
      <link>http://perltricks.com/article/203/2015/12/9/Create-GitHub-files-automatically-with-Dist--Zilla/</link>
      <pubDate>Wed, 09 Dec 2015 13:46:17 +0000</pubDate>
      
      <guid>http://perltricks.com/article/203/2015/12/9/Create-GitHub-files-automatically-with-Dist--Zilla/</guid>
      <description>

&lt;p&gt;I use &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla&#34;&gt;Dist::Zilla&lt;/a&gt; to release my code to CPAN. I really like it as with a single command I can build, package and ship a distribution. But most of my code lives on GitHub. In fact, a quick check shows that I have 90 &lt;a href=&#34;https://github.com/dnmfarrell&#34;&gt;repos&lt;/a&gt;, but only 13 distributions on &lt;a href=&#34;https://metacpan.org/author/DFARRELL&#34;&gt;CPAN&lt;/a&gt;. So only 14% of my code makes it to CPAN.&lt;/p&gt;

&lt;p&gt;Traditionally Dist::Zilla makes a distinction between your code and the files needed for CPAN and PAUSE to work, (like package metadata, a readme etc). The basic use case goes like this: you write your class files, scripts and unit tests, and when you tell Dist::Zilla to release the distribution, it generates all of the extra files, creates a tarball and uploads it to &lt;a href=&#34;https://pause.perl.org/pause/query&#34;&gt;PAUSE&lt;/a&gt;. The problem is though, some of those additional files would be nice to have in my GitHub repos too. I don&amp;rsquo;t want to write another &lt;code&gt;readme.md&lt;/code&gt;, or spend time copying the license file into the repo if Dist::ZIlla can already generate one. To solve this issue I use two Dist::Zilla plugins from &lt;a href=&#34;https://metacpan.org/author/RTHOMPSON&#34;&gt;Ryan Thompson&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;setup:3e7badd427fe2f7b2dcf3dadf6e1d80b&#34;&gt;Setup&lt;/h3&gt;

&lt;p&gt;To use the code in this article, you&amp;rsquo;ll need to install Dist::Zilla and the two plugin modules described below. You can do that with &lt;code&gt;cpan&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ cpan Dist::Zilla \
  Dist::Zilla::Plugin::ReadmeAnyFromPod  \
  Dist::Zilla::Plugin::CopyFilesFromBuild
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you&amp;rsquo;re installing Dist::Zilla consider using &lt;a href=&#34;https://metacpan.org/pod/App::cpanminus&#34;&gt;cpanminus&lt;/a&gt; instead, with no tests for a much faster install:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ cpanm --notest Dist::Zilla \ 
  Dist::Zilla::Plugin::ReadmeAnyFromPod \
  Dist::Zilla::Plugin::CopyFilesFromBuild
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;creating-a-readme-automatically:3e7badd427fe2f7b2dcf3dadf6e1d80b&#34;&gt;Creating a readme automatically&lt;/h3&gt;

&lt;p&gt;Ryan&amp;rsquo;s module &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::ReadmeAnyFromPod&#34;&gt;Dist::Zilla::Plugin::ReadmeAnyFromPod&lt;/a&gt; can generate a readme automatically, in any common format. It uses the Pod text from the main modules in the distribution. I use it to create my GitHub readme files in Pod, by adding the following text to my &lt;code&gt;dist.ini&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[ReadmeAnyFromPod]
type = pod 
filename = README.pod
location = root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If I build the distribution with Dist::Zilla, it will generate a new readme for me, including the author, copyright and version information in addition to the documentation already in the main module.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ dzil build &amp;amp;&amp;amp; dzil clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This line instructs Dist::Zilla to build the distribution, which generates the new &lt;code&gt;README.pod&lt;/code&gt; and then clean up the build files that it generated, leaving a clean working directory.&lt;/p&gt;

&lt;h3 id=&#34;adding-a-license:3e7badd427fe2f7b2dcf3dadf6e1d80b&#34;&gt;Adding a license&lt;/h3&gt;

&lt;p&gt;I use another module from Ryan, &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::CopyFilesFromBuild&#34;&gt;Dist::Zilla::Plugin::CopyFilesFromBuild&lt;/a&gt; to copy the software license from the Dist::Zilla build into my project directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[CopyFilesFromBuild]
copy = LICENSE
[GatherDir]
exclude_filename = LICENSE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will copy the license out of the build directory into the root project directory. The &lt;code&gt;exclude_filename&lt;/code&gt; clause is there so that during the &lt;em&gt;next&lt;/em&gt; build, Dist::Zilla does not include the generated license in the working directory of files. Running this in the same way as before, I can generate whatever license text I want for my distribution (the type of license is specified in the &lt;code&gt;dist.ini&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ dzil build &amp;amp;&amp;amp; dzil clean
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;helping-others:3e7badd427fe2f7b2dcf3dadf6e1d80b&#34;&gt;Helping others&lt;/h3&gt;

&lt;p&gt;Dist::Zilla is great, but if you don&amp;rsquo;t have it, installing a distribution from GitHub can really suck. Recently a friend was trying to deploy some code of mine to his Macbook with a vanilla Perl install. I didn&amp;rsquo;t want to upload the code to CPAN and wait for PAUSE to index it. Installing Dist::Zilla on the his machine was not a great option either: Dist::Zilla is a beast. According to Devel::Modlist, Dist::Zilla has &lt;strong&gt;178&lt;/strong&gt; non-core dependencies (including indirectly-used modules). That&amp;rsquo;s the price you pay for automation and modularity - Dist::Zilla is working hard so us module authors don&amp;rsquo;t have to. But for someone who barely knows Perl, installing Dist::Zilla in a virgin environment can be a nightmare.&lt;/p&gt;

&lt;p&gt;To get around this issue, I used &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::CopyFilesFromBuild&#34;&gt;Dist::Zilla::Plugin::CopyFilesFromBuild&lt;/a&gt; again to copy the Makefile.PL and cpanfile into the project directory. My friend then cloned the directory with Git and used &lt;a href=&#34;https://metacpan.org/pod/App::cpanminus&#34;&gt;cpanminus&lt;/a&gt; to install it. Easy! It worked so well, I&amp;rsquo;m going to include a Makefile and cpanfile in my GitHub repos from now on.&lt;/p&gt;

&lt;h3 id=&#34;a-sample-dist-zilla-config:3e7badd427fe2f7b2dcf3dadf6e1d80b&#34;&gt;A sample Dist::Zilla config&lt;/h3&gt;

&lt;p&gt;Here&amp;rsquo;s a &lt;code&gt;dist.ini&lt;/code&gt; from a &lt;a href=&#34;https://github.com/dnmfarrell/Settlers-Game&#34;&gt;repo&lt;/a&gt; of mine that uses the code in this article. As certain directives are required in order, it can be useful to see the entire context:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;name    = Settlers-Game
author  = David Farrell 
license = FreeBSD
copyright_holder = David Farrell
copyright_year   = 2015
version = 0.06

[CPANFile]
[License]
[CopyFilesFromBuild]
copy = cpanfile
copy = LICENSE
copy = Makefile.PL
[GatherDir]
exclude_filename = cpanfile
exclude_filename = LICENSE
exclude_filename = Makefile.PL
[PkgVersion]
[AutoPrereqs]
[GithubMeta]
[ChangelogFromGit]
[MetaYAML]
[MetaJSON]
[MakeMaker]
[ModuleBuild]
[ManifestSkip]
[Manifest]
[PodWeaver]
[ReadmeAnyFromPod]
type = pod
filename = README.pod
location = root
[PodSyntaxTests]
[PodCoverageTests]
[TestRelease]
[Test::EOL]
[UploadToCPAN]
[ConfirmRelease]
[Clean]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use this config with Dist::Zilla you&amp;rsquo;ll need some additional plugins:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ cpan Dist::Zilla::Plugin::Clean \
  Dist::Zilla::Plugin::GithubMeta \
  Dist::Zilla::Plugin::ChangelogFromGit \
  Dist::Zilla::Plugin::PodWeaver
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conclusion:3e7badd427fe2f7b2dcf3dadf6e1d80b&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Ok it&amp;rsquo;s not &lt;em&gt;all&lt;/em&gt; gravy. The copy file method has one downside: it overwrites the copied files every time they&amp;rsquo;re generated. This isn&amp;rsquo;t an issue for me; the commit diff only shows the changed lines, but some people may not like it.&lt;/p&gt;

&lt;p&gt;For more information on Dist::Zilla, check out the official &lt;a href=&#34;http://dzil.org/tutorial/contents.html&#34;&gt;documentation&lt;/a&gt;. For a completely different approach to releasing code to CPAN, you may like&lt;a href=&#34;https://metacpan.org/pod/%20Module::Release&#34;&gt;Module::Release&lt;/a&gt;. Oh and if you find yourself in a new development environment, needing to install dependencies for a local module, David Golden has a useful &lt;a href=&#34;http://www.dagolden.com/index.php/1528/five-ways-to-install-modules-prereqs-by-hand/&#34;&gt;post&lt;/a&gt; that includes five different ways to do it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - November 2015</title>
      <link>http://perltricks.com/article/202/2015/12/8/What-s-new-on-CPAN---November-2015/</link>
      <pubDate>Tue, 08 Dec 2015 04:34:15 +0000</pubDate>
      
      <guid>http://perltricks.com/article/202/2015/12/8/What-s-new-on-CPAN---November-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Highlander&#34;&gt;App::Highlander&lt;/a&gt; can provides simple named locks. Useful!&lt;/li&gt;
&lt;li&gt;Pick one or more random lines from input using &lt;a href=&#34;https://metacpan.org/pod/App::PickRandomLines&#34;&gt;App::PickRandomLines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;Random Access Machine&amp;rdquo; Emulator: &lt;a href=&#34;https://metacpan.org/pod/Language::RAM&#34;&gt;Language::RAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sync data across multiple regions with &lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DynamoDB::HighlyAvailable&#34;&gt;Net::Amazon::DynamoDB::HighlyAvailable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DynamoDB::Table&#34;&gt;Net::Amazon::DynamoDB::Table&lt;/a&gt; provides a high-level interface to Net::Amazon::DyamoDB::Lite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::KeenIO&#34;&gt;WWW::KeenIO&lt;/a&gt; provides a Perl API for the event storage and analytics service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Saucelabs&#34;&gt;WWW::Saucelabs&lt;/a&gt; is a &amp;ldquo;perilously incomplete&amp;rdquo;, yet useful, Perly interface to the Saucelabs REST API&lt;/li&gt;
&lt;li&gt;Find out what&amp;rsquo;s on TV using the TVMaze API and &lt;a href=&#34;https://metacpan.org/pod/WWW::TVMaze&#34;&gt;WWW::TVMaze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Zendesk&#34;&gt;WebService::Zendesk&lt;/a&gt; is another work-in-progress but useful API, this time for Zendesk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::FTPTLS&#34;&gt;Net::FTPTLS&lt;/a&gt; is a super-simple Perl FTP client with TLS support. Cool!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::SSH2::Cisco&#34;&gt;Net::SSH2::Cisco&lt;/a&gt; let&amp;rsquo;s you talk to Cisco routers via SSH!&lt;/li&gt;
&lt;li&gt;Configure, control and monitor rate limits for services with &lt;a href=&#34;https://metacpan.org/pod/RateLimitations&#34;&gt;RateLimitations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Compress data at &lt;em&gt;outrageous&lt;/em&gt; speeds with &lt;a href=&#34;https://metacpan.org/pod/Compress::LZ4Frame&#34;&gt;Compress::LZ4Frame&lt;/a&gt;, which ships with the &lt;a href=&#34;https://github.com/Cyan4973/lz4&#34;&gt;LZ4 compression library&lt;/a&gt; written in C.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::BulkUtil&#34;&gt;DBIx::BulkUtil&lt;/a&gt; provides bulk load and other features for relational databases&lt;/li&gt;
&lt;li&gt;Wow, &lt;a href=&#34;https://metacpan.org/pod/DOM::Tiny&#34;&gt;DOM::Tiny&lt;/a&gt; is a minimalist but feature-rich DOM parser using CSS selectors&lt;/li&gt;
&lt;li&gt;Interesting, play with a virtual file system using &lt;a href=&#34;https://metacpan.org/pod/Filesys::Virtual::Chroot&#34;&gt;Filesys::Virtual::Chroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IMAP::Query&#34;&gt;IMAP::Query&lt;/a&gt; can generateIMAP search queries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mail::DKIM::Iterator&#34;&gt;Mail::DKIM::Iterator&lt;/a&gt; validates DKIM signatures and signs asynchronously&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::Trepan::Deparse&#34;&gt;Devel::Trepan::Deparse&lt;/a&gt; adds deparse support to Devel::Trepan&lt;/li&gt;
&lt;li&gt;Call the JavaScript Handlebars template library from Perl, with &lt;a href=&#34;https://metacpan.org/pod/JavaScript::V8::Handlebars&#34;&gt;JavaScript::V8::Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test &lt;em&gt;some&lt;/em&gt;? Only execute a subset of your test suite using &lt;a href=&#34;https://metacpan.org/pod/Test::Some&#34;&gt;Test::Some&lt;/a&gt;, author Yanick &lt;a href=&#34;http://techblog.babyl.ca/entry/test-some&#34;&gt;blogged&lt;/a&gt; about why this might be useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Unix::Pledge&#34;&gt;Unix::Pledge&lt;/a&gt; restrict system operations on BSD using &lt;code&gt;pledge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Talk to Windows machines over the network using &lt;a href=&#34;https://metacpan.org/pod/Win32::Netsh&#34;&gt;Win32::Netsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Hardware&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/author/PEVANS&#34;&gt;Paul Evans&lt;/a&gt; has been hard at work releasing several new chip driver modules, way to go Paul!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BV4243 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::BV4243&#34;&gt;Device::Chip::BV4243&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DS1307 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::DS1307&#34;&gt;Device::Chip::DS1307&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;INA219 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::INA219&#34;&gt;Device::Chip::INA219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MAX7219 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MAX7219&#34;&gt;Device::Chip::MAX7219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MCP23x17 family &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MCP23x17&#34;&gt;Device::Chip::MCP23x17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MPL3115A2 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MPL3115A2&#34;&gt;Device::Chip::MPL3115A2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate CSS sprites from a series of images using &lt;a href=&#34;https://metacpan.org/pod/CSS::SpriteMaker::Simple&#34;&gt;CSS::SpriteMaker::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Look up zodiac sign for a given date with &lt;a href=&#34;https://metacpan.org/pod/Zodiac::Tiny&#34;&gt;Zodiac::Tiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/LCS::Similar&#34;&gt;LCS::Similar&lt;/a&gt; allows differences in the compared elements of Longest Common Subsequence (LCS) Algorithm&lt;/li&gt;
&lt;li&gt;Simulate genomic restriction digests with &lt;a href=&#34;https://metacpan.org/pod/RestrictionDigest&#34;&gt;RestrictionDigest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::URI&#34;&gt;Catalyst::Plugin::URI&lt;/a&gt; provides nicer and &lt;em&gt;safer&lt;/em&gt; way to get Controller action methods as URIs&lt;/li&gt;
&lt;li&gt;Read and write PhantomJS cookies file using &lt;a href=&#34;https://metacpan.org/pod/HTTP::Cookies::PhantomJS&#34;&gt;HTTP::Cookies::PhantomJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ErrorsAndWarnings&#34;&gt;Mojolicious::Plugin::ErrorsAndWarnings&lt;/a&gt; stores errors and warnings during a request for powerful introspection&lt;/li&gt;
&lt;li&gt;Run a consul server for testing using &lt;a href=&#34;https://metacpan.org/pod/Test::Consul&#34;&gt;Test::Consul&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to install any* Perl module</title>
      <link>http://perltricks.com/article/200/2015/11/28/How-to-install-any--Perl-module/</link>
      <pubDate>Sat, 28 Nov 2015 00:11:17 +0000</pubDate>
      
      <guid>http://perltricks.com/article/200/2015/11/28/How-to-install-any--Perl-module/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s our 200th article! Installing CPAN modules can be a pain, particularly for users not familiar with the Perl toolchain. To try something different, I&amp;rsquo;m uploading the article as an image file under creative commons. Feel free to share it, use it, whatever. If you use Perl at your office, maybe print it out for reference. You can download a copy &lt;a href=&#34;https://drive.google.com/file/d/0BwRnByTz2iUXQk5KcVNHcElJRUU/view?usp=sharing&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://googledrive.com/host/0BwRnByTz2iUXQk5KcVNHcElJRUU&#34; title=&#34;Install Any Perl Module&#34;&gt;&lt;img src=&#34;https://googledrive.com/host/0BwRnByTz2iUXUVBJSllmeUJiU00&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[*] You can install any Perl module, but it may not be a good idea™&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - October 2015</title>
      <link>http://perltricks.com/article/199/2015/11/3/What-s-new-on-CPAN---October-2015/</link>
      <pubDate>Tue, 03 Nov 2015 15:24:04 +0000</pubDate>
      
      <guid>http://perltricks.com/article/199/2015/11/3/What-s-new-on-CPAN---October-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Skeletor&#34;&gt;App::Skeletor&lt;/a&gt; bootstraps new Perl projects based on customizable templates. Similar to Dist::Zilla (&lt;em&gt;why do all these builder tools have such great names?&lt;/em&gt;) but intentionally less ambitious, App::Skeletor looks more useful as a component of a Perl app or a starter kit for module developers. You can run it from the terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ skeletor --template Skeletor::Template::Example \
  --as My::App \
  --directory ~/Projects \ 
  --author &#39;John Doe&#39; \
  --year 2015
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s early days but module author John Napiorkowski has already written enough &lt;a href=&#34;https://metacpan.org/pod/App::Skeletor&#34;&gt;documentation&lt;/a&gt; to get you started. It would be great if we could develop a set of community templates for Perl modules. Take a look today!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:e5833c090d1cf186b0a95931b7696f03&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::JIRAPrint&#34;&gt;App::JIRAPrint&lt;/a&gt; posts JIRA Tickets on Postit notes!&lt;/li&gt;
&lt;li&gt;Send repository commit digest emails with &lt;a href=&#34;https://metacpan.org/pod/App::SCM::Digest&#34;&gt;App::SCM::Digest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get terminal access to the Wikidata Query Service using &lt;a href=&#34;https://metacpan.org/pod/App::wdq&#34;&gt;App::wdq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get Airbrake notifications with &lt;a href=&#34;https://metacpan.org/pod/Net::Airbrake::V2&#34;&gt;Net::Airbrake::V2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::ConstructorIO&#34;&gt;WebService::ConstructorIO&lt;/a&gt; provides a Perly interface to the predictive search service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Pingboard&#34;&gt;WebService::Pingboard&lt;/a&gt; is an API for the employee directory service&lt;/li&gt;
&lt;li&gt;Send newsletters via SendGrid using &lt;a href=&#34;https://metacpan.org/pod/WebService::SendGrid::Newsletter&#34;&gt;WebService::SendGrid::Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Authenticate users via LinkedIn with &lt;a href=&#34;https://metacpan.org/pod/Linkedin::OAuth2&#34;&gt;Linkedin::OAuth2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IPC::Lockfile&#34;&gt;IPC::Lockfile&lt;/a&gt; - run only one instance of a program at a time using flock (disclosure - I am the module author)&lt;/li&gt;
&lt;li&gt;Instead of a file, &lt;a href=&#34;https://metacpan.org/pod/Lock::Server&#34;&gt;Lock::Server&lt;/a&gt; provides a light-weight socket based resource locking manager&lt;/li&gt;
&lt;li&gt;Asynchronously wait for a port to open using &lt;a href=&#34;https://metacpan.org/pod/Net::Async::EmptyPort&#34;&gt;Net::Async::EmptyPort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get a fast, integer-based memory cache with &lt;a href=&#34;https://metacpan.org/pod/Cache::Memory::Simple::ID&#34;&gt;Cache::Memory::Simple::ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DB::DataStore&#34;&gt;DB::DataStore&lt;/a&gt; A simple record-based data store with no non-core dependencies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Digest::FNV::XS&#34;&gt;Digest::FNV::XS&lt;/a&gt; implements the speedy FNV hash algorithm, with support for binary data&lt;/li&gt;
&lt;li&gt;Exchange contact data with CardDAV servers using &lt;a href=&#34;https://metacpan.org/pod/Net::CardDAVTalk&#34;&gt;Net::CardDAVTalk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get All Tests Passing™ with &lt;a href=&#34;https://metacpan.org/pod/Acme::Test::VW&#34;&gt;Acme::Test::VW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bootstrap a new project from a shared template with &lt;a href=&#34;https://metacpan.org/pod/App::Skeletor&#34;&gt;App::Skeletor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Attribute::Universal&#34;&gt;Attribute::Universal&lt;/a&gt; makes working with subroutine attributes far less painful - woohoo!&lt;/li&gt;
&lt;li&gt;Create enum-like classes using &lt;a href=&#34;https://metacpan.org/pod/Class::Type::Enum&#34;&gt;Class::Type::Enum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disable the &lt;code&gt;state&lt;/code&gt; keyword with &lt;a href=&#34;https://metacpan.org/pod/Devel::Unstate&#34;&gt;Devel::Unstate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Export symbols by attributes with &lt;a href=&#34;https://metacpan.org/pod/Exporter::Attributes&#34;&gt;Exporter::Attributes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Send packets compatible with the Spektrum RC protoocol with &lt;a href=&#34;https://metacpan.org/pod/Device::Spektrum&#34;&gt;Device::Spektrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Not *strictly* hardware but &amp;hellip; get Software-Defined Radio with &lt;a href=&#34;https://metacpan.org/pod/SDR&#34;&gt;SDR&lt;/a&gt; - nice!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::FritzBox&#34;&gt;WebService::FritzBox&lt;/a&gt; - communicate with &lt;a href=&#34;https://en.wikipedia.org/wiki/FRITZ!Box&#34;&gt;FritzBox&lt;/a&gt; devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Map Slack &lt;code&gt;:emoji_strings:&lt;/code&gt; to Unicode text using &lt;a href=&#34;https://metacpan.org/pod/Text::SlackEmoji&#34;&gt;Text::SlackEmoji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::YahooJapan::Baseball&#34;&gt;WWW::YahooJapan::Baseball&lt;/a&gt; provides an interface to Yahoo Japan&amp;rsquo;s baseball stats service&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hilarious - &lt;a href=&#34;https://metacpan.org/pod/Acme::Excuse&#34;&gt;Acme::Excuse&lt;/a&gt; provides excuses when your code fails&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MarpaX::RFC::RFC3629&#34;&gt;MarpaX::RFC::RFC3629&lt;/a&gt; Marpa parsing of UTF-8 byte sequences as per RFC3629&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::HexGrid&#34;&gt;Math::HexGrid&lt;/a&gt; - create hex coordinate grids (disclosure - I am the module author)&lt;/li&gt;
&lt;li&gt;Apply a function to data in different ways using &lt;a href=&#34;https://metacpan.org/pod/PDL::Apply&#34;&gt;PDL::Apply&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDL::DateTime&#34;&gt;PDL::DateTime&lt;/a&gt; stores high precision timestamps&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:e5833c090d1cf186b0a95931b7696f03&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interesting, &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::ProbabilityRoute&#34;&gt;Dancer2::Plugin::ProbabilityRoute&lt;/a&gt; is a plugin to define behavior with probability matching rules&lt;/li&gt;
&lt;li&gt;Gracefully shutdown your Dancer2 application using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Shutdown&#34;&gt;Dancer2::Plugin::Shutdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use SQLite as a backend for a Minion job queue with &lt;a href=&#34;https://metacpan.org/pod/Minion::Backend::SQLite&#34;&gt;Minion::Backend::SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - September 2015</title>
      <link>http://perltricks.com/article/196/2015/10/1/What-s-new-on-CPAN---September-2015/</link>
      <pubDate>Thu, 01 Oct 2015 13:49:32 +0000</pubDate>
      
      <guid>http://perltricks.com/article/196/2015/10/1/What-s-new-on-CPAN---September-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/MsgPack::RPC&#34;&gt;MsgPack::RPC&lt;/a&gt; is a client for the &lt;a href=&#34;https://github.com/msgpack-rpc/msgpack-rpc/blob/master/spec.md&#34;&gt;MessagePack-RPC&lt;/a&gt; standard. It&amp;rsquo;s fully featured, providing send, notify, event subscription and logging.&lt;/p&gt;

&lt;p&gt;Module author Yanick Champoux has &lt;a href=&#34;http://techblog.babyl.ca/entry/neovim-part-1&#34;&gt;blogged&lt;/a&gt; about his motivations for developing MsgPack::RPC to use it with &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt;. His entertaining &lt;a href=&#34;http://techblog.babyl.ca/entry/neovim-way-to-go&#34;&gt;musings&lt;/a&gt; are a good read. Now you can get an API to Neovim using his other new module, &lt;a href=&#34;https://metacpan.org/pod/Neovim::RPC&#34;&gt;Neovim::RPC&lt;/a&gt;. Awesome work!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/API::Client&#34;&gt;API::Client&lt;/a&gt; is a general-purpose API client class&lt;/li&gt;
&lt;li&gt;Get simple OATH authentication with &lt;a href=&#34;https://metacpan.org/pod/App::OATH&#34;&gt;App::OATH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::p5stack&#34;&gt;App::p5stack&lt;/a&gt; manages your dependencies and Perl requirements in a local directory. Looks useful for standalone projects, packaging etc&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::PhotoBackup::Server&#34;&gt;Net::PhotoBackup::Server&lt;/a&gt; - everyone backs up their photos right?&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Rarbg::torrentapi&#34;&gt;Rarbg::torrentapi&lt;/a&gt; is a Wrapper around Rarbg torrentapi&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Zotero&#34;&gt;WWW::Zotero&lt;/a&gt; provides a Perl interface to the Zotero API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Scaleway&#34;&gt;WebService::Scaleway&lt;/a&gt; is a Perl interface to Scaleway, the cloud VPN provider&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::Station&#34;&gt;Config::Station&lt;/a&gt; looks interesting: class-based; it can load configurations from files and the environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Log all DBI queries with &lt;a href=&#34;https://metacpan.org/pod/DBI::Log&#34;&gt;DBI::Log&lt;/a&gt;. Awesome!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::TempDB&#34;&gt;DBIx::TempDB&lt;/a&gt; creates temporary databases for testing - supports Postgres, MySQL, SQLite&lt;/li&gt;
&lt;li&gt;Render data structures for easy grepping using &lt;a href=&#34;https://metacpan.org/pod/Data::Crumbr&#34;&gt;Data::Crumbr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Diachronic collocation index using &lt;a href=&#34;https://metacpan.org/pod/DiaColloDB&#34;&gt;DiaColloDB&lt;/a&gt;. Don&amp;rsquo;t know what this is, but it looks interesting.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Image::JpegMinimal&#34;&gt;Image::JpegMinimal&lt;/a&gt; creates JPEG previews without headers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MarpaX::RFC::RFC3987&#34;&gt;MarpaX::RFC::RFC3987&lt;/a&gt; parse and validate IRIs with this Marpa module&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Message::String&#34;&gt;Message::String&lt;/a&gt; a &amp;ldquo;pragma&amp;rdquo; to declare and organise messaging.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Brat::Handler&#34;&gt;Brat::Handler&lt;/a&gt; is a Perl module for managing Brat files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Class::Anonymous&#34;&gt;Class::Anonymous&lt;/a&gt; get private classes with private data &amp;ldquo;for realz&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;This looks like a useful analysis tool; &lt;a href=&#34;https://metacpan.org/pod/Devel::Trace::Subs&#34;&gt;Devel::Trace::Subs&lt;/a&gt; tracks code flow and stack traces.&lt;/li&gt;
&lt;li&gt;Do acceptance testing for JSON-Schema based validators with &lt;a href=&#34;https://metacpan.org/pod/Test::JSON::Schema::Acceptance&#34;&gt;Test::JSON::Schema::Acceptance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yes!! Retry test functions on failure using &lt;a href=&#34;https://metacpan.org/pod/Test::Retry&#34;&gt;Test::Retry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Perl extension for &lt;a href=&#34;https://metacpan.org/pod/Device::Modem::SMSModem&#34;&gt;Device::Modem::SMSModem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A driver for the Pertelian X2040 USB LCD with &lt;a href=&#34;https://metacpan.org/pod/Device::Pertelian&#34;&gt;Device::Pertelian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easily tie database data to Gtk2 / Wx based apps using &lt;a href=&#34;https://metacpan.org/pod/Gtk2::Ex::DbLinker::DbTools&#34;&gt;Gtk2::Ex::DbLinker::DbTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Eliminate an entire email thread with &lt;a href=&#34;https://metacpan.org/pod/Mail::ThreadKiller&#34;&gt;Mail::ThreadKiller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Image::Libpuzzle&#34;&gt;Image::Libpuzzle&lt;/a&gt; provides a Perl interface to libpuzzle - the image similarity library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::Tradis&#34;&gt;Bio::Tradis&lt;/a&gt; can Bio-Tradis contains a set of tools to analyze the output from TraDIS analyses&lt;/li&gt;
&lt;li&gt;Manipulate RGB tuples with &lt;a href=&#34;https://metacpan.org/pod/Number::RGB&#34;&gt;Number::RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Time::Date&#34;&gt;Time::Date&lt;/a&gt; appears to be the simplest date time implementation in Perl yet. I wonder what the limitations are?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:9d36872dc3dcca82f0a59354eccd9216&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a JSON View that owns its own data with &lt;a href=&#34;https://metacpan.org/pod/Catalyst::View::JSON::PerRequest&#34;&gt;Catalyst::View::JSON::PerRequest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add templates to the Data Section of Catalyst views using &lt;a href=&#34;https://metacpan.org/pod/Catalyst::View::MicroTemplate::DataSection&#34;&gt;Catalyst::View::MicroTemplate::DataSection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Replay terminal captures in your Dancer app using &lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Showterm&#34;&gt;Dancer::Plugin::Showterm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Future::Mojo&#34;&gt;Future::Mojo&lt;/a&gt; let&amp;rsquo;s you use futures with Mojo::IOLoop. Very cool!&lt;/li&gt;
&lt;li&gt;The arms-race for faster continues! Replace HTTP::Headers and HTTP::Headers::Fast with &lt;a href=&#34;https://metacpan.org/pod/HTTP::XSHeaders&#34;&gt;HTTP::XSHeaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mercury&#34;&gt;Mercury&lt;/a&gt; is an application broker class&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - August 2015</title>
      <link>http://perltricks.com/article/192/2015/9/3/What-s-new-on-CPAN---August-2015/</link>
      <pubDate>Thu, 03 Sep 2015 13:19:15 +0000</pubDate>
      
      <guid>http://perltricks.com/article/192/2015/9/3/What-s-new-on-CPAN---August-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::HSXKPasswd&#34;&gt;Crypt::HSXKPasswd&lt;/a&gt; is a new module for generating secure, memorable passwords inspired by &lt;a href=&#34;https://xkcd.com/936/&#34;&gt;XKCD&lt;/a&gt;. The module is highly configurable, supporting different word dictionaries, generation and padding rules.&lt;/p&gt;

&lt;p&gt;Module author Bart Busschots has provided rich documentation which includes the theory behind secure passwords and the methods supported by Crypt::HSXKPasswd. Start using securer passwords today!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Amazon::CloudFront::Thin&#34;&gt;Amazon::CloudFront::Thin&lt;/a&gt; aims to be a lightweight, request-level Amazon CloudFront&lt;/li&gt;
&lt;li&gt;A non-blocking API for Amazon&amp;rsquo;s SQS: &lt;a href=&#34;https://metacpan.org/pod/Amazon::SQS::Simple::AnyEvent&#34;&gt;Amazon::SQS::Simple::AnyEvent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Gre&#34;&gt;App::Gre&lt;/a&gt; is a grep clone with better file filtering&lt;/li&gt;
&lt;li&gt;Use the latest version of Google&amp;rsquo;s reCAPTCHA API with &lt;a href=&#34;https://metacpan.org/pod/Captcha::reCAPTCHA::V2&#34;&gt;Captcha::reCAPTCHA::V2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Menlo&#34;&gt;Menlo&lt;/a&gt; is an early release of the next version of &lt;code&gt;cpanm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Google::WebmasterTools&#34;&gt;Net::Google::WebmasterTools&lt;/a&gt; is a Perly interface to the Google WebmasterTools Reporting API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Log::Emitter&#34;&gt;Log::Emitter&lt;/a&gt; is a simple logger based on Mojo::Log&lt;/li&gt;
&lt;li&gt;A Perl mail authentication milter: &lt;a href=&#34;https://metacpan.org/pod/Mail::Milter::Authentication&#34;&gt;Mail::Milter::Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::NSCAng::Client&#34;&gt;Net::NSCAng::Client&lt;/a&gt; can submit host and service monitoring Nagios data&lt;/li&gt;
&lt;li&gt;Find out your public IP address with &lt;a href=&#34;https://metacpan.org/pod/OpenDNS::MyIP&#34;&gt;OpenDNS::MyIP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Svsh&#34;&gt;Svsh&lt;/a&gt; is a process supervision shell for daemontools, perp, s6 and runit&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Apache::Hadoop::Config&#34;&gt;Apache::Hadoop::Config&lt;/a&gt; is a Perl extension for Hadoop node configuration&lt;/li&gt;
&lt;li&gt;Get flexible parameter binding and record fetching with &lt;a href=&#34;https://metacpan.org/pod/DBIx::FlexibleBinding&#34;&gt;DBIx::FlexibleBinding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Generate EPUB documents from Pod using &lt;a href=&#34;https://metacpan.org/pod/EBook::EPUB::Lite&#34;&gt;EBook::EPUB::Lite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Validate data against a JSON schema with &lt;a href=&#34;https://metacpan.org/pod/JSON::Validator&#34;&gt;JSON::Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::SMTP::Verify&#34;&gt;Net::SMTP::Verify&lt;/a&gt; validates SMTP recipient addresses&lt;/li&gt;
&lt;li&gt;Truncate your large strings using &lt;a href=&#34;https://metacpan.org/pod/String::Snip&#34;&gt;String::Snip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Swagger2::Markdown&#34;&gt;Swagger2::Markdown&lt;/a&gt; can convert a Swagger2 spec to various markdown formats&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/XMLRPC::Fast&#34;&gt;XMLRPC::Fast&lt;/a&gt; is a high performance XML-RPC encoder/decoder&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Backbone::Events&#34;&gt;Backbone::Events&lt;/a&gt; is a port of the Backbone.js event API&lt;/li&gt;
&lt;li&gt;Detect the caller level of compiling code with &lt;a href=&#34;https://metacpan.org/pod/Devel::CompileLevel&#34;&gt;Devel::CompileLevel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooX::TypeTiny&#34;&gt;MooX::TypeTiny&lt;/a&gt; provides optimized type checks for Moo with Type::Tiny&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PPIx::Refactor&#34;&gt;PPIx::Refactor&lt;/a&gt; creates hooks for refactoring Perl, based on PPI&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Role::EventEmitter&#34;&gt;Role::EventEmitter&lt;/a&gt; Event emitter role for Moo(se) classes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Deep::Filter&#34;&gt;Test::Deep::Filter&lt;/a&gt; filter matched elements before doing deep data comparisons&lt;/li&gt;
&lt;li&gt;Specify the time for unit tests &lt;a href=&#34;https://metacpan.org/pod/Test::Time::At&#34;&gt;Test::Time::At&lt;/a&gt; - looks great for testing tricky date times&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Tk::FormUI&#34;&gt;Tk::FormUI&lt;/a&gt; is a Moo-based object oriented interface for creating Tk forms&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AppleII::LibA2&#34;&gt;AppleII::LibA2&lt;/a&gt; is an Apple II emulator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::PiFace&#34;&gt;Device::PiFace&lt;/a&gt; provides a Perly interface to manage PiFace boards&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::ProXR&#34;&gt;Device::ProXR&lt;/a&gt; is a Moo-based object oriented interface for creating controllers using the National Control Devices ProXR command set&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hyphenate French words with &lt;a href=&#34;https://metacpan.org/pod/Lingua::FR::Hyphen&#34;&gt;Lingua::FR::Hyphen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Lingua::NO::Syllable&#34;&gt;Lingua::NO::Syllable&lt;/a&gt; can count the number of syllables in Norwegian words&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Locale::India&#34;&gt;Locale::India&lt;/a&gt; can be used for state and union territory identification in India&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Randf&#34;&gt;App::Randf&lt;/a&gt; is a random filter for STDIN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::this&#34;&gt;Acme::this&lt;/a&gt; prints the Zen of Perl&lt;/li&gt;
&lt;li&gt;Looking for secure, memorable password generator inspired &lt;a href=&#34;https://xkcd.com/936/&#34;&gt;XKCD&lt;/a&gt;? You might like &lt;a href=&#34;https://metacpan.org/pod/Crypt::HSXKPasswd&#34;&gt;Crypt::HSXKPasswd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get PHP&amp;rsquo;s &lt;code&gt;parse_str&lt;/code&gt; function using &lt;a href=&#34;https://metacpan.org/pod/PHP::ParseStr&#34;&gt;PHP::ParseStr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disable &lt;code&gt;state&lt;/code&gt; keyword for testing with &lt;a href=&#34;https://metacpan.org/pod/Test::NoState&#34;&gt;Test::NoState&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::ECDH_ES&#34;&gt;Crypt::ECDH_ES&lt;/a&gt; aims to be a fast and small hybrid crypto system&lt;/li&gt;
&lt;li&gt;Get dependency resolution with &lt;a href=&#34;https://metacpan.org/pod/Dependency::Resolver&#34;&gt;Dependency::Resolver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::Groups&#34;&gt;Math::Groups&lt;/a&gt; finds &amp;ldquo;automorphisms of groups and isomorphisms between groups&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Get some useful Math functions with &lt;a href=&#34;https://metacpan.org/pod/Math::Utils&#34;&gt;Math::Utils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDLA&#34;&gt;PDLA&lt;/a&gt; the Perl Data Language - seems familiar &amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Path::Hilbert::XS&#34;&gt;Path::Hilbert::XS&lt;/a&gt; is a fast implementation of a Hilbert Path algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:a2fa62f2f32e0514896046b0a9426c85&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::TraitFor::Request::QueryFromJSONY&#34;&gt;Catalyst::TraitFor::Request::QueryFromJSONY&lt;/a&gt; supports JSONY query parameters&lt;/li&gt;
&lt;li&gt;Get even faster HTTP headers using &lt;a href=&#34;https://metacpan.org/pod/HTTP::Headers::Fast::XS&#34;&gt;HTTP::Headers::Fast::XS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Build swat tests from Mojo routes with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Command::swat&#34;&gt;Mojolicious::Command::swat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - July 2015</title>
      <link>http://perltricks.com/article/184/2015/8/4/What-s-new-on-CPAN---July-2015/</link>
      <pubDate>Tue, 04 Aug 2015 12:55:33 +0000</pubDate>
      
      <guid>http://perltricks.com/article/184/2015/8/4/What-s-new-on-CPAN---July-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:30fbdbf2558374330f77ce846b6202af&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;There have been many inside-out object implementations, but none like this. &lt;a href=&#34;https://metacpan.org/pod/Dios&#34;&gt;Dios&lt;/a&gt; is a &amp;ldquo;Declarative Inside-Out Syntax&amp;rdquo; object system by Damian Conway. It&amp;rsquo;s a Perl 6-style object system that supports functions, methods, signatures, public/private/readonly attributes, types and structured exceptions.&lt;/p&gt;

&lt;p&gt;Dios comes with comprehensive documentation and a decent test suite. Implemented using Keyword::Declare (another new module from Damian), it even garnered &lt;a href=&#34;http://cpanratings.perl.org/dist/Dios&#34;&gt;praise&lt;/a&gt; from Reini Urban who identified one thing you may miss - no support for roles. Time will tell if they&amp;rsquo;re added, but for now I can only say &amp;ldquo;WOW!&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;apis:30fbdbf2558374330f77ce846b6202af&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/CMS::Drupal&#34;&gt;CMS::Drupal&lt;/a&gt; provides a Perl interface to Drupal, the CMS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Marketplace::Ebay&#34;&gt;Marketplace::Ebay&lt;/a&gt; make API calls to eBay (with XSD validation)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Protocol::Matrix&#34;&gt;Protocol::Matrix&lt;/a&gt; helper functions for the Matrix protocol&lt;/li&gt;
&lt;li&gt;Al Newkirk released APIs for &lt;a href=&#34;https://metacpan.org/pod/API::Twitter&#34;&gt;Twitter&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/API::Facebook&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::PayPal::PaymentsAdvanced&#34;&gt;WebService::PayPal::PaymentsAdvanced&lt;/a&gt; is a simple wrapper around the PayPal Payments Advanced web service&lt;/li&gt;
&lt;li&gt;Shorten links using OneShortLink with &lt;a href=&#34;https://metacpan.org/pod/WWW::Shorten::OneShortLink&#34;&gt;WWW::Shorten::OneShortLink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interface with Amazon Marketplace Web Services using &lt;a href=&#34;https://metacpan.org/pod/Amazon::MWS&#34;&gt;Amazon::MWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Analyze the configuration of any SSL web server on the using ssllabs.com with &lt;a href=&#34;https://metacpan.org/pod/WebService::SSLLabs&#34;&gt;WebService::SSLLabs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps:30fbdbf2558374330f77ce846b6202af&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::podispell&#34;&gt;App::podispell&lt;/a&gt; is an interactive Pod spell checker&lt;/li&gt;
&lt;li&gt;Prefix linedata with their arrival timestamp using &lt;a href=&#34;https://metacpan.org/pod/App::Timestamper&#34;&gt;App::Timestamper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::perlsh&#34;&gt;App::perlsh&lt;/a&gt; is a tiny Perl REPL, nice!&lt;/li&gt;
&lt;li&gt;Keep an eye on network port changes with &lt;a href=&#34;https://metacpan.org/pod/App::Monport&#34;&gt;App::Monport&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:30fbdbf2558374330f77ce846b6202af&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/NetHack::NAOdash&#34;&gt;NetHack::NAOdash&lt;/a&gt; extracts statistics from NetHack xlogfiles&lt;/li&gt;
&lt;li&gt;Two C library installers: &lt;a href=&#34;https://metacpan.org/pod/Alien::Libbz2&#34;&gt;Alien::Libbz2&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Alien::TinyCCx&#34;&gt;Alien::TinyCCx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run an SNTP Server with &lt;a href=&#34;https://metacpan.org/pod/Net::SNTP::Server&#34;&gt;Net::SNTP::Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::Dedup&#34;&gt;File::Dedup&lt;/a&gt; can dedupe files across directories&lt;/li&gt;
&lt;li&gt;Run the same command via SSH on many remote servers at the same time using &lt;a href=&#34;https://metacpan.org/pod/App::SSH::Cluster&#34;&gt;App::SSH::Cluster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:30fbdbf2558374330f77ce846b6202af&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Starch&#34;&gt;Starch&lt;/a&gt; is an implementation-independent persistent state class with interfaces for CHI, DBI and DBIx::Class&lt;/li&gt;
&lt;li&gt;A JSON Merge Patch implementation: &lt;a href=&#34;https://metacpan.org/pod/JSON::MergePatch&#34;&gt;JSON::MergePatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Asset::Pack&#34;&gt;Asset::Pack&lt;/a&gt; packs assets into Perl modules that can be fat-packed&lt;/li&gt;
&lt;li&gt;Interface with the InfluxDB time series database using &lt;a href=&#34;https://metacpan.org/pod/InfluxDB::LineProtocol&#34;&gt;InfluxDB::LineProtocol&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::InfluxDB&#34;&gt;AnyEvent::InfluxDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBD::Crate&#34;&gt;DBD::Crate&lt;/a&gt; is a new DBI driver for the Crate database&lt;/li&gt;
&lt;li&gt;A data selection parser and applicator with simple DSL, take a look at &lt;a href=&#34;https://metacpan.org/pod/Data::Selector&#34;&gt;Data::Selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Simple Financial Information eXchange (FIX) protocol implementation: &lt;a href=&#34;https://metacpan.org/pod/FIX::Lite&#34;&gt;FIX::Lite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:30fbdbf2558374330f77ce846b6202af&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Wield lexical control of warnings with &lt;a href=&#34;https://metacpan.org/pod/warnings::lock&#34;&gt;warnings::lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;An early release, &lt;a href=&#34;https://metacpan.org/pod/Meta::Grapher::Moose&#34;&gt;Meta::Grapher::Moose&lt;/a&gt; can produce a GraphViz graph showing meta-information about classes and roles&lt;/li&gt;
&lt;li&gt;Manage Perl&amp;rsquo;s experimental features more easily using &lt;a href=&#34;https://metacpan.org/pod/experimentals&#34;&gt;experimentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Keyword::Declare&#34;&gt;Keyword::Declare&lt;/a&gt; let&amp;rsquo;s you declare new keywords, comprehensively documented. Wow!&lt;/li&gt;
&lt;li&gt;Simple-but-useful &lt;a href=&#34;https://metacpan.org/pod/Devel::Caller::Util&#34;&gt;Devel::Caller::Util&lt;/a&gt; can return the entire caller stack on demand. Useful for printing deep stack traces.&lt;/li&gt;
&lt;li&gt;Declare exception classes in a single file and import them with &lt;a href=&#34;https://metacpan.org/pod/Throwable::SugarFactory&#34;&gt;Throwable::SugarFactory&lt;/a&gt;. Very nice!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Core&#34;&gt;Test::Core&lt;/a&gt; is a Perl testing bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international:30fbdbf2558374330f77ce846b6202af&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Tokenizer&#34;&gt;Perl::Tokenizer&lt;/a&gt; is a tiny Perl code tokenizer built from regexes. But is it any good &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:30fbdbf2558374330f77ce846b6202af&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A wrapper for the &amp;lsquo;tsort&amp;rsquo; (topological sort) command line utility &lt;a href=&#34;https://metacpan.org/pod/Sort::TSort&#34;&gt;Sort::TSort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDLDM::Rank&#34;&gt;PDLDM::Rank&lt;/a&gt; calculates and finds tied ranks of a PDL data matrix&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDLDM::Common&#34;&gt;PDLDM::Common&lt;/a&gt; provides a few PDL utilities for data mining&lt;/li&gt;
&lt;li&gt;See the differences of a file as a HTML table with &lt;a href=&#34;https://metacpan.org/pod/Algorithm::Diff::HTMLTable&#34;&gt;Algorithm::Diff::HTMLTable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:30fbdbf2558374330f77ce846b6202af&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use Google&amp;rsquo;s v2 CAPTCHA service in Mojolicious apps with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ReCAPTCHAv2&#34;&gt;Mojolicious::Plugin::ReCAPTCHAv2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::SQLite&#34;&gt;Mojo::SQLite&lt;/a&gt; is a tiny Mojo wrapper for SQLite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Pingen&#34;&gt;Mojolicious::Plugin::Pingen&lt;/a&gt; makes it easy to integrate your Mojo app with the cool Pingen service.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - June 2015</title>
      <link>http://perltricks.com/article/181/2015/7/9/What-s-new-on-CPAN---June-2015/</link>
      <pubDate>Thu, 09 Jul 2015 13:17:10 +0000</pubDate>
      
      <guid>http://perltricks.com/article/181/2015/7/9/What-s-new-on-CPAN---June-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Class::Storage&#34;&gt;Class::Storage&lt;/a&gt; is a module for serializing blessed references (objects). Once serialized, an object can be transmitted via JSON, XML, YAML or saved in a data store. Serializing objects can also make IPC easier: coroutines, threads and other processes can pass text but blessed references are often an issue.&lt;/p&gt;

&lt;p&gt;Module author Peter Valdemar Mørch has pulled together excellent documentation. A welcome addition to CPAN, check out the acknowledgements &lt;a href=&#34;https://metacpan.org/pod/Class::Storage#ACKNOWLEDGEMENTS&#34;&gt;section&lt;/a&gt; for some interesting background on the module. For an alternative approach, you might be interested in &lt;a href=&#34;https://metacpan.org/pod/Object::Serializer&#34;&gt;Object::Serializer&lt;/a&gt;. For non-readable serializers, checkout &lt;a href=&#34;https://metacpan.org/pod/Storable&#34;&gt;Storable&lt;/a&gt; and the newer and faster &lt;a href=&#34;https://metacpan.org/pod/Sereal&#34;&gt;Sereal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; - when working with object serializers like Class::Storage, only deserialize trusted data, as malicious code can be injected into the data, and when the data is deserialized, the code will be executed automatically. See for example this bug &lt;a href=&#34;https://rt.cpan.org/Public/Bug/Display.html?id=105772&#34;&gt;report&lt;/a&gt; (&lt;em&gt;Thanks to Reini Urban for the reminder&lt;/em&gt;).&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/API::Zendesk&#34;&gt;API::Zendesk&lt;/a&gt; provides a Perl interface for the customer support app&lt;/li&gt;
&lt;li&gt;Painlessly install libsvm, the support vector machine library using &lt;a href=&#34;https://metacpan.org/pod/Alien::LIBSVM&#34;&gt;Alien::LIBSVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use Slack? Of course you do. Check out &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::SlackRTM&#34;&gt;AnyEvent::SlackRTM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Develop your first Slack bot with &lt;a href=&#34;https://metacpan.org/pod/Bot::Backbone::Service::SlackChat&#34;&gt;Bot::Backbone::Service::SlackChat&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Interchange::Search::Solr&#34;&gt;Interchange::Search::Solr&lt;/a&gt; let&amp;rsquo;s you use Solr search with Perl&lt;/li&gt;
&lt;li&gt;Be popular, send your co-workers Bonusly with &lt;a href=&#34;https://metacpan.org/pod/WebService::Bonusly&#34;&gt;WebService::Bonusly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebDriver::Tiny&#34;&gt;WebDriver::Tiny&lt;/a&gt; is an all-new implementation of a Selenium webdriver API for Perl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::App&#34;&gt;Config::App&lt;/a&gt; implements &amp;ldquo;cascading configurations&amp;rdquo; - looks like a convenient way to have context-specific configurations without resorting to Perl code&lt;/li&gt;
&lt;li&gt;Quickly rind files on your Mac using &lt;a href=&#34;https://metacpan.org/pod/Mac::FindFile&#34;&gt;Mac::FindFile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Freenode&#34;&gt;Perl::Critic::Freenode&lt;/a&gt; is a compilation of policies recommended by the folks on the #perl channel on freenode IRC&lt;/li&gt;
&lt;li&gt;Include ditaa diagrams in pod with &lt;a href=&#34;https://metacpan.org/pod/Pod::Weaver::Plugin::Ditaa&#34;&gt;Pod::Weaver::Plugin::Ditaa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract data from your Zoom 5341J cable modem with &lt;a href=&#34;https://metacpan.org/pod/Device::CableModem::Zoom5341J&#34;&gt;Device::CableModem::Zoom5341J&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Log::Dispatch::HipChat&#34;&gt;Log::Dispatch::HipChat&lt;/a&gt; will send your log messages to HipChat&lt;/li&gt;
&lt;li&gt;Moving averages are easy to implement, and easy to get wrong. The next time you need one, consider &lt;a href=&#34;https://metacpan.org/pod/Math::SMA&#34;&gt;Math::SMA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re working with 35mm film and DX codes, you might like &lt;a href=&#34;https://metacpan.org/pod/Photography::DX&#34;&gt;Photography::DX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When stuck in Git merge conflict hell, sometimes it&amp;rsquo;s easier to say &amp;ldquo;I&amp;rsquo;m right&amp;rdquo;. &lt;a href=&#34;https://metacpan.org/pod/App::Git::Workflow::Command::Take&#34;&gt;App::Git::Workflow::Command::Take&lt;/a&gt; let&amp;rsquo;s you tell Git to merge your changes. You win!&lt;/li&gt;
&lt;li&gt;If you have a load of Git repos that you&amp;rsquo;d like to execute a command against, you might like &lt;a href=&#34;https://metacpan.org/pod/App::Multigit&#34;&gt;App::Multigit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Assert::Conditional&#34;&gt;Assert::Conditional&lt;/a&gt; from Tom Christiansen let&amp;rsquo;s you conditionally compile assertions into your Perl programs, ala C&amp;rsquo;s assert.h. Wow&lt;/li&gt;
&lt;li&gt;Daemonize &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://metacpan.org/pod/JIP::Daemon&#34;&gt;JIP::Daemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;text-language:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Text &amp;amp; Language&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::Unicodify&#34;&gt;Acme::Unicodify&lt;/a&gt; can convert ASCII text into Unicode-esque characters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::RS14_PP&#34;&gt;Crypt::RS14_PP&lt;/a&gt; is a pure Perl implementation of the RS14 encryption algorithm&lt;/li&gt;
&lt;li&gt;Convert HTML into FreeStyleWiki markup using &lt;a href=&#34;https://metacpan.org/pod/HTML::WikiConverter::FreeStyleWiki&#34;&gt;HTML::WikiConverter::FreeStyleWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Awesome! detect the language with &lt;a href=&#34;https://metacpan.org/pod/Lingua::Identify::CLD2&#34;&gt;Lingua::Identify::CLD2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Hogan&#34;&gt;Text::Hogan&lt;/a&gt; is a Perl clone of hogan.js, the JavaScript template engine. Supports pre-compilation!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-and-mathematics:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Science and Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Algorithm::BloomFilter&#34;&gt;Algorithm::BloomFilter&lt;/a&gt; is a simple, superfast bloom filter implementation written in XS&lt;/li&gt;
&lt;li&gt;Not a new module, but it is new to CPAN, &lt;a href=&#34;https://metacpan.org/pod/App::Chart&#34;&gt;App::Chart&lt;/a&gt; the visual charting library is useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/BioX::Workflow&#34;&gt;BioX::Workflow&lt;/a&gt; is an &amp;ldquo;opinionated template based workflow writer&amp;rdquo;, hailing from the Bioinformatics World, but not just for BioX&lt;/li&gt;
&lt;li&gt;The Longest Common Subsequence algorithm is used for diffing text, among other uses. &lt;a href=&#34;https://metacpan.org/pod/LCS::XS&#34;&gt;LCS::XS&lt;/a&gt; is a supercharged version, written in XS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:27f3983cc5996563eb8c9442d6c1bef6&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract all of the supported URLs from your Catalyst app using &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::ActionPaths&#34;&gt;Catalyst::Plugin::ActionPaths&lt;/a&gt; (disclosure, I&amp;rsquo;m the module author)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer::Plugin::Piwik&#34;&gt;Dancer::Plugin::Piwik&lt;/a&gt; helps you integrate Pwik analytics with a Dancer app&lt;/li&gt;
&lt;li&gt;Use MongoDB with Minion, the job queue application using &lt;a href=&#34;https://metacpan.org/pod/Minion::Backend::MongoDB&#34;&gt;Minion::Backend::MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Reactor::UV&#34;&gt;Mojo::Reactor::UV&lt;/a&gt; let&amp;rsquo;s you use the C library, libuv as the backend event loop for your Mojo application&lt;/li&gt;
&lt;li&gt;Rapidly expand shortened URLs with &lt;a href=&#34;https://metacpan.org/pod/WWW::Expand::More&#34;&gt;WWW::Expand::More&lt;/a&gt;. Cool!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Updated to include other example serializer modules and deserialization warning - 2015-07-09&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - May 2015</title>
      <link>http://perltricks.com/article/176/2015/6/4/What-s-new-on-CPAN---May-2015/</link>
      <pubDate>Thu, 04 Jun 2015 15:35:56 +0000</pubDate>
      
      <guid>http://perltricks.com/article/176/2015/6/4/What-s-new-on-CPAN---May-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/App::GitHooks::Plugin::ForceBranchNamePattern&#34;&gt;App::GitHooks::Plugin::ForceBranchNamePattern&lt;/a&gt; will enforce a branch naming pattern using a regex. Author Guillaume Aubert gives the use case of building a Puppet environment from Git branches (Puppet environment names must be alphanumeric). Another example is when you want all Git branch names to map to an issue tracker id.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/author/AUBERTG&#34;&gt;Guillaume Aubert&lt;/a&gt; has developed many other useful Git hook plugins, such as emitting release messages into Slack and checking Perl code passes a Perl Critic review. Check them out!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Disque&#34;&gt;Disque&lt;/a&gt; is a distributed job queue built on top of Redis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HPCI&#34;&gt;HPCI&lt;/a&gt; is an application for performing distributed computing&lt;/li&gt;
&lt;li&gt;Use the watcher plugin with Elasticsearch using &lt;a href=&#34;https://metacpan.org/pod/Search::Elasticsearch::Plugin::Watcher&#34;&gt;Search::Elasticsearch::Plugin::Watcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Pocket&#34;&gt;WWW::Pocket&lt;/a&gt; provides an interface for the Pocket v3 API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Marvel&#34;&gt;WWW::Marvel&lt;/a&gt; is an alpha-release interface for the Marvel comics API&lt;/li&gt;
&lt;li&gt;Looking for a faster XML library? TurboXSLT provides an interface to libturboxsl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/Net-Hadoop-YARN&#34;&gt;Net::Hadoop::YARN&lt;/a&gt; is an API for Apache Hadoop Next Generation&lt;/li&gt;
&lt;li&gt;Send Google Analytics user metrics from Perl using &lt;a href=&#34;https://metacpan.org/pod/Net::Google::Analytics::MeasurementProtocol&#34;&gt;Net::Google::Analytics::MeasurementProtocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DirectConnect&#34;&gt;Net::Amazon::DirectConnect&lt;/a&gt; lets you interact with Amazon&amp;rsquo;s DirectConnect service&lt;/li&gt;
&lt;li&gt;Use the Airbrake Notifier API V3 Client with &lt;a href=&#34;https://metacpan.org/pod/Net::Airbrake&#34;&gt;Net::Airbrake&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::Perl&#34;&gt;Config::Perl&lt;/a&gt; aims to be a safer alternative to loading Perl data structures than with &lt;code&gt;eval&lt;/code&gt; by using PPI. Interesting approach, blackhat hackers start your engines&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Group::Git::Taggers::Perl&#34;&gt;Group::Git::Taggers::Perl&lt;/a&gt; provides a way to detect Perl git repos. Could be a useful complement to GitHub&amp;rsquo;s API language detection&lt;/li&gt;
&lt;li&gt;Store SpamAssassin rules performance data in Redis using &lt;a href=&#34;https://metacpan.org/pod/Mail::SpamAssassin::Plugin::RuleTimingRedis&#34;&gt;Mail::SpamAssassin::Plugin::RuleTimingRedis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Looking for a fast priority queue implementation? Check out &lt;a href=&#34;https://metacpan.org/pod/Array::Heap::ModifiablePriorityQueue&#34;&gt;Array::Heap::ModifiablePriorityQueue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::AuditAny&#34;&gt;DBIx::Class::AuditAny&lt;/a&gt; is a configurable change tracking tool for DBIx::Class schemas. For example it could be used to track the changes of values in a table over time (insert, update, delete etc)&lt;/li&gt;
&lt;li&gt;Manage database relationships in DBIx::Class when the traditional route fails with &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Schema::Loader::DBI::RelPatterns&#34;&gt;DBIx::Class::Schema::Loader::DBI::RelPatterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::InflateColumn::TimeMoment&#34;&gt;DBIx::Class::InflateColumn::TimeMoment&lt;/a&gt; provides a DBIx::Class column handler for the super fast date time implementation&lt;/li&gt;
&lt;li&gt;Generate HTML from data using &lt;a href=&#34;https://metacpan.org/pod/HTML::AutoTag&#34;&gt;HTML::AutoTag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;With &lt;a href=&#34;https://metacpan.org/pod/Sereal::Path&#34;&gt;Sereal::Path&lt;/a&gt; you can use XPATH and JSONPath with Sereal-encoded data. Nice!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Find out the reverse dependencies of a module with &lt;a href=&#34;https://metacpan.org/pod/App::CPAN::Dependents&#34;&gt;App::CPAN::Dependents&lt;/a&gt;. Has a neat command line option too&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::AutoloadAll&#34;&gt;Acme::AutoloadAll&lt;/a&gt; exports all subroutines from every loaded module by injecting an autoload function into them. Crazy!&lt;/li&gt;
&lt;li&gt;Keep your Dzil GitHub credentials in one place with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Stash::GitHub&#34;&gt;Dist::Zilla::Stash::GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Object::Prototype&#34;&gt;Data::Object::Prototype&lt;/a&gt; makes prototype-style programming easy. Interesting approach&lt;/li&gt;
&lt;li&gt;Create application locks based on files or sockets with&lt;a href=&#34;https://metacpan.org/pod/%20JIP::LockFile&#34;&gt;JIP::LockFile&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/JIP::LockSocket&#34;&gt;JIP::LockSocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/List::Slice&#34;&gt;List::Slice&lt;/a&gt; provides head and tail functions for lists, plays nicely with functions that output lists like &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Declare compile-time and class-safe constants with &lt;a href=&#34;https://metacpan.org/pod/pluskeys&#34;&gt;pluskeys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Device::GPS can read GSP NMEA data via serial port&lt;/li&gt;
&lt;li&gt;Device::GPIB::Prologix provides a Perly interface for the Prologix GPIB-USB Controller&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-and-mathematics:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Science and Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::CUA&#34;&gt;Bio::CUA&lt;/a&gt; provides &amp;ldquo;comprehensive and flexible tools to analyze codon usage bias&amp;rdquo;. Looks impressive&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::LITE::Taxonomy::NCBI&#34;&gt;Bio::LITE::Taxonomy::NCBI&lt;/a&gt; aims to be a Lightweight and efficient NCBI taxonomic manager&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dallycot::Manual::Intro&#34;&gt;Dallycot&lt;/a&gt; is &amp;ldquo;an engine for running linked open code (algorithms expressed as linked open data) and exploring linked open data&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Read and write Graph6 / sparse6 graph formats with &lt;a href=&#34;https://metacpan.org/pod/Graph::Graph6&#34;&gt;Graph::Graph6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HEP::MCNS&#34;&gt;HEP::MCNS&lt;/a&gt; can convert Monte Carlo numbers into particle names&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/LCS::BV&#34;&gt;LCS::BV&lt;/a&gt; is a bit vector implementation (read: faster) of the LCS algorithm (used for diff among other things)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::EWMA&#34;&gt;Math::EWMA&lt;/a&gt; provides an exponential weighted moving average object&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:2afd27a972d8c2c6e60eb0b4d321004b&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::ActionSignatures&#34;&gt;Catalyst::ActionSignatures&lt;/a&gt; allows declaration of variables in Controller signatures&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Auth::HTTP::Basic::DWIW&#34;&gt;Dancer2::Plugin::Auth::HTTP::Basic::DWIW&lt;/a&gt; provides HTTP basic authentication for Dancer2 apps&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HTTP::Tinyish&#34;&gt;HTTP::Tinyish&lt;/a&gt; is a wrapper for the popular Perl HTTP modules (HTTP::Tiny, LWP etc) and will fallback to using the appropriate module for the request made&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IO::All::Securftp&#34;&gt;IO::All::Securftp&lt;/a&gt; implements a secure FTP handler for IO::All&lt;/li&gt;
&lt;li&gt;Interact with the JavaScript in your Mojo applications using &lt;a href=&#34;https://metacpan.org/pod/Mojo::Phantom&#34;&gt;Mojo::Phantom&lt;/a&gt;. Cool!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - April 2015</title>
      <link>http://perltricks.com/article/172/2015/5/7/What-s-new-on-CPAN---April-2015/</link>
      <pubDate>Thu, 07 May 2015 11:47:25 +0000</pubDate>
      
      <guid>http://perltricks.com/article/172/2015/5/7/What-s-new-on-CPAN---April-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;Dancer::Plugin::Test::Jasmine by Yanick Champoux provides a way to inject Jasmine tests into Dancer applications. So cool!&lt;/p&gt;

&lt;p&gt;Jasmine is a popular JavaScript test framework, and with frontend frameworks like AngularJS, a large amount of application logic often falls outside of the vista of Perl unit testing. Yanick&amp;rsquo;s module provides a way to run Jasmine tests in Perl. He&amp;rsquo;s also &lt;a href=&#34;http://techblog.babyl.ca/entry/dancer-jasmine&#34;&gt;written&lt;/a&gt; about it. Check it out!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Tangerine&#34;&gt;App::Tangerine&lt;/a&gt; is a terminal app for reporting module dependencies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::PAUSE::TimeMachine&#34;&gt;App::PAUSE::TimeMachine&lt;/a&gt; lets you view the PAUSE package list over time&lt;/li&gt;
&lt;li&gt;Get slack notifications about Git releases with &lt;a href=&#34;https://metacpan.org/pod/App::GitHooks::Plugin::NotifyReleasesToSlack&#34;&gt;App::GitHooks::Plugin::NotifyReleasesToSlack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::CouchDB&#34;&gt;Data::CouchDB&lt;/a&gt; is an API for CouchDB the document database&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Minecraft::Fishbans&#34;&gt;WebService::Minecraft::Fishbans&lt;/a&gt; provides an API for searching Minecraft banned user services&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Alien::Electron&#34;&gt;Alien::Electron&lt;/a&gt; will install the awesome &lt;a href=&#34;http://electron.atom.io/&#34;&gt;electron&lt;/a&gt; framework&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/palien&#34;&gt;palien&lt;/a&gt; is a command line app for interfacing with Alien::Base based distributions&lt;/li&gt;
&lt;li&gt;Query FreeBSD for a list of running jails using &lt;a href=&#34;https://metacpan.org/pod/FreeBSD::Jails&#34;&gt;FreeBSD::Jails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Are you missing all those lovely modules that were discarded from the Perl core? Then you&amp;rsquo;ll love &lt;a href=&#34;https://metacpan.org/pod/Bundle::ExCore&#34;&gt;Bundle::ExCore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::JBoss&#34;&gt;Net::JBoss&lt;/a&gt; provides bindings for the JBoss Management API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Amazon::DynamoDB::Simple&#34;&gt;Amazon::DynamoDB::Simple&lt;/a&gt; provides an simplified API for Amazon&amp;rsquo;s DynamoDB, but requires data in 2 AWS regions.&lt;/li&gt;
&lt;li&gt;Another AWS project, &lt;a href=&#34;https://metacpan.org/pod/Paws&#34;&gt;Paws&lt;/a&gt; is an ambitious attempt at unified framework covering all AWS services&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::XS::Sugar&#34;&gt;JSON::XS::Sugar&lt;/a&gt; provides super fast JSON serialization with fine-grained control of boolean values&lt;/li&gt;
&lt;li&gt;Useful for database development,&lt;a href=&#34;https://metacpan.org/pod/Data::ShortNameProvider&#34;&gt;Data::ShortNameProvider&lt;/a&gt; will generate short names unlikely to clash with existing ones&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Subunits&#34;&gt;Test::Subunits&lt;/a&gt;, a new module from Damian Conway, extracts subunit tests from code, or runs inline unit tests. Wowl!&lt;/li&gt;
&lt;li&gt;Throw and delay exceptions with &lt;a href=&#34;https://metacpan.org/pod/Exception::Delayed&#34;&gt;Exception::Delayed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Munge::Whitespace&#34;&gt;Dist::Zilla::Plugin::Munge::Whitespace&lt;/a&gt; will strip trailing whitespace from files&lt;/li&gt;
&lt;li&gt;Trace the origin of loaded modules using &lt;a href=&#34;https://metacpan.org/pod/Devel::Module::Trace&#34;&gt;Devel::Module::Trace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooX::Role::Chatty&#34;&gt;MooX::Role::Chatty&lt;/a&gt; is a configurable progress message reporter&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;Hardware&lt;/h3&gt;

&lt;p&gt;Two new BusPirate modules from Paul Evans:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::BusPirate::Chip::SSD1306&#34;&gt;Device::BusPirate::Chip::SSD1306&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::BusPirate::Chip::DS1307&#34;&gt;Device::BusPirate::Chip::DS1307&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:9d09a9b22344f6529aec729c81bcf9ca&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::Text::Shorten::ForTwitter&#34;&gt;Acme::Text::Shorten::ForTwitter&lt;/a&gt; shortens Twitter text in a clever, extensible way&lt;/li&gt;
&lt;li&gt;Create beautiful photo websites with &lt;a href=&#34;https://metacpan.org/pod/Photography::Website&#34;&gt;Photography::Website&lt;/a&gt;. Check out the &lt;a href=&#34;http://www.superformosa.nl/&#34;&gt;example&lt;/a&gt;. A command line &lt;a href=&#34;https://metacpan.org/pod/distribution/Photography-Website/bin/photog&#34;&gt;app&lt;/a&gt; is also available.&lt;/li&gt;
&lt;li&gt;Great new Catalyst feature: &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::MapComponentDependencies&#34;&gt;Catalyst::Plugin::MapComponentDependencies&lt;/a&gt; provides dependency handling for Catalyst components&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::JWT&#34;&gt;Mojo::JWT&lt;/a&gt; provides JSON web tokens for Mojolicious&lt;/li&gt;
&lt;li&gt;Send messages to users of your Dancer2 web app using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Growler&#34;&gt;Dancer2::Plugin::Growler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s New on CPAN - March 2015</title>
      <link>http://perltricks.com/article/168/2015/4/7/What-s-New-on-CPAN---March-2015/</link>
      <pubDate>Tue, 07 Apr 2015 05:48:52 +0000</pubDate>
      
      <guid>http://perltricks.com/article/168/2015/4/7/What-s-New-on-CPAN---March-2015/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Spring is upon us, and has brought us not only warmer weather, but a bumper cache of new Perl modules. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Rapi::Fs&#34;&gt;Rapi::Fs&lt;/a&gt; by Henry Van Styn is a ExtJS file browser for PSGI-compatible web applications. It&amp;rsquo;s built on top of &lt;a href=&#34;http://www.rapidapp.info/&#34;&gt;RapidApp&lt;/a&gt;, the Catalyst-based, development application.&lt;/p&gt;

&lt;p&gt;The Rapi::FS distribution does many things well: it performs a useful purpose, it&amp;rsquo;s convenient to install and use, has excellent documentation including its own stylish webpage with a slick &lt;a href=&#34;http://rapi.io/fs/&#34;&gt;demo&lt;/a&gt;. Check it out!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::GitWorkspaceScanner&#34;&gt;App::GitWorkspaceScanner&lt;/a&gt; looks useful, it detects and reports on Git repositories with local changes.&lt;/li&gt;
&lt;li&gt;Looking for a command line JSON converter? Check out &lt;a href=&#34;https://metacpan.org/pod/json-to&#34;&gt;json-to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::PureProxy&#34;&gt;App::PureProxy&lt;/a&gt; is a simple proxy server written in Perl&lt;/li&gt;
&lt;li&gt;Retrieve US Census Bureau geo data using &lt;a href=&#34;https://metacpan.org/pod/Geo::USCensus::Geocoding&#34;&gt;Geo::USCensus::Geocoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::VirtPerl&#34;&gt;App::VirtPerl&lt;/a&gt; lets you use multiple versions of Perl modules with a single Perl install&lt;/li&gt;
&lt;li&gt;Execute shell commands triggered by watched files with &lt;a href=&#34;https://metacpan.org/pod/App::watchdo&#34;&gt;App::watchdo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interact with Liquid Web&amp;rsquo;s API using &lt;a href=&#34;https://metacpan.org/pod/LiquidWeb::Storm::CLI&#34;&gt;LiquidWeb::Storm::CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::OpenStack::Swift&#34;&gt;Net::OpenStack::Swift&lt;/a&gt; provides Perl Bindings for the OpenStack Object Storage API, (aka Swift)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Presto&#34;&gt;Net::Presto&lt;/a&gt; provides an API for Presto, the distributed SQL query engine&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Speechmatics&#34;&gt;WebService::Speechmatics&lt;/a&gt; implements an API for Speechmatics, an audio-to-text translator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Read multiline INI files with &lt;a href=&#34;https://metacpan.org/pod/Config::INI::Reader::Multiline&#34;&gt;Config::INI::Reader::Multiline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::Hotfolder&#34;&gt;File::Hotfolder&lt;/a&gt; monitors a directory for file changes and executes a sub&lt;/li&gt;
&lt;li&gt;Useful for release docs, &lt;a href=&#34;https://metacpan.org/pod/Git::Mailmap&#34;&gt;Git::Mailmap&lt;/a&gt; is a Perl implementation of Git mailmap and can read/write mailmap files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HADaemon::Control&#34;&gt;HADaemon::Control&lt;/a&gt; makes it easy to create high availability, fault tolerant daemons.&lt;/li&gt;
&lt;li&gt;Monitor Apache Tomcat instances with &lt;a href=&#34;https://metacpan.org/pod/Net::Tomcat&#34;&gt;Net::Tomcat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Log::LTSV::Instance&#34;&gt;Log::LTSV::Instance&lt;/a&gt; is an &lt;a href=&#34;http://ltsv.org/&#34;&gt;LTSV&lt;/a&gt; logger&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Report&#34;&gt;DBIx::Class::Report&lt;/a&gt; looks interesting - it returns DBIx::Class resultsets from raw SQL strings&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bit::Fast&#34;&gt;Bit::Fast&lt;/a&gt; aims to provide superfast bit manipulation routines&lt;/li&gt;
&lt;li&gt;Like a production line, &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Factory&#34;&gt;DBIx::Class::Factory&lt;/a&gt; can efficiently create data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::RetryConnect&#34;&gt;DBIx::RetryConnect&lt;/a&gt; will auto-retry to connect to a database upon failure, with a growing delay between each re-connection attempt.&lt;/li&gt;
&lt;li&gt;Convert ICal files into RDF graphs with &lt;a href=&#34;https://metacpan.org/pod/Data::ICal::RDF&#34;&gt;Data::ICal::RDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Imager::Barcode128&#34;&gt;Imager::Barcode128&lt;/a&gt; creates GS1 compliant barcodes!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Hash::Storage&#34;&gt;Hash::Storage&lt;/a&gt; is a persistent hash storage framework, which already has a DBI implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/List::Prefixed&#34;&gt;List::Prefixed&lt;/a&gt; implements a compressed list of string prefixes, looks useful&lt;/li&gt;
&lt;li&gt;Merge sereal files with &lt;a href=&#34;https://metacpan.org/pod/Sereal::Merger&#34;&gt;Sereal::Merger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate Perl version badges for your docs with &lt;a href=&#34;https://metacpan.org/pod/Badge::Depot::Plugin::Perl&#34;&gt;Badge::Depot::Plugin::Perl&lt;/a&gt;. Yay!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::GoFaster&#34;&gt;Devel::GoFaster&lt;/a&gt; makes Perl go faster&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Code::TidyAll::Plugin::PgFormatter&#34;&gt;Code::TidyAll::Plugin::PgFormatter&lt;/a&gt; will tidy Postgres SQL code&lt;/li&gt;
&lt;li&gt;Create a &amp;ldquo;human readable, computer executable&amp;rdquo; resumé with &lt;a href=&#34;https://metacpan.org/pod/Acme::Resume&#34;&gt;Acme::Resume&lt;/a&gt;, which generates a Perl package for each resumé&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Lives&#34;&gt;Test::Lives&lt;/a&gt; checks that code doesn&amp;rsquo;t throw an exception&lt;/li&gt;
&lt;li&gt;Operate a virtual terminal with &lt;a href=&#34;https://metacpan.org/pod/Term::VTerm&#34;&gt;Term::VTerm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Attach::Stuff&#34;&gt;Attach::Stuff&lt;/a&gt; makes it easier to design board component architectures&lt;/li&gt;
&lt;li&gt;Send telnet-enabling packets to Netgear routers using &lt;a href=&#34;https://metacpan.org/pod/Net::Telnet::Netgear&#34;&gt;Net::Telnet::Netgear&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-and-international:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Science and International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::Ed25519&#34;&gt;Crypt::Ed25519&lt;/a&gt; implements the Ed25519 public key signing/verification system&lt;/li&gt;
&lt;li&gt;Use the Tiny Implementation Algorithm with &lt;a href=&#34;https://metacpan.org/pod/Crypt::TEA_PP&#34;&gt;Crypt::TEA_PP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::Calc::Parser&#34;&gt;Math::Calc::Parser&lt;/a&gt; can parse and evaluate mathematical expressions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::InterpolationCompiler&#34;&gt;Math::InterpolationCompiler&lt;/a&gt; compiles mathematical interpolations into coderefs, for fast querying&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/RestrictionDigest&#34;&gt;RestrictionDigest&lt;/a&gt; is: &amp;ldquo;a simulation tool for reducing the genome with one DNA endonuclease or a pair DNA endonucleases&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:c5a16da9076aa9ee66c3202478321eaa&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add Google Plus authentication to your Catalyst app with &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::Authentication::Credential::GooglePlus&#34;&gt;Catalyst::Plugin::Authentication::Credential::GooglePlus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Send thousands of emails with &lt;a href=&#34;https://metacpan.org/pod/Email::MIME::Kit::Bulk&#34;&gt;Email::MIME::Kit::Bulk&lt;/a&gt; - a parallel-processing bulk emailer!&lt;/li&gt;
&lt;li&gt;Easy inspect Chrome&amp;rsquo;s HTTP Strict Transport Security preload list with &lt;a href=&#34;https://metacpan.org/pod/HSTS::Preloaded&#34;&gt;HSTS::Preloaded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MIME::Lite::Generator is a memory efficient implementation of MIME::Lite, for generating emails&lt;/li&gt;
&lt;li&gt;Use futures with Mojolicious using &lt;a href=&#34;https://metacpan.org/pod/MojoX::IOLoop::Future&#34;&gt;MojoX::IOLoop::Future&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::Util::Load&#34;&gt;Plack::Util::Load&lt;/a&gt; loads PSGI-compatible web applications from a file, URL or class&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - February 2015</title>
      <link>http://perltricks.com/article/156/2015/3/2/What-s-new-on-CPAN---February-2015/</link>
      <pubDate>Mon, 02 Mar 2015 13:52:10 +0000</pubDate>
      
      <guid>http://perltricks.com/article/156/2015/3/2/What-s-new-on-CPAN---February-2015/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. February&amp;rsquo;s uploads were a goldmine of new toys. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/File::Serialize&#34;&gt;File::Serialize&lt;/a&gt; will read from and write to from yaml, json and toml files, seamlessly converting from native Perl data structures into the required format. It just does the right thing, leaving the developer to focus on their code.&lt;/p&gt;

&lt;p&gt;Module author Yanick Champoux also wrote an &lt;a href=&#34;http://techblog.babyl.ca/entry/file-serialize&#34;&gt;article&lt;/a&gt; about it. With so many great new CPAN uploads, it&amp;rsquo;s not easy choosing the module of the month. What I like about File::Serialize is that it solves a common problem conveniently, and I know I&amp;rsquo;ll use it in my code. Check it out!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/App::cloc&#34;&gt;App::cloc&lt;/a&gt; is the a brand new CPAN package for the established &lt;a href=&#34;http://cloc.sourceforge.net/&#34;&gt;cloc&lt;/a&gt; application. Great to see it on CPAN&lt;/p&gt;

&lt;p&gt;Wow. &lt;a href=&#34;https://metacpan.org/pod/Finance::Nadex&#34;&gt;Finance::Nadex&lt;/a&gt; is a full featured API for the North American Derivatives Exchange. Make sure you do your unit testing before selling options on Anacott Steel!&lt;/p&gt;

&lt;p&gt;Automatically spin up surveys with &lt;a href=&#34;https://metacpan.org/pod/Net::Surveymonkey&#34;&gt;Net::Surveymonkey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Google::SafeBrowsing3&#34;&gt;Net::Google::SafeBrowsing3&lt;/a&gt; provides an interface for the latest version of Google&amp;rsquo;s safe browsing API&lt;/p&gt;

&lt;p&gt;This is interesting: &lt;a href=&#34;https://metacpan.org/pod/WebService::Prismatic::InterestGraph&#34;&gt;WebService::Prismatic::InterestGraph&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Several Amazon AWS goodies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AWS::IP&#34;&gt;AWS::IP&lt;/a&gt; provides Amazon AWS ip ranges in a searchable, cache-able way (disclosure, I am the module author)&lt;/li&gt;
&lt;li&gt;Verify SNS messages with &lt;a href=&#34;https://metacpan.org/pod/AWS::SNS::Verify&#34;&gt;AWS::SNS::Verify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Amazon::S3::Thin&#34;&gt;Amazon::S3::Thin&lt;/a&gt; is a lightweight, transparent interface for S3&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easily parse callgrind output in Perl with &lt;a href=&#34;https://metacpan.org/pod/Callgrind::Parser&#34;&gt;Callgrind::Parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Distribution::Metadata&#34;&gt;Distribution::Metadata&lt;/a&gt; assembles distribution metadata&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Chef::Knife::Cmd&#34;&gt;Chef::Knife::Cmd&lt;/a&gt; is a convenience wrapper for the Chef knife command&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::BOM::Utils&#34;&gt;File::BOM::Utils&lt;/a&gt; lets you manipulate byte order marks in files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Panda::Time&#34;&gt;Panda::Time&lt;/a&gt; purports to be a super fast time module, looks good.. See also &lt;a href=&#34;https://metacpan.org/pod/Panda::Date&#34;&gt;Panda::Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Handle JSON web requests more conveniently with &lt;a href=&#34;https://metacpan.org/pod/LWP::JSON::Tiny&#34;&gt;LWP::JSON::Tiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-version-control:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Development and Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Call::Haskell&#34;&gt;Call::Haskell&lt;/a&gt; provides a foreign function interface for the functional programming language. See also &lt;a href=&#34;https://metacpan.org/pod/Functional::Types&#34;&gt;Functional::Types&lt;/a&gt; which implements a Haskell-like type system in Perl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Git::Crypt&#34;&gt;Git::Crypt&lt;/a&gt; will encrypt and decrypt files for storing sensitive data in repos. Cleverly the encryption is done line-by-line to reduce version control noise&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/GitHub::MergeVelocity&#34;&gt;GitHub::MergeVelocity&lt;/a&gt; produces a neat report on GitHub repos showing how quickly they merge (and close) pull requests. Use it if you&amp;rsquo;re in doubt of whether to contribute to a repo!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Hypnocube&#34;&gt;Device::Hypnocube&lt;/a&gt; lets you control a hypnocube with Perl code - flashing lights!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-and-international:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Science and International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Algorithm::BitVector&#34;&gt;Algorithm::BitVector&lt;/a&gt; is a port of the popular Python library BitVector, by the original author&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/FAST&#34;&gt;FAST&lt;/a&gt; provides Unix-like tools for analyzing bioinformatic sequence records&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:0c3bc4cdcc6acb237b0fa963bfd7aa24&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/LWPx::UserAgent::Cached&#34;&gt;LWPx::UserAgent::Cached&lt;/a&gt; caches HTTP get requests and is polite enough to let you use your own cache, with sane defaults&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Articulate&#34;&gt;Articulate&lt;/a&gt; is a lightweight CMS plugin for Dancer&lt;/li&gt;
&lt;li&gt;Lithium::WebDriver is an awesome, full featured library that can create and control webdriver instances in both Selenium and Phantomjs sessions. Module seems more up to date on &lt;a href=&#34;https://github.com/GrayTShirt/Lithium-WebDriver&#34;&gt;GitHub&lt;/a&gt;. Also see &lt;a href=&#34;https://metacpan.org/pod/Test::Lithium&#34;&gt;Test::Lithium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Pulp&#34;&gt;Pulp&lt;/a&gt; provides syntactic sugar for the Kelp web framework&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

