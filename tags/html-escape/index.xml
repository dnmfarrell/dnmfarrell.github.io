<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>html-escape on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/html-escape/</link>
    <description>Recent content in html-escape on Code - a programming blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Jul 2023 20:23:09 -0400</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/html-escape/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Escaping HTML in Hugo posts</title>
      <link>https://blog.dnmfarrell.com/post/escaping-html-in-hugo-posts/</link>
      <pubDate>Thu, 06 Jul 2023 20:23:09 -0400</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/escaping-html-in-hugo-posts/</guid>
      <description>Hugo, the static site generation engine (which generates this site) has a useful function called safeHTML which marks an HTML string as &amp;ldquo;safe&amp;rdquo;, preventing it from being escaped and displayed literally.
The other day I needed this same behavior but for a variable declared in a post&amp;rsquo;s frontmatter. &amp;ldquo;I&amp;rsquo;ll use that handy safeHTML function&amp;rdquo; I thought. Wrong! Hugo&amp;rsquo;s security model doesn&amp;rsquo;t allow its builtin functions to be called from posts.</description>
    </item>
    
  </channel>
</rss>
