<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zoneinfo on Code Matters - a tech blog</title>
    <link>https://blog.dnmfarrell.com/tags/zoneinfo/</link>
    <description>Recent content in zoneinfo on Code Matters - a tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Apr 2016 19:56:47 +0000</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/zoneinfo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to parse binary data with Perl</title>
      <link>https://blog.dnmfarrell.com/post/how-to-parse-binary-data-with-perl/</link>
      <pubDate>Mon, 18 Apr 2016 19:56:47 +0000</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/how-to-parse-binary-data-with-perl/</guid>
      <description>Parsing binary data is one of those tasks that seems to come up rarely, but is useful to know. Many common file types like images, music, timestamps, network packets and auth logs all come in binary flavors. Unfortunately it&amp;rsquo;s nowhere near as exciting as the fictitious depictions from Hackers. The good news though is parsing binary data with Perl is easy using the unpack function. I&amp;rsquo;m going to walk you through the three steps you&amp;rsquo;ll need when working with binary data.</description>
    </item>
    
  </channel>
</rss>
