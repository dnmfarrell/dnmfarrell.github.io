<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unix on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/unix/</link>
    <description>Recent content in Unix on Code - a programming blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Jun 2021 13:21:08 -0400</lastBuildDate>
    <atom:link href="https://blog.dnmfarrell.com/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Search Man Pages With Apropos</title>
      <link>https://blog.dnmfarrell.com/post/search-man-pages-with-apropos/</link>
      <pubDate>Sun, 13 Jun 2021 13:21:08 -0400</pubDate>
      <guid>https://blog.dnmfarrell.com/post/search-man-pages-with-apropos/</guid>
      <description>&lt;p&gt;Unix &lt;a href=&#34;https://en.wikipedia.org/wiki/Man_page&#34;&gt;man pages&lt;/a&gt; are a mixed bag, but they&amp;rsquo;re faster than Google &lt;em&gt;if&lt;/em&gt; you know where to look. That&amp;rsquo;s where the &lt;code&gt;apropos&lt;/code&gt; program comes in. E.G. to search for man pages for errno:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ apropos errno&#xA;clnt_perrno (3)      - library routines for remote procedure calls&#xA;clnt_sperrno (3)     - library routines for remote procedure calls&#xA;errno (3)            - number of last error&#xA;h_errno (3)          - get network host entry&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This returns the man page name and section number (run &lt;code&gt;man man&lt;/code&gt; for a list of section numbers and their meaning). In this case all the results are in section 3, Library calls.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Three Ways to Get a Unix Epoch in Bash</title>
      <link>https://blog.dnmfarrell.com/post/three-ways-to-get-a-unix-epoch-in-bash/</link>
      <pubDate>Sun, 13 Jun 2021 11:34:50 -0400</pubDate>
      <guid>https://blog.dnmfarrell.com/post/three-ways-to-get-a-unix-epoch-in-bash/</guid>
      <description>&lt;p&gt;The Unix &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time&#34;&gt;epoch time&lt;/a&gt; is the number of elapsed seconds since January 1st, 1970. Epoch times are handy because they&amp;rsquo;re not subject to timezone offsets, and they&amp;rsquo;re numbers, unlike ISO 8601 timestamps for example (&amp;ldquo;1970-01-01T00:00:00Z&amp;rdquo;). That makes them memory efficient, and more importantly, easy to do math with.&lt;/p&gt;&#xA;&lt;p&gt;Here are three ways to get the epoch time in Bash.&lt;/p&gt;&#xA;&lt;h3 id=&#34;use-date&#34;&gt;Use Date&lt;/h3&gt;&#xA;&lt;p&gt;You can use the &lt;code&gt;date&lt;/code&gt; program to generate the epoch time by providing the &lt;code&gt;%s&lt;/code&gt; formatting argument. Here I&amp;rsquo;ve included &lt;code&gt;%N&lt;/code&gt; to append nanoseconds:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
