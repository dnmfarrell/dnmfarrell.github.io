<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Closure on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/closure/</link>
    <description>Recent content in Closure on Code - a programming blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Dec 2020 12:57:03 +0000</lastBuildDate>
    <atom:link href="https://blog.dnmfarrell.com/tags/closure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Perl Closures As Objects</title>
      <link>https://blog.dnmfarrell.com/post/closures-as-objects/</link>
      <pubDate>Sun, 13 Dec 2020 12:57:03 +0000</pubDate>
      <guid>https://blog.dnmfarrell.com/post/closures-as-objects/</guid>
      <description>&lt;p&gt;Perl&amp;rsquo;s object system is not one of its most admired qualities. Included in the 1993 Perl 5.0 release, objects were a bolt-on. A big improvement at the time, in today&amp;rsquo;s context the Perl 5 object system requires too much boilerplate and is under-powered compared to other language offerings (no private state, no type checking, no traits, no multimethods). Perl programmers have been trying to upgrade it for years (&lt;a href=&#34;https://gist.github.com/Ovid/68b33259cb81c01f9a51612c7a294ede&#34;&gt;Cor&lt;/a&gt; is a recent example).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
