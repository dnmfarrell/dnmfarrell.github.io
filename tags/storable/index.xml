<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storable on Perl programming news, code and culture</title>
    <link>https://dnmfarrell.github.io/tags/storable/</link>
    <description>Recent content in Storable on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 May 2015 12:28:31 +0000</lastBuildDate>
    <atom:link href="https://dnmfarrell.github.io/tags/storable/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cache::Reddit or: how to use social media as a temporary data store</title>
      <link>https://dnmfarrell.github.io/article/171/2015/5/4/Cache--Reddit-or--how-to-use-social-media-as-a-temporary-data-store/</link>
      <pubDate>Mon, 04 May 2015 12:28:31 +0000</pubDate>
      
      <guid>https://dnmfarrell.github.io/article/171/2015/5/4/Cache--Reddit-or--how-to-use-social-media-as-a-temporary-data-store/</guid>
      <description>

&lt;p&gt;Sometimes crazy ideas are brilliant, but most of the time they are just crazy. I recently uploaded a new module to CPAN: &lt;a href=&#34;https://metacpan.org/pod/Cache::Reddit&#34;&gt;Cache::Reddit&lt;/a&gt;. It&amp;rsquo;s a caching module with a twist: it saves cached data as text posts on Reddit. Is that a good idea? Probably not, it&amp;rsquo;s definitely crazy.&lt;/p&gt;

&lt;h3 id=&#34;setup:915623acbd42e6947b356ad2ec9d95c4&#34;&gt;Setup&lt;/h3&gt;

&lt;p&gt;You probably don&amp;rsquo;t want to do this, but if you were considering using the module, here&amp;rsquo;s how. First you&amp;rsquo;ll need a Reddit account with enough karma to use the API (usually handful of upvoted links and comments is enough). Second you should create your own &lt;a href=&#34;http://www.reddit.com/subreddits/create/&#34;&gt;subreddit&lt;/a&gt; to post to. Install &lt;a href=&#34;https://metacpan.org/pod/Cache::Reddit&#34;&gt;Cache::Reddit&lt;/a&gt; using the command line clients cpan or cpanm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ cpan Cache::Reddit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ cpanm Cache::Reddit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally set the environment variables: &lt;code&gt;reddit_username&lt;/code&gt;, &lt;code&gt;reddit_password&lt;/code&gt;, and &lt;code&gt;reddit_subreddit&lt;/code&gt; (the name of the subreddit that data will be posted to). On Linux / OSX you can do this at the terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;$ export reddit_username=somename
$ export reddit_password=itsasecret
$ export reddit_subreddit=mycache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To set environment variables on Windows 8, these &lt;a href=&#34;http://winaero.com/blog/how-to-edit-environment-variables-quickly-in-windows-8-1-and-windows-8/&#34;&gt;steps&lt;/a&gt; might work.&lt;/p&gt;

&lt;h3 id=&#34;using-cache-reddit:915623acbd42e6947b356ad2ec9d95c4&#34;&gt;Using Cache::Reddit&lt;/h3&gt;

&lt;p&gt;The module exports the typical caching functions you&amp;rsquo;d expect: &lt;code&gt;set&lt;/code&gt; for saving data, &lt;code&gt;get&lt;/code&gt; for retrieval and &lt;code&gt;remove&lt;/code&gt; for removal. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34;&gt;use Cache::Reddit; #exports get, set, remove

my $monthly_revenues = { jan =&amp;gt; 25000, feb =&amp;gt; 23500, mar =&amp;gt; 31000, apr =&amp;gt; 15000 };
my $key = set($monthly_revenues); # serialize and save on reddit
...
my $revenue_data = get($key);
remove($key);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;limitations:915623acbd42e6947b356ad2ec9d95c4&#34;&gt;Limitations&lt;/h3&gt;

&lt;p&gt;Although the data is stored in a failsafe, redundant, backed-up environment in the cloud, frequent users of Reddit will appreciate that the service is likely to unavailable for a few seconds multiple times a day.&lt;/p&gt;

&lt;p&gt;Retrieval from the cache using &lt;code&gt;get&lt;/code&gt; doesn&amp;rsquo;t use a hash lookup; instead Cache::Reddit iterates through all available posts on the subreddit until it finds a match. This yields 0(n) performance, which means that the &lt;code&gt;get&lt;/code&gt; function will get slower the more items are cached. This is not likely to be a performance bottleneck though, as typically a subreddit only holds 1,000 links before they are lost to the ether.&lt;/p&gt;

&lt;p&gt;The data is serialized and deserialized using &lt;a href=&#34;https://metacpan.org/pod/Storable&#34;&gt;Storable&lt;/a&gt;, which may open pose a security risk if the cached data is edited by a mod. Up to 40,000 characters of data can be stored at one time. Unless the subreddit permits both links and text posts, in which case the limit is 10,000 characters. But Cache::Reddit does boast 100% test coverage.&lt;/p&gt;

&lt;h3 id=&#34;looking-forwards:915623acbd42e6947b356ad2ec9d95c4&#34;&gt;Looking forwards&lt;/h3&gt;

&lt;p&gt;In the future I&amp;rsquo;d like to take advantage of Reddit&amp;rsquo;s voting system to implement a crude &lt;a href=&#34;https://en.wikipedia.org/wiki/Least_Recently_Used#LRU&#34;&gt;LRU&lt;/a&gt; cache. Comments could prove to be a powerful version control system. Patches welcome, the source code is on Instagram.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

