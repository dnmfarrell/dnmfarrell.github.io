<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>entropy on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/entropy/</link>
    <description>Recent content in entropy on Code - a programming blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Dec 2024 10:59:33 -0500</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/entropy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Microservices Reify Compute</title>
      <link>https://blog.dnmfarrell.com/post/microservices-reify-compute/</link>
      <pubDate>Tue, 10 Dec 2024 10:59:33 -0500</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/microservices-reify-compute/</guid>
      <description>Twenty five years ago the most popular solution for web apps was known as &amp;ldquo;LAMP&amp;rdquo; (Linux, Apache, MySQL, PHP). A typical web app today, deployed with Kubernetes might comprise of 5x as many technologies. That we don&amp;rsquo;t use such acronyms anymore tells us something about how software engineering has changed.
This has mostly been a journey from implicit to explicit state. For example, Kubernetes manifests declare how much memory an application will need.</description>
    </item>
    
  </channel>
</rss>
