<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>test2-tools-skipuntil on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/test2-tools-skipuntil/</link>
    <description>Recent content in test2-tools-skipuntil on Code - a programming blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Jun 2018 15:26:40 +0000</lastBuildDate><atom:link href="https://blog.dnmfarrell.com/tags/test2-tools-skipuntil/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writing New Testing Tools With Test2</title>
      <link>https://blog.dnmfarrell.com/post/writing-new-testing-tools-with-test2/</link>
      <pubDate>Tue, 12 Jun 2018 15:26:40 +0000</pubDate>
      
      <guid>https://blog.dnmfarrell.com/post/writing-new-testing-tools-with-test2/</guid>
      <description>Perl has had great testing tools for a long time, but Test2 is the single biggest improvement to Perl testing in years. One of my favorite Test2 features is how easy it is to extend it with new tools, and today I&amp;rsquo;ll show you how I wrote my first tool.
Dealing with known test failures Ideally when your tests fail, it means that something needs to be fixed, and that thing is fixable.</description>
    </item>
    
  </channel>
</rss>
