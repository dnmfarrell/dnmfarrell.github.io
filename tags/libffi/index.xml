<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Libffi on Perl programming news, code and culture</title>
    <link>http://perltricks.com/tags/libffi/</link>
    <description>Recent content in Libffi on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Aug 2016 09:11:11 +0000</lastBuildDate>
    <atom:link href="http://perltricks.com/tags/libffi/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - July 2016</title>
      <link>http://perltricks.com/article/what-s-new-on-cpan---july-2016/</link>
      <pubDate>Tue, 09 Aug 2016 09:11:11 +0000</pubDate>
      
      <guid>http://perltricks.com/article/what-s-new-on-cpan---july-2016/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add copyright information to your images with &lt;a href=&#34;https://metacpan.org/pod/App::CopyrightImage&#34;&gt;App::CopyrightImage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test the tone perception of your ears with &lt;a href=&#34;https://metacpan.org/pod/App::tonematch&#34;&gt;App::tonematch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/ExtUtils::PL2Bat&#34;&gt;ExtUtils::PL2Bat&lt;/a&gt; converts Perl scripts to batch files to run on Windows&lt;/li&gt;
&lt;li&gt;Get an interface to Mail Chimp&amp;rsquo;s API using &lt;a href=&#34;https://metacpan.org/pod/Mail::Chimp3&#34;&gt;Mail::Chimp3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OneAll is an all-in-one social media API, use it with &lt;a href=&#34;https://metacpan.org/pod/WWW::OneAll&#34;&gt;WWW::OneAll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PowerShell&#34;&gt;PowerShell&lt;/a&gt; wraps PowerShell commands&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Snapforce::API&#34;&gt;Snapforce::API&lt;/a&gt; provides a perly interface for the Snapforce CRM API&lt;/li&gt;
&lt;li&gt;Communicate with socket.io servers using &lt;a href=&#34;https://metacpan.org/pod/SocketIO::Emitter&#34;&gt;SocketIO::Emitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get a simple API for querying Gentoo&amp;rsquo;s installed-package database using &lt;a href=&#34;https://metacpan.org/pod/Gentoo::VDB&#34;&gt;Gentoo::VDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::BuiltinFunctions::ProhibitReturnOr&#34;&gt;Perl::Critic::Policy::BuiltinFunctions::ProhibitReturnOr&lt;/a&gt; checks for use of &lt;code&gt;return ... or ...&lt;/code&gt; - an easy mistake to make&lt;/li&gt;
&lt;li&gt;RT-Extension-Tags Extension using &lt;a href=&#34;https://metacpan.org/pod/RT::Extension::Tags&#34;&gt;RT::Extension::Tags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Parse::SAMGov&#34;&gt;Parse::SAMGov&lt;/a&gt; parses SAM Entity Management Public Extract Layout from SAM.gov&lt;/li&gt;
&lt;li&gt;Access CSV, XML, HTML and log data with SQL using &lt;a href=&#34;https://metacpan.org/pod/DBD::AnyData2&#34;&gt;DBD::AnyData2&lt;/a&gt;, a new version of &lt;a href=&#34;https://metacpan.org/pod/DBD::AnyData&#34;&gt;DBIx::AnyData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use DBIx::Class in asynchronous environments with &lt;a href=&#34;https://metacpan.org/pod/DBIx::Connector::Pool&#34;&gt;DBIx::Connector::Pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::IEEE754::Tools&#34;&gt;Data::IEEE754::Tools&lt;/a&gt; provides functions for inspecting and manipulating Perl&amp;rsquo;s floating point values&lt;/li&gt;
&lt;li&gt;Create custom ETL processes using &lt;a href=&#34;https://metacpan.org/pod/ETL::Pipeline&#34;&gt;ETL::Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Geo::libpostal&#34;&gt;Geo::libpostal&lt;/a&gt; Perl bindings for the speedy libpostal geo coder (disclaimer: I am the module author)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MARC::Spec&#34;&gt;MARC::Spec&lt;/a&gt; builds and parses the MARCspec record path language&lt;/li&gt;
&lt;li&gt;Daniel È˜uteu uploaded two search modules:&lt;a href=&#34;https://metacpan.org/pod/Search::MultiMatch&#34;&gt;Search::MultiMatch&lt;/a&gt; uses 2 dimensional arrays as keys, and &lt;a href=&#34;https://metacpan.org/pod/Search::ByPrefix&#34;&gt;Search::ByPrefix&lt;/a&gt; searches for substring matches&lt;/li&gt;
&lt;li&gt;Normalize URIs with &lt;a href=&#34;https://metacpan.org/pod/URI::Normalize&#34;&gt;URI::Normalize&lt;/a&gt; - no more missing trailing slashes, yay!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/YAML::LoadBundle&#34;&gt;YAML::LoadBundle&lt;/a&gt; loads a directory of YAML files into a single data structure, with different merge options. Nice!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use map reduce with just a few lines of code using &lt;a href=&#34;https://metacpan.org/pod/MapReduce::Framework::Simple&#34;&gt;MapReduce::Framework::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/ReadonlyX&#34;&gt;ReadonlyX&lt;/a&gt; aims to be a faster, better version of Readonly. I wonder how it compares to community favorite &lt;a href=&#34;https://metacpan.org/pod/Const::Fast&#34;&gt;Const::Fast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Write your script in any encoding with &lt;a href=&#34;https://metacpan.org/pod/Filter::Encoding&#34;&gt;Filter::Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Alt::FFI::libffi&#34;&gt;Alt::FFI::libffi&lt;/a&gt; provides a Perl Foreign Function interface based on libffi&lt;/li&gt;
&lt;li&gt;Monkeypatch Moose exceptions with &lt;a href=&#34;https://metacpan.org/pod/MooseX::ErrorHandling&#34;&gt;MooseX::ErrorHandling&lt;/a&gt;. Docs say &amp;ldquo;This module is almost certainly a bad idea&amp;rdquo;. Ready for production then!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Params::ValidationCompiler&#34;&gt;Params::ValidationCompiler&lt;/a&gt; let&amp;rsquo;s you create and re-use parameter validation routines&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::AVR_HVSP&#34;&gt;Device::Chip::AVR_HVSP&lt;/a&gt; enables high-voltage serial programming for AVR chips&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Geo::GoogleEarth::AutoTour&#34;&gt;Geo::GoogleEarth::AutoTour&lt;/a&gt; generates Google Earth tours using tracks and paths&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:f3bb894e15cb1eeff469d8127fc0975c&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Parse::WWWAuthenticate&#34;&gt;Parse::WWWAuthenticate&lt;/a&gt; parses the WWW-Authenticate HTTP header; not sure if this is better than using a general purpose parser like &lt;a href=&#34;https://metacpan.org/pod/HTTP::XSHeaders&#34;&gt;HTTP::XSHeaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PEF::Front&#34;&gt;PEF::Front&lt;/a&gt; is a new web framework&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plift&#34;&gt;Plift&lt;/a&gt; is a new templating module&lt;/li&gt;
&lt;li&gt;Implement a mock HTTP server for testing using &lt;a href=&#34;https://metacpan.org/pod/Test::HTTP::MockServer&#34;&gt;Test::HTTP::MockServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a test Apache instance with &lt;a href=&#34;https://metacpan.org/pod/Test::Instance::Apache&#34;&gt;Test::Instance::Apache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - January 2015</title>
      <link>http://perltricks.com/article/149/2015/2/6/What-s-new-on-CPAN---January-2015/</link>
      <pubDate>Fri, 06 Feb 2015 13:34:40 +0000</pubDate>
      
      <guid>http://perltricks.com/article/149/2015/2/6/What-s-new-on-CPAN---January-2015/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. This year we&amp;rsquo;re running a new feature: &amp;ldquo;module of the month&amp;rdquo;, where we highlight our favorite new CPAN upload. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;module-of-the-month:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;Module of the month&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/FFI::Platypus&#34;&gt;FFI::Platypus&lt;/a&gt; enables Perl to call foreign language functions (e.g. Python, C, Rust) using libffi. Unlike using XS, no knowledge of C is required. The module not only works great but has comprehensive documentation and is under active development.&lt;/p&gt;

&lt;p&gt;Module author Graham Ollis has also &lt;a href=&#34;http://blogs.perl.org/users/graham_ollis/2015/01/practical-ffi-with-platypus.html&#34;&gt;blogged&lt;/a&gt; about it. FFI::Platypus is hosted on &lt;a href=&#34;https://github.com/plicease/FFI-Platypus&#34;&gt;GitHub&lt;/a&gt;, check it out!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easily share files over HTTP with &lt;a href=&#34;https://metacpan.org/pod/charon&#34;&gt;charon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::PerlXLock&#34;&gt;App::PerlXLock&lt;/a&gt; will lock the screen when run. Requires X11&lt;/li&gt;
&lt;li&gt;Need to serve a directory over HTTP? Check out &lt;a href=&#34;https://metacpan.org/pod/App::SimpleHTTPServer&#34;&gt;App::SimpleHTTPServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::SpeedTest%20&#34;&gt;App::SpeedTest&lt;/a&gt;is cool command line utility for testing connection speeds&lt;/li&gt;
&lt;li&gt;It comes with warnings but &lt;a href=&#34;https://metacpan.org/pod/Google::Tasks&#34;&gt;Google::Tasks&lt;/a&gt; looks like a useful API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MetaCPAN::Helper&#34;&gt;MetaCPAN::Helper&lt;/a&gt; provides some high-level sugar for searching MetaCPAN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Shell::Tools&#34;&gt;Shell::Tools&lt;/a&gt; imports an arsenal of convenient modules for scripting&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::RemoteCommand&#34;&gt;App::RemoteCommand&lt;/a&gt; execute commands on remote servers - very nice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HTML::Differences&#34;&gt;HTML::Differences&lt;/a&gt; provides &amp;ldquo;reasonably sane&amp;rdquo; HTML diffs&lt;/li&gt;
&lt;li&gt;Compare database structures using &lt;a href=&#34;https://metacpan.org/pod/DBIx::Diff::Schema&#34;&gt;DBIx::Diff::Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Fake&#34;&gt;Data::Fake&lt;/a&gt; is a data generator module with a functional interface&lt;/li&gt;
&lt;li&gt;Read and update complex data structures easily using &lt;a href=&#34;https://metacpan.org/pod/Data::Focus&#34;&gt;Data::Focus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Phash::FFI&#34;&gt;Phash::FFI&lt;/a&gt; is an interface for an external library that hashes media files to test for similarity&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-and-interop:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;Development and Interop&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/FFI::Me&#34;&gt;FFI::Me&lt;/a&gt; is provides some sugar over FFI::Raw that lets you call foreign language (e.g. C, Python, Ruby) library functions&lt;/li&gt;
&lt;li&gt;Generate a simple-but-sensible module readme with &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Readme::Brief&#34;&gt;Dist::Zilla::Plugin::Readme::Brief&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Object::Properties&#34;&gt;Object::Properties&lt;/a&gt; is another class library, similar to Object::Tiny with some additional features&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/ARGV::Struct&#34;&gt;ARGV::Struct&lt;/a&gt; parses complex command line arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;testing-debugging:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;Testing &amp;amp; Debugging&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Carp::Capture&#34;&gt;Carp::Capture&lt;/a&gt; stores stack traces for later inspection.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Test::TidyAll&#34;&gt;Dist::Zilla::Plugin::Test::TidyAll&lt;/a&gt; will test your distribution code is tidy before letting you publish it&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:f7741ed44cc1868eb231f608e2ef499e&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A couple of new Catalyst modules; &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::Session::Store::Cookie&#34;&gt;Catalyst::Plugin::Session::Store::Cookie&lt;/a&gt; does what it says, and &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::ResponseFrom&#34;&gt;Catalyst::Plugin::ResponseFrom&lt;/a&gt; which allows the request and capture of responses from external URLs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/FCGI::Buffer&#34;&gt;FCGI::Buffer&lt;/a&gt; provides a validator and cache for FCGI output&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

