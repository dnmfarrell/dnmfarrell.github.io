<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phantomjs on Perl programming news, code and culture</title>
    <link>https://dnmfarrell.github.io/tags/phantomjs/</link>
    <description>Recent content in Phantomjs on Perl programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Dec 2015 04:34:15 +0000</lastBuildDate>
    <atom:link href="https://dnmfarrell.github.io/tags/phantomjs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - November 2015</title>
      <link>https://dnmfarrell.github.io/article/202/2015/12/8/What-s-new-on-CPAN---November-2015/</link>
      <pubDate>Tue, 08 Dec 2015 04:34:15 +0000</pubDate>
      
      <guid>https://dnmfarrell.github.io/article/202/2015/12/8/What-s-new-on-CPAN---November-2015/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Highlander&#34;&gt;App::Highlander&lt;/a&gt; can provides simple named locks. Useful!&lt;/li&gt;
&lt;li&gt;Pick one or more random lines from input using &lt;a href=&#34;https://metacpan.org/pod/App::PickRandomLines&#34;&gt;App::PickRandomLines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;Random Access Machine&amp;rdquo; Emulator: &lt;a href=&#34;https://metacpan.org/pod/Language::RAM&#34;&gt;Language::RAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sync data across multiple regions with &lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DynamoDB::HighlyAvailable&#34;&gt;Net::Amazon::DynamoDB::HighlyAvailable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::DynamoDB::Table&#34;&gt;Net::Amazon::DynamoDB::Table&lt;/a&gt; provides a high-level interface to Net::Amazon::DyamoDB::Lite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::KeenIO&#34;&gt;WWW::KeenIO&lt;/a&gt; provides a Perl API for the event storage and analytics service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Saucelabs&#34;&gt;WWW::Saucelabs&lt;/a&gt; is a &amp;ldquo;perilously incomplete&amp;rdquo;, yet useful, Perly interface to the Saucelabs REST API&lt;/li&gt;
&lt;li&gt;Find out what&amp;rsquo;s on TV using the TVMaze API and &lt;a href=&#34;https://metacpan.org/pod/WWW::TVMaze&#34;&gt;WWW::TVMaze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Zendesk&#34;&gt;WebService::Zendesk&lt;/a&gt; is another work-in-progress but useful API, this time for Zendesk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::FTPTLS&#34;&gt;Net::FTPTLS&lt;/a&gt; is a super-simple Perl FTP client with TLS support. Cool!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::SSH2::Cisco&#34;&gt;Net::SSH2::Cisco&lt;/a&gt; let&amp;rsquo;s you talk to Cisco routers via SSH!&lt;/li&gt;
&lt;li&gt;Configure, control and monitor rate limits for services with &lt;a href=&#34;https://metacpan.org/pod/RateLimitations&#34;&gt;RateLimitations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Compress data at &lt;em&gt;outrageous&lt;/em&gt; speeds with &lt;a href=&#34;https://metacpan.org/pod/Compress::LZ4Frame&#34;&gt;Compress::LZ4Frame&lt;/a&gt;, which ships with the &lt;a href=&#34;https://github.com/Cyan4973/lz4&#34;&gt;LZ4 compression library&lt;/a&gt; written in C.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::BulkUtil&#34;&gt;DBIx::BulkUtil&lt;/a&gt; provides bulk load and other features for relational databases&lt;/li&gt;
&lt;li&gt;Wow, &lt;a href=&#34;https://metacpan.org/pod/DOM::Tiny&#34;&gt;DOM::Tiny&lt;/a&gt; is a minimalist but feature-rich DOM parser using CSS selectors&lt;/li&gt;
&lt;li&gt;Interesting, play with a virtual file system using &lt;a href=&#34;https://metacpan.org/pod/Filesys::Virtual::Chroot&#34;&gt;Filesys::Virtual::Chroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IMAP::Query&#34;&gt;IMAP::Query&lt;/a&gt; can generateIMAP search queries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mail::DKIM::Iterator&#34;&gt;Mail::DKIM::Iterator&lt;/a&gt; validates DKIM signatures and signs asynchronously&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::Trepan::Deparse&#34;&gt;Devel::Trepan::Deparse&lt;/a&gt; adds deparse support to Devel::Trepan&lt;/li&gt;
&lt;li&gt;Call the JavaScript Handlebars template library from Perl, with &lt;a href=&#34;https://metacpan.org/pod/JavaScript::V8::Handlebars&#34;&gt;JavaScript::V8::Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test &lt;em&gt;some&lt;/em&gt;? Only execute a subset of your test suite using &lt;a href=&#34;https://metacpan.org/pod/Test::Some&#34;&gt;Test::Some&lt;/a&gt;, author Yanick &lt;a href=&#34;http://techblog.babyl.ca/entry/test-some&#34;&gt;blogged&lt;/a&gt; about why this might be useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Unix::Pledge&#34;&gt;Unix::Pledge&lt;/a&gt; restrict system operations on BSD using &lt;code&gt;pledge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Talk to Windows machines over the network using &lt;a href=&#34;https://metacpan.org/pod/Win32::Netsh&#34;&gt;Win32::Netsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Hardware&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/author/PEVANS&#34;&gt;Paul Evans&lt;/a&gt; has been hard at work releasing several new chip driver modules, way to go Paul!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BV4243 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::BV4243&#34;&gt;Device::Chip::BV4243&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DS1307 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::DS1307&#34;&gt;Device::Chip::DS1307&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;INA219 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::INA219&#34;&gt;Device::Chip::INA219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MAX7219 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MAX7219&#34;&gt;Device::Chip::MAX7219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MCP23x17 family &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MCP23x17&#34;&gt;Device::Chip::MCP23x17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MPL3115A2 &lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MPL3115A2&#34;&gt;Device::Chip::MPL3115A2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate CSS sprites from a series of images using &lt;a href=&#34;https://metacpan.org/pod/CSS::SpriteMaker::Simple&#34;&gt;CSS::SpriteMaker::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Look up zodiac sign for a given date with &lt;a href=&#34;https://metacpan.org/pod/Zodiac::Tiny&#34;&gt;Zodiac::Tiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/LCS::Similar&#34;&gt;LCS::Similar&lt;/a&gt; allows differences in the compared elements of Longest Common Subsequence (LCS) Algorithm&lt;/li&gt;
&lt;li&gt;Simulate genomic restriction digests with &lt;a href=&#34;https://metacpan.org/pod/RestrictionDigest&#34;&gt;RestrictionDigest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web:88dbf448071c68b6dbea2a21a0e58ef4&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::URI&#34;&gt;Catalyst::Plugin::URI&lt;/a&gt; provides nicer and &lt;em&gt;safer&lt;/em&gt; way to get Controller action methods as URIs&lt;/li&gt;
&lt;li&gt;Read and write PhantomJS cookies file using &lt;a href=&#34;https://metacpan.org/pod/HTTP::Cookies::PhantomJS&#34;&gt;HTTP::Cookies::PhantomJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ErrorsAndWarnings&#34;&gt;Mojolicious::Plugin::ErrorsAndWarnings&lt;/a&gt; stores errors and warnings during a request for powerful introspection&lt;/li&gt;
&lt;li&gt;Run a consul server for testing using &lt;a href=&#34;https://metacpan.org/pod/Test::Consul&#34;&gt;Test::Consul&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The best of what&#39;s new on CPAN 2014</title>
      <link>https://dnmfarrell.github.io/article/145/2015/1/15/The-best-of-what-s-new-on-CPAN-2014/</link>
      <pubDate>Thu, 15 Jan 2015 14:44:40 +0000</pubDate>
      
      <guid>https://dnmfarrell.github.io/article/145/2015/1/15/The-best-of-what-s-new-on-CPAN-2014/</guid>
      <description>

&lt;p&gt;2014 has come and gone, which means that we&amp;rsquo;ve completed 12 editions of &amp;ldquo;What&amp;rsquo;s New on CPAN&amp;rdquo;. This seems like an appropriate moment to take stock and reflect on the past year of new CPAN uploads. I&amp;rsquo;ve compiled a shortlist of modules by using the scientific approach of &amp;ldquo;stuff that I remember&amp;rdquo;. Have a think about what would be on your &amp;ldquo;best of&amp;rdquo; list, and maybe let the author know, or better, write about it and let the World know.&lt;/p&gt;

&lt;h3 id=&#34;config-devops:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Config &amp;amp; DevOps&lt;/h3&gt;

&lt;p&gt;Ingy and David&amp;rsquo;s grant work on the next generation of &lt;a href=&#34;https://metacpan.org/pod/Inline&#34;&gt;Inline&lt;/a&gt; generated a lot of excitement. But along with re-furbishing the whole Inline ecosystem, a number of side-effect modules were created too. One of those is &lt;a href=&#34;https://metacpan.org/pod/Devel::PerlLog&#34;&gt;Devel::PerlLog&lt;/a&gt; which simply logs a configurable message every time a Perl process starts.&lt;/p&gt;

&lt;p&gt;C-related Perl libraries got a big boost in 2014. Asides from Ingy&amp;rsquo;s refreshed &lt;a href=&#34;https://metacpan.org/pod/Inline::C&#34;&gt;Inline::C&lt;/a&gt;, Graham Ollis has been working and &lt;a href=&#34;https://www.youtube.com/watch?v=cY-yqQ_nmtw&amp;amp;list=PLvxiAPPfDjyP293FgDJjK0CXaZq6EH0pC&#34;&gt;presenting&lt;/a&gt; on another XS alternative: FFI. &lt;a href=&#34;https://metacpan.org/pod/FFI::CheckLib&#34;&gt;FFI::CheckLib&lt;/a&gt; will check that a particular C library is available as well as &lt;a href=&#34;https://metacpan.org/pod/FFI::TinyCC&#34;&gt;FFI::TinyCC&lt;/a&gt;, a compiler interface.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Module::Loader&#34;&gt;Module::Loader&lt;/a&gt; is a nifty way of loading plugins at runtime.&lt;/p&gt;

&lt;h3 id=&#34;data:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Data&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Hash::Ordered&#34;&gt;Hash::Ordered&lt;/a&gt; was a best-in-class implementation of an ordered hash class by David Golden. He also gave an in-depth &lt;a href=&#34;https://www.youtube.com/watch?v=p4U6FWyRBoQ&amp;amp;feature=youtu.be&#34;&gt;talk&lt;/a&gt; of the trade offs of the solution and the alternatives on CPAN (slides &lt;a href=&#34;http://www.dagolden.com/wp-content/uploads/2009/04/Adventures-in-Optimization-NYpm-July-2014.pdf&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Did you know that &lt;a href=&#34;https://metacpan.org/pod/File::Slurp&#34;&gt;File::Slurp&lt;/a&gt; can have issues with the Perl encoding layer? (among other &lt;a href=&#34;http://blogs.perl.org/users/leon_timmermans/2013/05/why-you-dont-need-fileslurp.html&#34;&gt;issues&lt;/a&gt;). Leon Timmermans wrote &lt;a href=&#34;https://metacpan.org/pod/File::Slurper&#34;&gt;File::Slurper&lt;/a&gt; as a better alternative.&lt;/p&gt;

&lt;p&gt;Ah &lt;a href=&#34;https://metacpan.org/pod/Sereal&#34;&gt;Sereal&lt;/a&gt;, the super-fast seralizer software. &lt;a href=&#34;https://metacpan.org/pod/SerealX::Store&#34;&gt;SerealX::Store&lt;/a&gt; was an attempt to create a storable-like interface over Sereal, except tastier. &lt;a href=&#34;https://metacpan.org/pod/XML::Dataset&#34;&gt;XML::Dataset&lt;/a&gt; implements a simple DSL for extracting data from XML/XHTML documents.&lt;/p&gt;

&lt;h3 id=&#34;databases:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Databases&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Raw&#34;&gt;DBIx::Raw&lt;/a&gt; provides both low level SQL control and time-saving abstractions to fill a niche role for DB access. Divine the database datatype of a scalar using &lt;a href=&#34;https://metacpan.org/pod/SQL::Type::Guess&#34;&gt;SQL::Type::Guess&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;fun:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Fun&lt;/h3&gt;

&lt;p&gt;Remember the big debate about Perl 5&amp;rsquo;s version numbering? Whilst some tirelessly debating the topic, others were hard at work at real solutions™. This is &lt;a href=&#34;https://metacpan.org/pod/Acme::Futuristic::Perl&#34;&gt;Acme::Futuristic::Perl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Speaking of real solutions™, check out &lt;a href=&#34;https://metacpan.org/pod/bare&#34;&gt;bare&lt;/a&gt; which removes the need to use sigils for scalars. Finally, the last barrier to mass adoption of Perl has been solved!&lt;/p&gt;

&lt;h3 id=&#34;hardware:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Hardware&lt;/h3&gt;

&lt;p&gt;CPAN advanced more in hardware-related modules than perhaps any other area. YAPC NA 2014 was awash with drones. This really does seem like a promising area for Perl to lay claim. Several modules stand out in particular. Let&amp;rsquo;s start with the shiny: Timm Murray&amp;rsquo;s &lt;a href=&#34;https://metacpan.org/pod/UAV::Pilot::ARDrone&#34;&gt;UAV::Pilot::ARDrone&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/release/UAV-Pilot-WumpusRoverr&#34;&gt;UAV::Pilot::WumpusRover&lt;/a&gt; enables WiFi remote control (with video) of drones! Timm&amp;rsquo;s &lt;a href=&#34;https://metacpan.org/pod/Device::WebIO&#34;&gt;Device::WebIO&lt;/a&gt; provides a standardized interface for accessing many devices with drivers available for Raspberry Pi and Arduino among others.&lt;/p&gt;

&lt;p&gt;Another significant development was Paul Evan&amp;rsquo;s &lt;a href=&#34;https://metacpan.org/pod/Device::BusPirate&#34;&gt;Device::BusPirate&lt;/a&gt;, for the Bus Pirate hardware tool. Finally, check out &lt;a href=&#34;https://metacpan.org/pod/VIC&#34;&gt;VIC&lt;/a&gt;, Vikas Kumar&amp;rsquo;s amazing DSL for PIC micro-controllers.&lt;/p&gt;

&lt;h3 id=&#34;presenting-software:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Presenting Software&lt;/h3&gt;

&lt;p&gt;Pretend you&amp;rsquo;re a command line wizard with &lt;a href=&#34;https://metacpan.org/pod/App::Cleo&#34;&gt;App::Cleo&lt;/a&gt;, which will playback a list of commands from a file for airtight demos. No more typos!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/App::revealup&#34;&gt;App::revealup&lt;/a&gt; enables markdown driven presentations with Reveal.js, by implementing a mini HTTP server. I &lt;a href=&#34;http://perltricks.com/article/94/2014/6/6/Create-professional-slideshows-in-seconds-with-App--revealup&#34;&gt;wrote&lt;/a&gt; about it (&lt;a href=&#34;http://perltricks.com/article/134/2014/11/13/Advanced-slideshow-maneuvers&#34;&gt;twice&lt;/a&gt;) and use it all the time, highly recommended.&lt;/p&gt;

&lt;h3 id=&#34;testing:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Testing&lt;/h3&gt;

&lt;p&gt;There was a tonne of new testing stuff this year, but not much stuck with me. One module that did was &lt;a href=&#34;https://metacpan.org/pod/Test::RequiresInternet&#34;&gt;Test::RequiresInternet&lt;/a&gt;. Import this module with &lt;code&gt;use&lt;/code&gt; and it will skip over the unit tests in your test file unless an active internet connection is found. Very handy!&lt;/p&gt;

&lt;p&gt;Not exactly testing related, but surely useful for debugging, &lt;a href=&#34;https://metacpan.org/pod/Regexp::Lexer&#34;&gt;Regexp::Lexer&lt;/a&gt; tokenizes regexes, which is just cool.&lt;/p&gt;

&lt;h3 id=&#34;web:8cae8fcd55840421fc8b31900526d80c&#34;&gt;Web&lt;/h3&gt;

&lt;p&gt;Masahiro Nagano created &lt;a href=&#34;https://metacpan.org/pod/Gazelle&#34;&gt;Gazelle&lt;/a&gt;, a highly optimized pre-forking Plack handler with Nginx-like performance. Incredible stuff!&lt;/p&gt;

&lt;p&gt;2014 also brought the usual flood of plugins for the major web frameworks. Big news for Mojo fans was the announcement of the platform moving away from MongoDB support and embracing a Postgres backend instead with &lt;a href=&#34;https://metacpan.org/pod/Mojo::Pg&#34;&gt;Mojo::Pg&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Web scrapers and QA testers did well: &lt;a href=&#34;https://metacpan.org/pod/WWW::Mechanize::PhantomJS&#34;&gt;WWW::Mechanize::PhantomJS&lt;/a&gt; implements a headless, JavaScript enabled browser with the typical friendly mechanize interface. &lt;a href=&#34;https://metacpan.org/pod/Selenium::Screenshot&#34;&gt;Selenium::Screenshot&lt;/a&gt; combines Selenium&amp;rsquo;s screenshot ability with &lt;a href=&#34;https://metacpan.org/pod/Image::Compare&#34;&gt;Image::Compare&lt;/a&gt; to detect changes in web pages.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

