<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Complexity on Code - a programming blog</title>
    <link>https://blog.dnmfarrell.com/tags/complexity/</link>
    <description>Recent content in Complexity on Code - a programming blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Dec 2024 12:41:35 -0500</lastBuildDate>
    <atom:link href="https://blog.dnmfarrell.com/tags/complexity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Novelty In Software Engineering</title>
      <link>https://blog.dnmfarrell.com/post/novelty/</link>
      <pubDate>Mon, 16 Dec 2024 12:41:35 -0500</pubDate>
      <guid>https://blog.dnmfarrell.com/post/novelty/</guid>
      <description>&lt;p&gt;In the 1940s Bell Aircraft used an experimental approach to build the first commercial helicopter:¹&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;q&gt;At Gardenville, we built things, tested them, modified them until they worked, and then made the drawings.&lt;/q&gt;&#xA;&#xA;&lt;p class=&#34;source&#34;&gt;&amp;mdash;&amp;nbsp;The Bell Notes, Arthur M. Young, &lt;em&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;The project manager contrasted this with how they built airplanes:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;q&gt;The main engineering group made drawings, sent them to the plant, and only the project manager ever saw the product fly. This was successful with airplanes because the airplane did not involve unknowns …&lt;/q&gt;&#xA;&#xA;&lt;p class=&#34;source&#34;&gt;&amp;mdash;&amp;nbsp;The Bell Notes, Arthur M. Young, &lt;em&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Microservices Reify Compute</title>
      <link>https://blog.dnmfarrell.com/post/microservices-reify-compute/</link>
      <pubDate>Tue, 10 Dec 2024 10:59:33 -0500</pubDate>
      <guid>https://blog.dnmfarrell.com/post/microservices-reify-compute/</guid>
      <description>&lt;p&gt;Twenty five years ago the most popular solution for web apps was known as &amp;ldquo;LAMP&amp;rdquo; (Linux, Apache, MySQL, PHP). A typical web app today, deployed with Kubernetes might comprise of 5x as many technologies. That we don&amp;rsquo;t use such acronyms anymore tells us something about how software engineering has changed.&lt;/p&gt;&#xA;&lt;p&gt;This has mostly been a journey from implicit to explicit state. For example, Kubernetes manifests declare how much memory an application will need. This is necessary to make deployments&amp;rsquo; resources &lt;em&gt;calculable&lt;/em&gt;. But this requires more work from the software engineer, to estimate and declare the memory needed by the app.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
